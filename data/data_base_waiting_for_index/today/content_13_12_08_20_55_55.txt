
您还未登录！|登录|注册|帮助
 首页
 业界
 移动
 云计算
 研发
 论坛
 博客
 下载
 
更多
 







高爽|Coder 






目录视图
摘要视图
订阅
 . 



《这些年，我们读过的技术经典图书》主题有奖征文       专访李铁军：从医生到金山首席安全专家的转变      独一无二的职位：开源社区经理        CSDN博客第三期云计算最佳博主评选
 


Java线程(一)：线程安全与不安全 
.
 分类： Java进阶2012-04-02 12:1312965人阅读评论(40)收藏举报
 
javastruts多线程classhibernate


        作为一个Java web开发人员，很少也不需要去处理线程，因为服务器已经帮我们处理好了。记得大一刚学Java的时候，老师带着我们做了一个局域网聊天室，用到了AWT、Socket、多线程、I/O，编写的客户端和服务器，当时做出来很兴奋，回学校给同学们演示，感觉自己好NB，呵呵，扯远了。上次在百度开发者大会上看到一个提示语，自己写的代码，6个月不看也是别人的代码，自己学的知识也同样如此，学完的知识如果不使用或者不常常回顾，那么还不是自己的知识。大学零零散散搞了不到四年的Java，我相信很多人都跟我一样，JavaSE基础没打牢，就急忙忙、兴冲冲的搞JavaEE了，然后学习一下前台开发(html、css、javascript)，有可能还搞搞jquery、extjs，再然后是Struts、hibernate、spring，然后听说找工作得会linux、oracle，又去学，在这个过程中，是否迷失了，虽然学习面很广，但就像《神雕侠侣》中黄药师评价杨过，博而不精、杂而不纯，这一串下来，感觉做Java开发好难，并不是学着难，而是知识面太广了，又要精通这个，又要精通那个，这只是我迷茫时候的想法，现在我已经找到方向了。
 
        回归正题，当我们查看JDK API的时候，总会发现一些类说明写着，线程安全或者线程不安全，比如说StringBuilder中，有这么一句，“将StringBuilder 的实例用于多个线程是不安全的。如果需要这样的同步，则建议使用StringBuffer。 ”，那么下面手动创建一个线程不安全的类，然后在多线程中使用这个类，看看有什么效果。
 
        Count.java：
 






01.public class Count {  
02.    private int num;  
03.    public void count() {  
04.        for(int i = 1; i <= 10; i++) {  
05.            num += i;  
06.        }  
07.        System.out.println(Thread.currentThread().getName() + "-" + num);  
08.    }  
09.}  
        在这个类中的count方法是计算1一直加到10的和，并输出当前线程名和总和，我们期望的是每个线程都会输出55。 

        ThreadTest.java：
 






01.public class ThreadTest {  
02.    public static void main(String[] args) {  
03.        Runnable runnable = new Runnable() {  
04.            Count count = new Count();  
05.            public void run() {  
06.                count.count();  
07.            }  
08.        };  
09.        for(int i = 0; i < 10; i++) {  
10.            new Thread(runnable).start();  
11.        }  
12.    }  
13.}  
        这里启动了10个线程，看一下输出结果： 






01.Thread-0-55  
02.Thread-1-110  
03.Thread-2-165  
04.Thread-4-220  
05.Thread-5-275  
06.Thread-6-330  
07.Thread-3-385  
08.Thread-7-440  
09.Thread-8-495  
10.Thread-9-550  
        只有Thread-0线程输出的结果是我们期望的，而输出的是每次都累加的，这里累加的原因以后的博文会说明，那么要想得到我们期望的结果，有几种解决方案：
 
        1. 将Count中num变成count方法的局部变量；
 






01.public class Count {  
02.    public void count() {  
03.        int num = 0;  
04.        for(int i = 1; i <= 10; i++) {  
05.            num += i;  
06.        }  
07.        System.out.println(Thread.currentThread().getName() + "-" + num);  
08.    }  
09.}  
 
        2. 将线程类成员变量拿到run方法中；
 






01.public class ThreadTest4 {  
02.    public static void main(String[] args) {  
03.        Runnable runnable = new Runnable() {  
04.            public void run() {  
05.                Count count = new Count();  
06.                count.count();  
07.            }  
08.        };  
09.        for(int i = 0; i < 10; i++) {  
10.            new Thread(runnable).start();  
11.        }  
12.    }  
13.}   
 
        3. 每次启动一个线程使用不同的线程类，不推荐。
         上述测试，我们发现，存在成员变量的类用于多线程时是不安全的，而变量定义在方法内是线程安全的。想想在使用struts1时，不推荐创建成员变量，因为action是单例的，如果创建了成员变量，就会存在线程不安全的隐患，而struts2是每一次请求都会创建一个action，就不用考虑线程安全的问题。
 
        下一篇：Java线程(二)
 
        本文来自：高爽|Coder，原文地址：http://blog.csdn.net/ghsau/article/details/7421217。
 

分享到： 

上一篇：程序员的小笑话
下一篇：Java线程(二)：线程同步synchronized和volatile
 .
顶25踩1. 


查看评论
 
21楼 y8465279130 2013-08-21 17:51发表[回复] 同届校友啊, 我是电信院的. 惭愧惭愧, 才刚开始学习多线程. 向楼主学习!!!Re: 三千分之一的爱 2013-08-21 21:47发表[回复] 回复y8465279130：哈哈，校友啊20楼 pittzhangxy 2013-02-17 13:33发表[回复] ”但就像《神雕侠侣》中黄药师评价杨过，博而不精、杂而不纯，这一串下来，感觉做Java开发好难，并不是学着难，而是知识面太广了，又要精通这个，又要精通那个，这只是我迷茫时候的想法，现在我已经找到方向了。“ ---多谢博主分享，鄙人也面临此迷茫，但是却找不到方向，希望博主赐教“方向”。多谢！烦复！Re: 三千分之一的爱 2013-02-20 09:04发表[回复] 回复pittzhangxy：Java开发就是这样，知识面太广，要都有所涉猎，但是也要有精通的一面，比如精通前端或者后端或者数据库。19楼 liuhuan_tao 2013-01-12 03:27发表[回复] 这个问题主要出在多个线程共享了同一个runable类，和同一个Count类。而num是Count的成员变量，就导致了多个线程共享了同一个变量? 你说的隐患就在这里吗？Re: 三千分之一的爱 2013-01-12 10:32发表[回复] 回复liuhuan_tao：对，这篇文章主要说明的是成员变量有些时候是线程不安全的18楼 tomjava126 2012-12-06 13:53发表[回复] 因为栈内存中这就一个对象在，所以会出现累加的现象Re: 三千分之一的爱 2012-12-06 19:36发表[回复] 回复tomjava126：这只是偶然情况17楼 xunke515 2012-12-02 13:00发表[回复] 我中枪了...
"大学零零散散搞了不到四年的Java，我相信很多人都跟我一样，JavaSE基础没打牢，就急忙忙、兴冲冲的搞JavaEE了，然后学习一下前台开发(html、css、javascript)，有可能还搞搞jquery、extjs，再然后是Struts、hibernate、spring"Re: 三千分之一的爱 2012-12-04 18:01发表[回复] 回复xunke515：呵呵，中枪的人不少！16楼 洒家不拉风 2012-11-01 07:59发表[回复] 我都看不懂。新手。15楼 facome 2012-10-09 11:19发表[回复] 随便溜达看到了你的文章，高Re: 三千分之一的爱 2012-10-11 10:57发表[回复] 回复facome：多谢夸奖。14楼 qingqingdd1199 2012-08-30 13:44发表[回复] 楼主这个例子至少两点是不正确的：1、这个也不是共享变量的问题。num是实例变量，每个对象中都会有自己单独的num属性，所以不存在共享的问题。之所以num会被累加是因为此处只有一个对象，楼主的例子只是证明了一点：多个线程共享了一个对象！2、for循环的次数太少，同一个for循环没有被其他线程切断，具体说是num+没被切断，因为num+是非原子性操作，可以分为读和写两步操作，如果第一个线程再读num后被切断（假如此时num=1），这时第二个线程读到的num还是1，如果第二个线程读完以后没被其他线程切断，就会将num改为2，然后假如第一个线程这时候又抢到了执行机会，他会接着进行之前被切断的操作在num加1，由于线程一之前读到的num=1，他并不知道此刻别的线程已将num变成了2，所以他会在1的基础上对num加1，此时num还会是2，这就导致了线程的不安全……所以说此处的550是个偶然，原理上讲总结果会小于这个数！Re: echomad 2013-01-17 10:51发表[回复] 回复qingqingdd1199：正解！Re: 三千分之一的爱 2012-09-06 08:27发表[回复] 回复qingqingdd1199：说的非常正确，但是和我说的有冲突吗？13楼 aaaahuihui 2012-05-02 17:51发表[回复] 所以，楼主的例子基本没有达到共享变量，而是重新创造新的变量，也许楼主明白这个事实，但一开始我是被你误导了，相信别人也会。所以希望楼主以后写的考虑全面点Re: 三千分之一的爱 2012-05-03 20:22发表[回复] 回复aaaahuihui：哦，谢谢你的提议，不过这篇文章主要说明的是共享变量存在线程不安全的问题，而局部变量则不会。12楼 aaaahuihui 2012-05-02 17:48发表[回复] 而楼主将num从全局变量改为count的局部变量，每次调用count的方法，本身就会重新分配局部变量11楼 aaaahuihui 2012-05-02 17:43发表[回复] 楼主ThreadTest4类中将 Count count = new Count(); 放入run方法，每次执行start,就会实例化一个Count对象，每个对象的num一定都是55，这并没有证明是线程共享的10楼 liuxuandeyonghuming 2012-04-17 22:15发表[回复] 楼主厉害啊。Re: 三千分之一的爱 2012-04-18 09:24发表[回复] 回复liuxuandeyonghuming：过奖，我对线程的理解还很浅显9楼 wnczwl369 2012-04-16 09:19发表[回复] 对楼主的感慨有同感。8楼 c_79_68_69 2012-04-14 20:36发表[回复] for(int i = 1; i <= 10; i++) { 
num += i; 
} 
如果这个for循环扩大，即：在线程a执行期间内无法完成循环，就要执行线程b了，在这个转换的过程中，线程a的工作内存(线程栈)，是不是就和主内存完成了一次交互，等下一次再执行线程a的时候，再次从主内存中读取num存到自己的工作内存中？Re: 三千分之一的爱 2012-04-14 20:51发表[回复] 回复c_79_68_69：是的，num += i; 这行代码本身就不是一个原子操作。7楼 misstian_01 2012-04-11 17:06发表[回复] 楼主，JAVA SE是不是特别重要？只要SE学懂了，那个EE就很容易了嘛、？请指点下我吧！Re: 三千分之一的爱 2012-04-11 19:33发表[回复] 回复misstian_01：怎么说呢，EE的很多底层实现都是SE作为基础的，SE基础打的比较好的话，EE学起来就会很轻松，对很多原理理解的也很透，现在许多公司招聘应届生非常注重基础的。6楼 zzfgary 2012-04-07 11:00发表[回复] 哎，我也不知道啊，我也是学编程的，计算机信息管理专业的，我都没学什么，现在我也不知道方向是什么，有学html，sql，java，css，jsp，asp.net，总之没有一门是精通的，还有看着代码我的思维不灵敏，看了多了就烦了，怎么办啊，指点下明路啊，快毕业了，也不知道做什么好，悲哀。。。Re: 三千分之一的爱 2012-04-07 11:37发表[回复] 回复zzfgary：谈不上指点，你说那些都是大学开的课程，要看自己对什么方向有兴趣，学一门语言，短时间速成的方法是看视频，招工作之前再攻一下面试题，相信自己，没问题的。5楼 yunnysunny 2012-04-05 16:16发表[回复] 楼主举的第一个例子是不恰当的，虽然你在这个地方是用了for循环：





01.for(int i = 0; i < 10; i++) {    
02.           new Thread(runnable).start();    
03.       }    

但是由于适用了多线程，它的输出绝对是无序的。但是由于每次累加的时候都只有10个数，





01.<br>for(int i = 1; i <= 10; i++) {  <br>        num += i;  <br> }  <br>  

所以就把这个问题给掩盖住了。
假设你把上面那个for循环扩大一万倍，编程从1到100000累加，输出的各个线程绝对是无序的。Re: 三千分之一的爱 2012-04-05 20:19发表[回复] 回复yunnysunny：恩，你说的对，我那种输出结果是个巧合情况。4楼 weiythi 2012-04-05 16:08发表[回复] 你找到什么方向了？Re: 三千分之一的爱 2012-04-05 20:21发表[回复] 回复weiythi：也不算方向吧，近一年内先整理一下JavaSE，查缺补漏。逐渐领悟编程思想。3楼 Manlin1990 2012-04-02 15:13发表[回复] 不懂就要多看几遍咯Re: 三千分之一的爱 2012-04-02 16:30发表[回复] 回复Manlin1990：什么不懂？2楼 poem浅墨 2012-04-02 14:25发表[回复] 来串串门，加油~~Re: 三千分之一的爱 2012-04-02 14:52发表[回复] 回复zhmxy555：哈哈，谢谢支持，你的网站建设的怎么样了。1楼 weiythi 2012-04-02 12:19发表[回复] 很简单啊Re: 三千分之一的爱 2012-04-02 12:20发表[回复] 回复weiythi：慢慢来Re: weiythi 2012-04-03 13:22发表[回复] 回复ghsau：？？？what？
 


您还没有登录,请[登录]或[注册]
 
* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场
 








个人资料 

三千分之一的爱 





◦访问：128442次
◦积分：2377分
◦排名：第3359名
 . ◦原创：61篇
◦转载：24篇
◦译文：1篇
◦评论：270条
 . 

详细资料 
--------------------------------------------------------------------------------
姓名：高爽 
--------------------------------------------------------------------------------
生日：1989.6 
--------------------------------------------------------------------------------
学历：本科 
--------------------------------------------------------------------------------
学校：黑龙江科技大学 
--------------------------------------------------------------------------------
毕业：2012.7 
--------------------------------------------------------------------------------
微博：关注 
--------------------------------------------------------------------------------
爱好：乒乓球、旅行、摄影、LOL 
--------------------------------------------------------------------------------
邮箱&MSN：ghsau@163.com 
博客专栏




Design Pattern
文章：6篇
阅读：3717 





Java线程
文章：9篇
阅读：58065 

友情链接 酷壳 

阮一峰的网络日志 

曹胜欢的专栏 

Eric的Blog 

专注于AS3游戏算法及特效开发 

各种资源汇总 

如何用好 Google 搜索引擎？ 
文章分类 • 算法之道(2) 
• Java基础(14) 
• Java进阶(23) 
• Java Web(5) 
• Java Mail(1) 
• JavaScript(17) 
• Adobe Flex(11) 
• HTML/JS/CSS(10) 
• Oracle(2) 
• Integrated D E(9) 
• 非技术(4) 
• 软件开发(2) 
• NOSQL(1) 

文章存档 
2013年08月(5).
2013年07月(1).
2013年05月(1).
2013年04月(1).
2013年03月(1).
.
.
.
.
.
.
.
.
.
.
.
.
.

展开.
 
阅读排行 • Java线程(一)：线程安全与不安全(12965) 
• Java线程(二)：线程同步synchronized和volatile(11545) 
• Java线程(五)：线程池(8458) 
• Java线程(六)：Callable和Future(5978) 
• Java线程(四)：Timer和TimerTask(5709) 
• HTML发送邮件链接(5066) 
• Java线程(三)：线程协作-生产者/消费者模式(4925) 
• 史上最NB程序员的自白(4518) 
• Java线程(七)：锁对象Lock-同步问题更完美的处理方式(4067) 
• Java线程(八)：Condition-线程通信更高效的方式(3120) 

评论排行 • Java线程(一)：线程安全与不安全(40) 
• Java线程(五)：线程池(29) 
• 程序员的小笑话(19) 
• Java线程(二)：线程同步synchronized和volatile(19) 
• Aptana：JavaScript开发利器(14) 
• HTML发送邮件链接(10) 
• Java线程(篇外篇)：阻塞队列BlockingQueue(8) 
• Java线程(七)：锁对象Lock-同步问题更完美的处理方式(8) 
• Flex事件机制(二)(7) 
• 工厂方法模式(7) 

最新评论 •Java线程(一)：线程安全与不安全
三千分之一的爱: @y8465279130:哈哈，校友啊 

•Java线程(一)：线程安全与不安全
y8465279130: 同届校友啊, 我是电信院的. 惭愧惭愧, 才刚开始学习多线程. 向楼主学习!!! 

•关于List比较好玩的操作
三千分之一的爱: @hsj623:我试什么？从头遍历元素和从尾遍历元素区别？ 

•关于List比较好玩的操作
hsj623: @ghsau:相当的区别，LZ可以试一下 

•关于List比较好玩的操作
三千分之一的爱: @zczcmylove:这和i++有区别吗，一样会漏掉元素。 

•关于List比较好玩的操作
zczcmylove: 可以使用for(int i = intList.size()-1; i >= 0; i--) { 

•登录之找回密码
三千分之一的爱: @dongjianwan:呵呵，文中的处理方式还有些不安全。 

•登录之找回密码
dongjianwan: 我也是来这里学习了，楼主的思路很清晰啊 

•Java线程(七)：锁对象Lock-同步问题更完美的处理方式
wy554332466: 学长加个q1292658152 ，不懂的交流一下 

•Java线程(七)：锁对象Lock-同步问题更完美的处理方式
三千分之一的爱: @wy554332466:嗯 



. 
公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告QQ客服 微博客服 论坛反馈 联系邮箱：webmaster@csdn.net 服务热线：400-600-2320京 ICP 证 070598 号北京创新乐知信息技术有限公司 版权所有世纪乐知(北京)网络技术有限公司 提供技术支持江苏乐知网络技术有限公司 提供商务支持Copyright © 1999-2012, CSDN.NET, All Rights Reserved  
