返回主页 飞扬天下
革命战争是群众的战争，只有动员群众才能进行战争，只有依靠群众才能进行战争。
—毛泽东,→
博客园
首页
博问
闪存
新随笔
联系
订阅
管理
do...while(0)的妙用
在C++中，有三种类型的循环语句：for, while, 和do...while， 但是在一般应用中作循环时， 我们可能用for和while要多一些，do...while相对不受重视。
    但是，最近在读我们项目的代码时，却发现了do...while的一些十分聪明的用法，不是用来做循环，而是用作其他来提高代码的健壮性。
1. do...while(0)消除goto语句。
通常，如果在一个函数中开始要分配一些资源，然后在中途执行过程中如果遇到错误则退出函数，当然，退出前先释放资源，我们的代码可能是这样：
version 1

bool Execute()
{
   // 分配资源
   int *p = new int;
   bool bOk(true);

   // 执行并进行错误处理
   bOk = func1();
   if(!bOk) 
   {
      delete p;   
      p = NULL;
      return false;
   }

   bOk = func2();
   if(!bOk) 
   {
      delete p;   
      p = NULL;
      return false;
   }

   bOk = func3();
   if(!bOk) 
   {
      delete p;   
      p = NULL;
      return false;
   }

   // ..........

   // 执行成功，释放资源并返回
    delete p;   
    p = NULL;
    return true;
   
}


这里一个最大的问题就是代码的冗余，而且我每增加一个操作，就需要做相应的错误处理，非常不灵活。于是我们想到了goto:
version 2
bool Execute()
{
   // 分配资源
   int *p = new int;
   bool bOk(true);

   // 执行并进行错误处理
   bOk = func1();
   if(!bOk) goto errorhandle;

   bOk = func2();
   if(!bOk) goto errorhandle;

   bOk = func3();
   if(!bOk) goto errorhandle;

   // ..........

   // 执行成功，释放资源并返回
    delete p;   
    p = NULL;
    return true;

errorhandle:
    delete p;   
    p = NULL;
    return false;
   
}


代码冗余是消除了，但是我们引入了C++中身份比较微妙的goto语句，虽然正确的使用goto可以大大提高程序的灵活性与简洁性，但太灵活的东西往往是很危险的，它会让我们的程序捉摸不定，那么怎么才能避免使用goto语句，又能消除代码冗余呢，请看do...while(0)循环：
version3

bool Execute()
{
   // 分配资源
   int *p = new int;

   bool bOk(true);
   do
   {
      // 执行并进行错误处理
      bOk = func1();
      if(!bOk) break;

      bOk = func2();
      if(!bOk) break;

      bOk = func3();
      if(!bOk) break;

      // ..........

   }while(0);

    // 释放资源
    delete p;   
    p = NULL;
    return bOk;
   
}


“漂亮！”， 看代码就行了，啥都不用说了...

2 宏定义中的do...while(0)
  如果你是C++程序员，我有理由相信你用过，或者接触过，至少听说过MFC, 在MFC的afx.h文件里面， 你会发现很多宏定义都是用了do...while(0)或do...while(false)， 比如说：
#define AFXASSUME(cond)       do { bool __afx_condVal=!!(cond); ASSERT(__afx_condVal); __analysis_assume(__afx_condVal); } while(0) 
粗看我们就会觉得很奇怪，既然循环里面只执行了一次，我要这个看似多余的do...while(0)有什么意义呢？ 
当然有！
为了看起来更清晰，这里用一个简单点的宏来演示：
#define SAFE_DELETE(p) do{ delete p; p = NULL} while(0)
假设这里去掉do...while(0),
#define SAFE_DELETE(p) delete p; p = NULL;
那么以下代码：
if(NULL != p) SAFE_DELETE(p)
else   ...do sth...
就有两个问题，
1) 因为if分支后有两个语句，else分支没有对应的if，编译失败
2) 假设没有else, SAFE_DELETE中的第二个语句无论if测试是否通过，会永远执行。
你可能发现，为了避免这两个问题，我不一定要用这个令人费解的do...while,  我直接用{}括起来就可以了
#define SAFE_DELETE(p) { delete p; p = NULL;}
的确，这样的话上面的问题是不存在了，但是我想对于C++程序员来讲，在每个语句后面加分号是一种约定俗成的习惯，这样的话，以下代码:
if(NULL != p) SAFE_DELETE(p);
else   ...do sth...
其else分支就无法通过编译了（原因同上），所以采用do...while(0)是做好的选择了。

也许你会说，我们代码的习惯是在每个判断后面加上{}, 就不会有这种问题了，也就不需要do...while了，如：
if(...) 
{
}
else
{
}
诚然，这是一个好的，应该提倡的编程习惯，但一般这样的宏都是作为library的一部分出现的，而对于一个library的作者，他所要做的就是让其库具有通用性，强壮性，因此他不能有任何对库的使用者的假设，如其编码规范，技术水平等。 

 
我最擅长从零开始创造世界，所以从来不怕失败，它最多也就让我一无所有。
分类: Win32&MFC
绿色通道： 好文要顶 关注我 收藏该文与我联系 
至尊王者
关注 - 0
粉丝 - 79
+加关注
7 0
(请您对文章做出评价)
« 上一篇：双节棍(C语言版) 
» 下一篇：Winsock工作模型 ( 转 ) 
posted @ 2008-01-18 17:00 至尊王者 阅读(29662) 评论(11) 编辑 收藏

评论列表
   #1楼 2008-03-25 18:01 aaddcc[未注册用户]
嘿嘿 不错不错，怪不得老见这样的用法呢
   #2楼 2008-10-04 09:57 ooseven[未注册用户]
学习了！感谢作者的分析
   #3楼 2009-01-05 00:22 angg[未注册用户]
好 学习了 多谢总结
   #4楼 2009-02-07 11:41 phoenie[未注册用户]
分析得挺到位，谢了
   #5楼 2009-11-20 19:13 mazhuang[未注册用户]
茅塞顿开！！！
多谢分享指点。
   #6楼 2009-12-10 17:43 Jeremiah[未注册用户]
你写错了ms，应该是这样比较好：

do
{
// 执行并进行错误处理
bOk = func1();
if(!bOk) break;

bOk = func2();
if(!bOk) break;

bOk = func3();
if(!bOk) break;

// // 执行成功，释放资源并返回
delete p; 
p = NULL;
return bOk;

}while(0);

// 出错，释放资源，返回false
delete p; 
p = NULL;
return !bOk;
   #7楼 2010-09-02 17:37 Dbger  
忽见我的文章~~~
呃，转载还是说明一下的好
支持(3)反对(0)
   #8楼 2010-12-10 10:31 小糊涂神  
非常感谢。
支持(0)反对(0)
   #9楼 2011-12-06 17:15 有趣之极  
漂亮
支持(0)反对(0)
   #10楼 2013-02-22 08:58 lizhi<ibox>  
鄙视转载不写出处。。。。。。。。。。。。。。。。。。。。。。。。。。。。。
支持(0)反对(0)
   #11楼 2013-05-21 09:51 常忏悔  
感谢楼主分享，其中宏定义那个又一次面试的时候还被面试官问到了，当时自己答得沾点边，但是还是楼主的解释更详细全面，多谢指点！
支持(0)反对(0)
刷新评论刷新页面返回顶部
注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。
博客园首页博问新闻闪存程序员招聘知识库

最新IT新闻:
· 微软：NSA是顽固的网络威胁
· 中国希望微软延长Windows XP支持
· 衰老细胞与癌细胞共享特征
· 支付宝进军线下瞄准社交支付：AA付款功能曝光
· 敏捷开发的6个实战经验
» 更多新闻...
最新知识库文章:
· 数字证书及CA的扫盲介绍
· 领域驱动设计和实践
· 编码风格不是编码规范
· 对于现代开发来说，Javascript就是一种垃圾语言
· 教你一眼认出英语单词的意思
» 更多知识库文章...
公告

从矩阵到锡安，我们携手同行，一起追寻生命的真实。 
灵魂，也只不过是一套程序而已。 
Translate this page
Microsoft® Translator
 Locations of visitors to this page
昵称：至尊王者
园龄：9年3个月
粉丝：79
关注：0
+加关注
<	2008年1月	>
日	一	二	三	四	五	六
30	31	1	2	3	4	5
6	7	8	9	10	11	12
13	14	15	16	17	18	19
20	21	22	23	24	25	26
27	28	29	30	31	1	2
3	4	5	6	7	8	9
搜索

 
 
我的标签

PHP(2)
Zune(2)
Git(2)
idea(1)
IrfanView(1)
js(1)
Keygen(1)
Microsoft(1)
P2P上传(1)
崩溃(1)
更多
随笔分类(585)

.NET(C#)(7)
AS3(4)
Chinese kungfu(5)
Linux(1)
Win32&MFC(113)
XML(5)
安全&驱动(23)
程序员的灯下黑(37)
企业管理(5)
网络(16)
想写啥就写啥(158)
医学(19)
游戏(20)
游戏开发(172)
随笔档案(583)

2013年12月 (1)
2013年11月 (4)
2013年10月 (2)
2013年9月 (6)
2013年8月 (1)
2013年7月 (3)
2013年6月 (3)
2013年5月 (1)
2013年4月 (3)
2013年2月 (5)
2011年11月 (1)
2011年6月 (1)
2011年2月 (1)
2010年11月 (2)
2010年10月 (2)
2010年8月 (1)
2010年7月 (1)
2010年6月 (4)
2010年5月 (2)
2010年4月 (11)
2010年3月 (2)
2010年2月 (1)
2010年1月 (2)
2009年12月 (1)
2009年11月 (2)
2009年9月 (1)
2009年8月 (3)
2009年7月 (2)
2009年6月 (4)
2009年5月 (7)
2009年4月 (4)
2009年3月 (9)
2009年1月 (5)
2008年12月 (16)
2008年11月 (3)
2008年10月 (4)
2008年9月 (7)
2008年8月 (11)
2008年7月 (5)
2008年6月 (11)
2008年5月 (20)
2008年4月 (22)
2008年3月 (50)
2008年1月 (16)
2007年12月 (15)
2007年11月 (35)
2007年10月 (33)
2007年9月 (43)
2007年8月 (48)
2007年7月 (28)
2007年6月 (11)
2007年5月 (18)
2007年4月 (9)
2007年3月 (14)
2007年2月 (2)
2007年1月 (1)
2006年12月 (1)
2006年11月 (5)
2006年10月 (4)
2006年9月 (3)
2006年6月 (2)
2006年3月 (1)
2006年1月 (2)
2005年12月 (3)
2005年11月 (2)
2005年10月 (3)
2005年8月 (2)
2005年7月 (3)
2005年6月 (2)
2005年5月 (3)
2005年4月 (5)
2004年11月 (6)
2004年10月 (16)
编程

Anti Protect
CS作弊器
iWinPhone7.com Windows Phone 7
MSDN
MSDN 中文网站
plusplus
VCHELP
VC知识库
暗组论坛
博客园
侯捷网站
邪恶八进制信息安全团队
好友们的blogs

flyingbat2 (rss)
liflag888的专栏 (rss)
rise studio (rss)
zdl1016的专栏 (rss)
暴走小鸡 (rss)
李蔚的心情驿站
迷糊小亚的专栏 (rss)
森的BLOG (rss)
天外飞仙的博客
下载

netYi专业电脑电子书库
飞秋工作室
华军软件园
深度论坛
天空软件站
游戏

Replays.Net
积分与排名

积分 -	366441
排名 -	212
阅读排行榜

1. do...while(0)的妙用(29663)
2. 理解I/O Completion Port(完成端口)(19272)
3. 教你快速下载fs2you.com网盘的文件(17991)
4. VS2010 Ultimate英文版下载(15709)
5. Windows任务管理器不显示用户名的解决方法(15501)
6. 人物分析：宋江/刘备/唐僧的无能之能(11526)
7. MD5算法的C++实现 (11295)
8. 使用VMware虚拟磁盘管理工具调整磁盘大小(6937)
9. 何编写网络监视器(6653)
10. C++位运算(6480)
11. #pragma 用法(6274)
12. Windows调试器及不同平台符号包下载地址(收集)(6133)
13. 如何集中注意力(6110)
14. 一些游戏编程的书[转](5921)
15. DirectX9.0教程之ID3DXSprite篇[转载](5342)
16. GetAsyncKeyState()与GetKeyboardState()(4983)
17. Symantec 的i32更新包与x86更新包的区别(4853)
18. GB2312转unicode程序(4743)
19. TinyXML中文文档(4647)
20. 微软研究院Detour开发包之API拦截技术(4387)
Copyright ©2013 至尊王者
