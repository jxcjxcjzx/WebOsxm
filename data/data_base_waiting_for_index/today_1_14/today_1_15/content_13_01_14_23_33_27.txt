






Apache Hadoop


From Wikipedia, the free encyclopedia

  (Redirected from Hadoop)

 Jump to: navigation, search

 
Apache Hadoop
 






Developer(s)
 
Apache Software Foundation
 


Stable release
 
1.0.4 / October 12, 2012; 3 months ago
 


Preview release
 
2.0.2 / October 9, 2012; 3 months ago
 


Development status
 
Active
 


Written in
 
Java
 


Operating system
 
Cross-platform
 


Type
 
Distributed File System
 


License
 
Apache License 2.0
 


Website
 
hadoop.apache.org
 

Apache Hadoop is an open-source software framework that supports data-intensive distributed applications, licensed under the Apache v2 license. It supports the running of applications on large clusters of commodity hardware. The Hadoop framework transparently provides both reliability and data motion to applications. Hadoop implements a computational paradigm named map/reduce, where the application is divided into many small fragments of work, each of which may be executed or re-executed on any node in the cluster. In addition, it provides a distributed file system that stores data on the compute nodes, providing very high aggregate bandwidth across the cluster. Both map/reduce and the distributed file system are designed so that node failures are automatically handled by the framework.[1] It enables applications to work with thousands of computation-independent computers and petabytes of data. Hadoop was derived from Google's MapReduce and Google File System (GFS) papers.
 
The entire Apache Hadoop “platform” is now commonly considered to consist of the Hadoop kernel, MapReduce and Hadoop Distributed File System (HDFS), as well as a number of related projects – including Apache Hive, Apache HBase, and others.[2]
 
Hadoop is written in the Java programming language and is a top-level Apache project being built and used by a global community of contributors.[3] Hadoop and its related projects (Hive, HBase, Zookeeper, and so on) have many contributors from across the ecosystem.[4]
 




Contents
  [hide]  1 History
 2 Architecture 2.1 Filesystems 2.1.1 Hadoop Distributed File System
 2.1.2 Other Filesystems
 
2.2 JobTracker and TaskTracker: the MapReduce engine 2.2.1 Scheduling 2.2.1.1 Fair scheduler
 2.2.1.2 Capacity scheduler
 

2.3 Other applications
 
3 Prominent users 3.1 Yahoo!
 3.2 Facebook
 3.3 Other users
 
4 Hadoop on Amazon EC2/S3 services 4.1 Amazon Elastic MapReduce
 
5 Industry Support of Academic Clusters
 6 Running Hadoop in compute farm environments 6.1 Grid Engine Integration
 6.2 Condor Integration
 
7 Commercially supported Hadoop-related products 7.1 ASF's view on the use of "Hadoop" in product names
 
8 Papers
 9 See also
 10 References
 11 Bibliography
 12 External links
 

[edit] History
 
Hadoop was created by Doug Cutting and Michael J. Cafarella.[5] Doug, who was working at Yahoo at the time,[6] named it after his son's toy elephant.[7] It was originally developed to support distribution for the Nutch search engine project.[8]
 
[edit] Architecture
 
Hadoop consists of the Hadoop Common which provides access to the filesystems supported by Hadoop. The Hadoop Common package contains the necessary JAR files and scripts needed to start Hadoop. The package also provides source code, documentation, and a contribution section which includes projects from the Hadoop Community.[citation needed]
 
For effective scheduling of work, every Hadoop-compatible filesystem should provide location awareness: the name of the rack (more precisely, of the network switch) where a worker node is. Hadoop applications can use this information to run work on the node where the data is, and, failing that, on the same rack/switch, reducing backbone traffic. The Hadoop Distributed File System (HDFS) uses this when replicating data, to try to keep different copies of the data on different racks. The goal is to reduce the impact of a rack power outage or switch failure so that even if these events occur, the data may still be readable.[9]
 




A multi-node Hadoop cluster 
A small Hadoop cluster will include a single master and multiple worker nodes. The master node consists of a JobTracker, TaskTracker, NameNode, and DataNode. A slave or worker node acts as both a DataNode and TaskTracker, though it is possible to have data-only worker nodes, and compute-only worker nodes; these are normally only used in non-standard applications.[citation needed] Hadoop requires JRE 1.6 or higher. The standard startup and shutdown scripts require ssh to be set up between nodes in the cluster.[citation needed]
 
In a larger cluster, the HDFS is managed through a dedicated NameNode server to host the filesystem index, and a secondary NameNode that can generate snapshots of the namenode's memory structures, thus preventing filesystem corruption and reducing loss of data. Similarly, a standalone JobTracker server can manage job scheduling. In clusters where the Hadoop MapReduce engine is deployed against an alternate filesystem, the NameNode, secondary NameNode and DataNode architecture of HDFS is replaced by the filesystem-specific equivalent.[citation needed]
 
[edit] Filesystems
 
[edit] Hadoop Distributed File System
 
HDFS is a distributed, scalable, and portable filesystem written in Java for the Hadoop framework. Each node in a Hadoop instance typically has a single namenode; a cluster of datanodes form the HDFS cluster. The situation is typical because each node does not require a datanode to be present. Each datanode serves up blocks of data over the network using a block protocol specific to HDFS. The filesystem uses the TCP/IP layer for communication; clients use RPC to communicate between each other. HDFS stores large files (an ideal file size is a multiple of 64 MB[10]), across multiple machines. It achieves reliability by replicating the data across multiple hosts, and hence does not require RAID storage on hosts. With the default replication value, 3, data is stored on three nodes: two on the same rack, and one on a different rack. Data nodes can talk to each other to rebalance data, to move copies around, and to keep the replication of data high. HDFS is not fully POSIX compliant because the requirements for a POSIX filesystem differ from the target goals for a Hadoop application. The tradeoff of not having a fully POSIX compliant filesystem is increased performance for data throughput. HDFS was designed to handle very large files.[10]
 
HDFS has recently added high-availability capabilities, allowing the main metadata server (the Namenode) to be manually failed over to a backup in the event of failure. Automatic failover is being developed as well. Additionally, the filesystem includes what is called a Secondary Namenode, which misleads some people into thinking that when the Primary Namenode goes offline, the Secondary Namenode takes over. In fact, the Secondary Namenode regularly connects with the Primary Namenode and builds snapshots of the Primary Namenode's directory information, which is then saved to local/remote directories. These checkpointed images can be used to restart a failed Primary Namenode without having to replay the entire journal of filesystem actions, then edit the log to create an up-to-date directory structure. Since Namenode is the single point for storage and management of metadata, this can be a bottleneck for supporting a huge number of files, especially a large number of small files. HDFS Federation is a new addition which aims to tackle this problem to a certain extent by allowing multiple namespaces served by separate Namenodes .
 
An advantage of using HDFS is data awareness between the jobtracker and tasktracker. The jobtracker schedules map/reduce jobs to tasktrackers with an awareness of the data location. An example of this would be if node A contained data (x,y,z) and node B contained data (a,b,c). The jobtracker will schedule node B to perform map/reduce tasks on (a,b,c) and node A would be scheduled to perform map/reduce tasks on (x,y,z). This reduces the amount of traffic that goes over the network and prevents unnecessary data transfer. When Hadoop is used with other filesystems this advantage is not always available. This can have a significant impact on the performance of job completion times, which has been demonstrated when running data intensive jobs.[11]
 
Another limitation of HDFS is that it cannot be directly mounted by an existing operating system. Getting data into and out of the HDFS file system, an action that often needs to be performed before and after executing a job, can be inconvenient. A Filesystem in Userspace (FUSE) virtual file system has been developed to address this problem, at least for Linux and some other Unix systems.
 
File access can be achieved through the native Java API, the Thrift API to generate a client in the language of the users' choosing (C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, Smalltalk, and OCaml), the command-line interface, or browsed through the HDFS-UI webapp over HTTP.
 
[edit] Other Filesystems
 
By May 2011, the list of supported filesystems included:
 HDFS: Hadoop's own rack-aware filesystem.[12] This is designed to scale to tens of petabytes of storage and runs on top of the filesystems of the underlying operating systems.
 Amazon S3 filesystem. This is targeted at clusters hosted on the Amazon Elastic Compute Cloud server-on-demand infrastructure. There is no rack-awareness in this filesystem, as it is all remote.
 CloudStore (previously Kosmos Distributed File System), which is rack-aware.
 FTP Filesystem: this stores all its data on remotely accessible FTP servers.
 Read-only HTTP and HTTPS file systems.
 
Hadoop can work directly with any distributed file system that can be mounted by the underlying operating system simply by using a file:// URL; however, this comes at a price: the loss of locality. To reduce network traffic, Hadoop needs to know which servers are closest to the data; this is information that Hadoop-specific filesystem bridges can provide.
 
Out-of-the-box, this includes Amazon S3, and the CloudStore filestore, through s3:// and kfs:// URLs directly.
 
A number of third party filesystem bridges have also been written, none of which are currently in Hadoop distributions.
 In 2009 IBM discussed running Hadoop over the IBM General Parallel File System.[13] The source code was published in October 2009.[14]
 In April 2010, Parascale published the source code to run Hadoop against the Parascale filesystem.[15]
 In April 2010, Appistry released a Hadoop filesystem driver for use with its own CloudIQ Storage product.[16]
 In June 2010, HP discussed a location-aware IBRIX Fusion filesystem driver.[17]
 In May 2011, MapR Technologies, Inc. announced the availability of an alternate filesystem for Hadoop, which replaced the HDFS file system with a full random-access read/write file system, with advanced features like snaphots and mirrors, and get rid of the single point of failure issue of the default HDFS NameNode.
 
[edit] JobTracker and TaskTracker: the MapReduce engine
 
Above the file systems comes the MapReduce engine, which consists of one JobTracker, to which client applications submit MapReduce jobs. The JobTracker pushes work out to available TaskTracker nodes in the cluster, striving to keep the work as close to the data as possible. With a rack-aware filesystem, the JobTracker knows which node contains the data, and which other machines are nearby. If the work cannot be hosted on the actual node where the data resides, priority is given to nodes in the same rack. This reduces network traffic on the main backbone network. If a TaskTracker fails or times out, that part of the job is rescheduled. The TaskTracker on each node spawns off a separate Java Virtual Machine process to prevent the TaskTracker itself from failing if the running job crashes the JVM. A heartbeat is sent from the TaskTracker to the JobTracker every few minutes to check its status. The Job Tracker and TaskTracker status and information is exposed by Jetty and can be viewed from a web browser.
 
If the JobTracker failed on Hadoop 0.20 or earlier, all ongoing work was lost. Hadoop version 0.21 added some checkpointing to this process; the JobTracker records what it is up to in the filesystem. When a JobTracker starts up, it looks for any such data, so that it can restart work from where it left off. In earlier versions of Hadoop, all active work was lost when a JobTracker restarted.
 
Known limitations of this approach are:
 The allocation of work to TaskTrackers is very simple. Every TaskTracker has a number of available slots (such as "4 slots"). Every active map or reduce task takes up one slot. The Job Tracker allocates work to the tracker nearest to the data with an available slot. There is no consideration of the current system load of the allocated machine, and hence its actual availability.
 If one TaskTracker is very slow, it can delay the entire MapReduce job - especially towards the end of a job, where everything can end up waiting for the slowest task. With speculative execution enabled, however, a single task can be executed on multiple slave nodes.
 
[edit] Scheduling
 
By default Hadoop uses FIFO, and optional 5 scheduling priorities to schedule jobs from a work queue.[18] In version 0.19 the job scheduler was refactored out of the JobTracker, and added the ability to use an alternate scheduler (such as the Fair scheduler or the Capacity scheduler).[19]
 
[edit] Fair scheduler
 
The fair scheduler was developed by Facebook. The goal of the fair scheduler is to provide fast response times for small jobs and QoS for production jobs. The fair scheduler has three basic concepts.[20]
 1.Jobs are grouped into Pools.
 2.Each pool is assigned a guaranteed minimum share.
 3.Excess capacity is split between jobs.
 
By default, jobs that are uncategorized go into a default pool. Pools have to specify the minimum number of map slots, reduce slots, and a limit on the number of running jobs.
 
[edit] Capacity scheduler
 
The capacity scheduler was developed by Yahoo. The capacity scheduler supports several features which are similar to the fair scheduler.[21]
 Jobs are submitted into queues.
 Queues are allocated a fraction of the total resource capacity.
 Free resources are allocated to queues beyond their total capacity.
 Within a queue a job with a high level of priority will have access to the queue's resources.
 
There is no preemption once a job is running.
 
[edit] Other applications
 
The HDFS filesystem is not restricted to MapReduce jobs. It can be used for other applications, many of which are under development at Apache. The list includes the HBase database, the Apache Mahout machine learning system, and the Apache Hive Data Warehouse system. Hadoop can in theory be used for any sort of work that is batch-oriented rather than real-time, that is very data-intensive, and able to work on pieces of the data in parallel. As of October 2009, commercial applications of Hadoop[22] included:
 Log and/or clickstream analysis of various kinds
 Marketing analytics
 Machine learning and/or sophisticated data mining
 Image processing
 Processing of XML messages
 Web crawling and/or text processing
 General archiving, including of relational/tabular data, e.g. for compliance
 
[edit] Prominent users
 
[edit] Yahoo!
 
On February 19, 2008, Yahoo! Inc. launched what it claimed was the world's largest Hadoop production application. The Yahoo! Search Webmap is a Hadoop application that runs on a more than 10,000 core Linux cluster and produces data that is now used in every Yahoo! Web search query.[23]
 
There are multiple Hadoop clusters at Yahoo!, and no HDFS filesystems or MapReduce jobs are split across multiple datacenters. Every hadoop cluster node bootstraps the Linux image, including the Hadoop distribution. Work that the clusters perform is known to include the index calculations for the Yahoo! search engine.
 
On June 10, 2009, Yahoo! made available the source code to the version of Hadoop it runs in production.[24] Yahoo! contributes back all work it does on Hadoop to the open-source community. The company's developers also fix bugs and provide stability improvements internally, and release this patched source code so that other users may benefit from their effort.
 
[edit] Facebook
 
In 2010 Facebook claimed that they had the largest Hadoop cluster in the world with 21 PB of storage.[25] On July 27, 2011 they announced the data had grown to 30 PB.[26] On June 13, 2012 they announced the data had grown to 100 PB.[27] On November 8, 2012 they announced the warehouse grows by roughly half a PB per day.[28]
 
[edit] Other users
 
Besides Facebook and Yahoo!, many other organizations are using Hadoop to run large distributed computations. Some of the notable users include:[3]
 
Amazon.com
 Ancestry.com[29]
 Akamai
 American Airlines
 AOL
 Apple[30]
 eBay
 Hortonworks
 Federal Reserve Board of Governors
 Foursquare
 Fox Interactive Media
 Gemvara
 Google
 Hewlett-Packard
 IBM
 ImageShack
 ISI
 InMobi[31]
 Intuit
 Joost
 Last.fm
 LinkedIn[32]
 Microsoft[33]
 NetApp
 Netflix[34]
 Riot Games
 Risk Management Solutions (RMS)
 The New York Times
 SAP AG[35]
 SAS Institute[36]
 StumbleUpon[37]
 Twitter
 Yodlee
 
[edit] Hadoop on Amazon EC2/S3 services
 
It is possible to run Hadoop on Amazon Elastic Compute Cloud (EC2) and Amazon Simple Storage Service (S3).[38] As an example The New York Times used 100 Amazon EC2 instances and a Hadoop application to process 4 TB of raw image TIFF data (stored in S3) into 11 million finished PDFs in the space of 24 hours at a computation cost of about $240 (not including bandwidth).[39]
 
There is support for the S3 filesystem in Hadoop distributions, and the Hadoop team generates EC2 machine images after every release. From a pure performance perspective, Hadoop on S3/EC2 is inefficient, as the S3 filesystem is remote and delays returning from every write operation until the data is guaranteed not to be lost. This removes the locality advantages of Hadoop, which schedules work near data to save on network load.
 
[edit] Amazon Elastic MapReduce
 
Elastic MapReduce was introduced by Amazon in April 2009. Provisioning of the Hadoop cluster, running and terminating jobs, and handling data transfer between EC2 and S3 are automated by Elastic MapReduce. Apache Hive, which is built on top of Hadoop for providing data warehouse services, is also offered in Elastic MapReduce.[40]
 
Support for using Spot Instances was later added in August 2011.[41] Elastic MapReduce is fault tolerant for slave failures,[42] and it is recommended to only run the Task Instance Group on spot instances to take advantage of the lower cost while maintaining availability.[43]
 
In June 2012, premium options for EMR were added which replace ordinary Hadoop with MapR's M3 and M5 versions. These options provide additional capabilities over and above what the default EMR offering provides.[44] [45]
 
[edit] Industry Support of Academic Clusters
 
IBM and Google announced an initiative in 2007 to use Hadoop to support university courses in distributed computer programming.[46]
 
In 2008 this collaboration, the Academic Cloud Computing Initiative (ACCI), partnered with the National Science Foundation to provide grant funding to academic researchers interested in exploring large-data applications. This resulted in the creation of the Cluster Exploratory (CLuE) program.[47]
 
[edit] Running Hadoop in compute farm environments
 
Hadoop can also be used in compute farms and high-performance computing environments. Instead of setting up a dedicated Hadoop cluster, an existing compute farm can be used if the resource manager of the cluster is aware of the Hadoop jobs, and thus Hadoop jobs can be scheduled like other jobs in the cluster.
 
[edit] Grid Engine Integration
 
Integration with Sun Grid Engine was released in 2008, and running Hadoop on Sun Grid (Sun's on-demand utility computing service) was possible.[48] In the initial implementation of the integration, the CPU-time scheduler has no knowledge of the locality of the data. Unfortunately, this means that the processing is not always done on the same rack as the data; this was a key feature of the Hadoop Runtime. An improved integration with data-locality was announced during the Sun HPC Software Workshop '09.[49]
 
In 2008-2009 Sun released the Hadoop Live CD OpenSolaris project, which allows running a fully functional Hadoop cluster using a live CD.[50] This distribution includes Hadoop 0.19 -as of April 2010 there has not been an updated release.
 
[edit] Condor Integration
 
The Condor High-Throughput Computing System integration was presented at the Condor Week conference in 2010.[51]
 
[edit] Commercially supported Hadoop-related products
 
There are a number of companies offering commercial implementations and/or providing support for Hadoop.[52]
 Cloudera offers CDH (Cloudera's Distribution including Apache Hadoop) and Cloudera Enterprise.[53]
 IBM offers WebSphere eXtreme Scale (formerly ObjectGrid)[54] which includes two styles of the HADOOP map-reduce pattern in its "agents" a.k.a. DataGrid APIs. Together with its scalable distributed data cache capability, it gives both map-reduce's ability to parallelize function and the ability to store plenty of data (in memory) for the function to quickly access. It's transactional and highly available, too.
 IBM offers InfoSphere BigInsights[55] based on Hadoop in both a basic and enterprise edition.[56]
 Talend offers Talend Open Studio for Big Data,[57] released under the Apache Software License, that includes native support for Apache Hadoop.
 Zettaset offers new version of its Big Data Mgt Platform[58] based on Hadoop. Zettaset's Big Data Platform delivers High Availability via NameNode Failover, a streamlined UI, network Time Protocol and built in security via Kerberos Authentication
 In May 2010, Pentaho announced support for Apache Hadoop allowing companies to access data integration and business analytics directly against Apache Hadoop based distributions of Hadoop.[59] In January 2012, Pentaho announced they made their big data integration capabilities freely under open source, and moved the entire Pentaho Kettle (data integration engine) project from the LGPL license to the Apache License.[60]
 In March 2011, Platform Computing announced support for the Hadoop MapReduce API in its Symphony software.[61]
 In May 2011, MapR Technologies, Inc. announced the availability of their distributed filesystem and MapReduce engine, the MapR Distribution for Apache Hadoop.[62] The MapR product includes most Hadoop eco-system components and adds capabilities such as snapshots, mirrors, NFS access and full read-write file semantics.[63] MapR's distribution was selected by Amazon to provide premium versions of the Elastic Map Reduce (EMR) service.[45]
 Silicon Graphics International offers Hadoop optimized solutions based on the SGI Rackable and CloudRack server lines with implementation services.[64]
 EMC released EMC Greenplum Community Edition and EMC Greenplum HD Enterprise Edition in May 2011. The community edition, with optional for-fee technical support, consists of Hadoop, HDFS, HBase, Hive, and the ZooKeeper configuration service. The enterprise edition is an offering based on the MapR product, and offers proprietary features such as snapshots and wide area replication.[65]
 In June 2011, Yahoo! and Benchmark Capital formed Hortonworks Inc., whose focus is on making Hadoop more robust and easier to install, manage and use for enterprise users.[66]
 Google added AppEngine-MapReduce to support running Hadoop 0.20 programs on Google App Engine.[67][68]
 In Oct 2011, Oracle announced the Big Data Appliance, which integrates Cloudera's Distribution Including Hadoop (CDH), Oracle Enterprise Linux, the R programming language, and a NoSQL database with the Exadata hardware.[69][70]
 OceanSync Hadoop Management and Visualization Software allows users to control, monitor, and visualize all aspects of a Hadoop cluster including data analytic workflow management and output data processing visualization. The package is offered in three versions, OceanSync Free Desktop Edition, OceanSync Enterprise Edition with Visualization, and OceanSync Mobile for iPhone/Android devices, by Dovestech.[71]
 Grand Logic's JobServer[72] product allows developers and admins to deploy, manage and monitor their Hadoop infrastructure, with support for Hadoop job processing and HDFS file/content management.
 Dell added Pentaho Business Analytics to the Dell Apache Hadoop solution for big data analytics which consists of Dell servers, Dell networking components, Dell's Crowbar cloud deployment framework open source software, and Cloudera Distribution including Apache Hadoop (CDH).[73]
 
[edit] ASF's view on the use of "Hadoop" in product names
 
The Apache Software Foundation has stated that only software officially released by the Apache Hadoop Project can be called Apache Hadoop or Distributions of Apache Hadoop.[74] The naming of products and derivative works from other vendors and the term "compatible" are somewhat controversial within the Hadoop developer community.[75]
 
[edit] Papers
 
Some papers influenced the birth and growth of Hadoop and big data processing. Here is a partial list:
 2004 MapReduce: Simplified Data Processing on Large Clusters by Jeffrey Dean and Sanjay Ghemawat from Google Lab. This paper inspired Doug Cutting to develop an open-source implementation of the Map-Reduce framework. He named it Hadoop, after his son's toy elephant.
 2005 From Databases to Dataspaces: A New Abstraction for Information Management, the authors highlight the need for storage systems to accept all data formats and to provide APIs for data access that evolve based on the storage system’s understanding of the data.
 2006 Bigtable: A Distributed Storage System for Structured Data from Google Lab.
 2008 H-store: a high-performance, distributed main memory transaction processing system
 2009 MAD Skills: New Analysis Practices for Big Data
 2011 Apache Hadoop Goes Realtime at Facebook
 
[edit] See also
 





Free software portal
 
Pentaho - Open source data integration (Kettle), analytics, reporting, visualization and predictive analytics directly from Hadoop nodes
 Nutch - An effort to build an open source search engine based on Lucene and Hadoop, also created by Doug Cutting
 Datameer Analytics Solution (DAS) - data source integration, storage, analytics engine and visualization
 Talend - Global leader in open source integration software
 Apache Accumulo - Secure Big Table
 HBase - BigTable-model database
 Hypertable - HBase alternative
 MapReduce - Hadoop's fundamental data filtering algorithm
 Apache Mahout - Machine Learning algorithms implemented on Hadoop
 Apache Cassandra - A column-oriented database that supports access from Hadoop
 Apache CouchDB is a database that uses JSON for documents, JavaScript for MapReduce queries, and regular HTTP for an API
 HPCC - LexisNexis Risk Solutions High Performance Computing Cluster
 Sector/Sphere - Open source distributed storage and processing
 Cloud computing
 Big data
 Data Intensive Computing
 
[edit] References
 
1.^ "Hadoop Overview
 2.^ Hadoop-related projects at hadoop.apache.org
 3.^ a b Applications and organizations using Hadoop
 4.^ Apache Hadoop Contributors
 5.^ http://web.eecs.umich.edu/~michjc/bio.html
 6.^ Hadoop creator goes to Cloudera
 7.^ Ashlee Vance (2009-03-17). "Hadoop, a Free Software Program, Finds Uses Beyond Search". New York Times. Archived from the original on 11 February 2010. Retrieved 2010-01-20.
 8.^ "Hadoop contains the distributed computing platform that was formerly a part of Nutch. This includes the Hadoop Distributed Filesystem (HDFS) and an implementation of MapReduce." About Hadoop
 9.^ "HDFS User Guide". Hadoop.apache.org. Retrieved 2012-05-23.
 10.^ a b The Hadoop Distributed File System: Architecture and Design
 11.^ [1] Improving MapReduce Performance through Data Placement in Heterogeneous Hadoop Clusters April 2010
 12.^ HDFS Users Guide - Rack Awareness
 13.^ ", "Cloud analytics: Do we really need to reinvent the storage stack?"". IBM. 2009-06.
 14.^ "HADOOP-6330: Integrating IBM General Parallel File System implementation of Hadoop Filesystem interface". IBM. 2009-10-23.
 15.^ "HADOOP-6704: add support for Parascale filesystem". Parascale. 2010-04-14.
 16.^ "HDFS with CloudIQ Storage". Appistry,Inc. 2010-07-06.
 17.^ "High Availability Hadoop". HP. 2010-06-09.
 18.^ job
 19.^ "Refactor the scheduler out of the JobTracker". Hadoop Common. Apache Software Foundation. Retrieved 9 June 2012.
 20.^ [2] Hadoop Fair Scheduler Design Document
 21.^ [3] Capacity Scheduler Guide
 22.^ "How 30+ enterprises are using Hadoop", in DBMS2
 23.^ Yahoo! Launches World's Largest Hadoop Production Application (Hadoop and Distributed Computing at Yahoo!)
 24.^ Hadoop and Distributed Computing at Yahoo!
 25.^ "HDFS: Facebook has the world's largest Hadoop cluster!". Hadoopblog.blogspot.com. 2010-05-09. Retrieved 2012-05-23.
 26.^ "Moving an Elephant: Large Scale Hadoop Data Migration at". Facebook. Retrieved 2012-05-23.
 27.^ "Under the Hood: Hadoop Distributed Filesystem reliability with Namenode and Avatarnode". Facebook. Retrieved 2012-09-13.
 28.^ "Under the Hood: Scheduling MapReduce jobs more efficiently with Corona". Facebook. Retrieved 2012-11-09.
 29.^ "How Ancestry.com Manages Big Data". Retrieved 2012-12-26.
 30.^ "Apple Embraces Hadoop". Archived from the original on 28 February 2011. Retrieved 2011-04-14.
 31.^ http://www.inmobi.com/inmobiblog/2011/10/07/inmobi-ranked-as-a-top-10-contributor-to-apache-hadoop
 32.^ "Building a terabyte-scale data cycle at LinkedIn with Hadoop and Project Voldemort". Retrieved 2011-04-14.
 33.^ "Microsoft Expands Data Platform With SQL Server 2012, New Investments for Managing Any Data, Any Size, Anywhere". Retrieved 2011-10-13.
 34.^ "Use Case Study of Hive/Hadoop". Retrieved 2011-04-14.
 35.^ "SAP UNVEILS UNIFIED STRATEGY FOR REAL-TIME DATA MANAGEMENT TO GROW DATABASE MARKET LEADERSHIP". SAP America. Retrieved 9 June 2012.
 36.^ "SAS® access to Hadoop links leading analytics, big data".
 37.^ "HBase at StumbleUpon". Retrieved 2010-06-26.
 38.^ Varia, Jinesh (@jinman). "Taking Massive Distributed Computing to the Common Man - Hadoop on Amazon EC2/S3". Amazon Web Services Blog. Amazon. Retrieved 9 June 2012.
 39.^ Gottfrid, Derek (November 1, 2007). "Self-service, Prorated Super Computing Fun!". The New York Times. Retrieved May 4, 2010.
 40.^ Amazon Elastic MapReduce Developer Guide
 41.^ Amazon Elastic MapReduce Now Supports Spot Instances
 42.^ Amazon Elastic MapReduce FAQs
 43.^ Using Spot Instances with EMR on YouTube
 44.^ "Amazon EMR with the MapR Distribution for Hadoop". Retrieved 25 June 2011.
 45.^ a b "Amazon Taps MapR for High Powered Elastic Map Reduce". Retrieved 25 June 2011.
 46.^ Google Press Center: Google and IBM Announce University Initiative to Address Internet-Scale Computing Challenges
 47.^ NSF, Google, IBM form CLuE
 48.^ "Creating Hadoop pe under SGE". Sun Microsystems. 2008-01-16.
 49.^ "HDFS-Aware Scheduling With Grid Engine". Sun Microsystems. 2009-09-10.
 50.^ "OpenSolaris Project: Hadoop Live CD". Sun Microsystems. 2008-08-29.
 51.^ "Condor integrated with Hadoop's Map Reduce". University of Wisconsin–Madison. 2010-04-15.
 52.^ Why the Pace of Hadoop Innovation Has to Pick Up
 53.^ Cloudera’s Distribution including Apache Hadoop
 54.^ [4]
 55.^ IBM InfoSphere BigInsights
 56.^ IBM InfoSphere BigInsights Enterprise Edition analytics platform enables new class of solutions for gaining rapid insight through large-scale analysis of diverse data
 57.^ Talend Empowers Apache Hadoop Community with Talend Open Studio for Big Data
 58.^ "Zettaset Launches Version 4 of Big Data Management Solution, Delivering New Stability for Hadoop Systems and Productivity Boosting Features | | Zettaset.comZettaset.com". Zettaset.com. 2011-12-06. Retrieved 2012-05-23.
 59.^ "Pentaho Harnesses Apache Hadoop to Deliver Big Data Analytics". Pentaho.com. 2010-05-19. Retrieved 2012-07-04.
 60.^ "Pentaho Open Sources Big Data Capabilities to Further Fuel Widespread Adoption". Pentaho.com. 2012-01-30. Retrieved 2012-07-04.
 61.^ Platform Computing Announces Support for MapReduce
 62.^ MapR Distribution for Apache Hadoop
 63.^ [5][dead link]
 64.^ Hadoop optimized solutions from SGI
 65.^ Greenplum HD: Enterprise-Ready Apache Hadoop
 66.^ Yahoo! and Benchmark Capital to Form Hortonworks to Increase Investment in Hadoop Technology and Accelerate Innovation and Adoption
 67.^ appengine-mapreduce - Google App Engine API for running MapReduce jobs
 68.^ Google I/O 2011: App Engine MapReduce on YouTube
 69.^ Oracle Unveils the Oracle Big Data Appliance
 70.^ Oracle rolls its own NoSQL and Hadoop
 71.^ OceanSync.com Hadoop Management
 72.^ "Grand Logic". Grand Logic. Retrieved 2012-05-23.
 73.^ "Dell adds Pentaho to the Dell Apache Hadoop solution, Nucleus Research". Retrieved 2012-06-30.
 74.^ Defining Hadoop
 75.^ Defining Hadoop Compatibility: revisited
 
[edit] Bibliography
 
Lam, Chuck (July 28, 2010). Hadoop in Action (1st ed.). Manning Publications. p. 325. ISBN 1-935182-19-6.
 Venner, Jason (June 22, 2009). Pro Hadoop (1st ed.). Apress. p. 440. ISBN 1-4302-1942-4.
 White, Tom (June 16, 2009). Hadoop: The Definitive Guide (1st ed.). O'Reilly Media. p. 524. ISBN 0-596-52197-9.
 
[edit] External links
 Official Hadoop Homepage
 Official Hadoop Wiki
 Introducing Apache Hadoop: The Modern Data Operating System — lecture given at Stanford University by Co-Founder and CTO of Cloudera, Amr Awadallah (video archive).
 





[hide] 
v ·
 t ·
 e
 
Apache Software Foundation
 





Top level projects
 

Abdera ·
 ActiveMQ ·
 Ant ·
 Aries ·
 Apache HTTP Server ·
 APR ·
 Avro ·
 Axis ·
 Buildr ·
 Camel ·
 Cassandra ·
 Cayenne ·
 Chemistry ·
 Click ·
 Cocoon ·
 Continuum ·
 CouchDB ·
 CXF ·
 Derby ·
 Directory ·
 Felix ·
 Forrest ·
 Geronimo ·
 Gump ·
 Hadoop ·
 Hama ·
 Hive ·
 HBase ·
 Jackrabbit ·
 James ·
 JMeter ·
 Karaf ·
 Lenya ·
 libcloud ·
 Mahout ·
 Maven ·
 MINA ·
 mod_perl ·
 MyFaces ·
 ODE ·
 OFBiz ·
 OpenEJB ·
 OpenJPA ·
 OpenOffice ·
 POI ·
 Pivot ·
 Qpid ·
 River ·
 Roller ·
 ServiceMix ·
 Shindig ·
 Shiro ·
 Sling ·
 Stanbol ·
 SpamAssassin ·
 stdcxx ·
 Struts ·
 Subversion ·
 Tapestry ·
 Thrift ·
 Tomcat ·
 Trafficserver ·
 Tuscany ·
 UIMA ·
 Velocity ·
 Wicket ·
 Xalan ·
 Xerces ·
 XMLBeans
 





Commons Projects
 

BCEL ·
 BSF ·
 Daemon ·
 Sanselan ·
 Jelly
 





Lucene Projects
 

Lucene Java ·
 Lucene.Net ·
 Droids ·
 Lucy ·
 Nutch ·
 Open Relevance Project ·
 PyLucene ·
 Solr ·
 Tika
 





Hadoop Projects
 

HDFS ·
 ZooKeeper
 





Other projects
 

Chainsaw ·
 Batik ·
 FOP ·
 Log4j ·
 XAP ·
 Log4Net ·
 Ivy ·
 Wink
 





Incubator Projects
 

ACE ·
 Cordova ·
 CloudStack ·
 Composer ·
 Empire-db ·
 JSPWiki ·
 XAP ·
 Wink
 





Apache Attic
 

AxKit ·
 Beehive ·
 Bluesky ·
 Cactus ·
 Jakarta ·
 Excalibur ·
 Harmony ·
 HiveMind ·
 Slide ·
 Shale ·
 iBATIS
 






License: Apache License ·
 Website: apache.org
 







View page ratings



Rate this page



What's this?





 
Trustworthy
 















Objective
 















Complete
 















Well-written
 
















I am highly knowledgeable about this topic (optional)












Submit ratings










 

























Categories: Hadoop
Free software programmed in Java
Free system software
Distributed file systems
Cloud computing
Cloud infrastructure
Free software for cloud computing








Navigation menu

 


Create account
Log in
 



Article
Talk
 









Read
Edit
View history
 
















Main page
Contents
Featured content
Current events
Random article
Donate to Wikipedia
 

Interaction

Help
About Wikipedia
Community portal
Recent changes
Contact Wikipedia
 

Toolbox









 

Print/export




 

Languages

Azərbaycanca
Česky
Deutsch
Español
فارسی
Français
한국어
Italiano
עברית
മലയാളം
Монгол
日本語
Polski
Português
Русский
Українська
Tiếng Việt
中文
 
This page was last modified on 13 January 2013 at 13:57.

Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. See Terms of Use for details.
 Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.

Contact us
Privacy policy
About Wikipedia
Disclaimers
Mobile view



 


