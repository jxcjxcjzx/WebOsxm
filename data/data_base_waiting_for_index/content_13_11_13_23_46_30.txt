


山路水桥

 
博客园    首页    新随笔    联系    订阅    管理 


随笔 - 144  文章 - 0 评论 - 4 trackbacks - 0 












static在C和C++中的用法和区别


static主要有三个作用：
 
 
 
(1)局部静态变量
 
(2)外部静态变量/函数
 
(3)静态数据成员/成员函数
 
前两种C和C++都有，第三种仅在C++中有，下面分别作以下介绍：
 
一、局部静态变量
 
 
 
在C/C++中, 局部变量按照存储形式可分为三种auto, static, register。其中register不常用到，下面主要说说auto和static的区别。
 
 
 
1. 存储空间分配和生存周期不同
 
 
 
auto类型局部变量就是普通的局部变量（不加修饰的局部变量默认为该类型）。该类型局部变量存储在栈上，在动态存储区，生命周期仅限于定义它的函数，函数结束，它就自动释放。static类型局部变量存储在静态存储区，在程序整个运行期间都不释放。两者之间的作用域相同，但生存期不同。

 
2. static局部变量在所处模块在初次运行时进行初始化工作，且只操作一次。

 
 
 
3. 对于局部静态变量，如果不赋初值，编译期会自动赋初值0或空字符，而auto类型的初值是不确定的。(对于C++中的class对象例外，class的对象实例如果不初始化，则会自动调用默认构造函数，不管是否是static类型)
 
 
 
特点: static局部变量的”记忆性”与生存期的”全局性”
 
 
 
 
 
二、外部静态变量／函数
 
在C中 static有了第二种含义：用来表示不能被其它文件访问的全局变量和函数。但为了限制全局变量/函数的作用域, 函数或变量前加static使得函数成为静态函数。但此处“static”的含义不是指存储方式，而是指对函数的作用域仅局限于本文件(所以又称内部函 数)。注意此时, 对于外部(全局)变量, 不论是否有static限制, 它的存储区域都是在静态存储区,生存期都是全局的. 此时的static只是起作用域限制作用, 限定作用域在本模块(文件)内部.
 
使用内部函数的好处是：不同的人编写不同的函数时，不用担心自己定义的函数，是否会与其它文件中的函数同名。
 



 
 
三、静态数据成员／成员函数(C++特有)
 
C+ +重用了这个关键字，并赋予它与前面不同的第三种含义：表示属于一个类而不是属于此类的任何特定对象的变量和函数. 这是与普通成员函数的最大区别,
也是其应用所在, 比如在对某一个类的对象进行计数时, 计数生成多少个类的实例,
就可以用到静态数据成员. 在这里面, static既不是限定作用域的, 也不是扩展生存期的作用, 而是指示变量/函数在此类中的唯一性. 这也是”属于一个类而不是属于此类的任何特定对象的变量和函数”的含义. 因为它是对整个类来说是唯一的,因此不可能属于某一个实例对象的. (针对静态数据成员而言, 成员函数不管是否是static, 在内存中只有一个副本, 普通成员函数调用时, 需要传入this指针, static成员函数调用时, 没有this指针. )
 
 
 
原文链接：http://blog.csdn.net/skyereeee/article/details/8000512

 






posted on 2012-09-22 16:24 jianshao 阅读(...) 评论(...) 编辑 收藏
 



刷新评论刷新页面返回顶部
 


博客园首页博问新闻闪存程序员招聘知识库
 


Copyright ©2013 jianshao Powered by: 博客园 模板提供：沪江博客
 

