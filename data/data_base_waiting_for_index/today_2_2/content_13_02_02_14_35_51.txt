





Apocalypsa

Rumination Introspection
 




  博客园 :: 首页 :: 联系 :: 订阅  :: 管理






  15 Posts :: 1 Stories :: 368 Comments :: 0 Trackbacks 






公告
 


昵称：_Luc_
园龄：4年5个月
粉丝：326
关注：2
+加关注
 


搜索
 
 
 
 
 
常用链接
 我的随笔
我的评论
我的参与
最新评论
我的标签
 


我的标签
 
Luna的大学读书史(1)
面试经历(1)
 

随笔档案
2013年1月 (1)
2012年2月 (1)
2011年7月 (1)
2011年4月 (1)
2011年3月 (1)
2010年12月 (1)
2010年11月 (2)
2010年8月 (2)
2010年4月 (1)
2009年9月 (2)
2008年12月 (1)
2008年8月 (1)

相册
CreepComics
Dialer 2.0
Lucida
mReader
Tup活动
Tup活动 小图
WP
 
最新评论
 

1. Re:9个offer，12家公司，35场面试，从微软到谷歌，应届计算机毕业生的2012求职之路
大三生路过。。先拜博主nb经历。几点疑问：1、博主是在ms呆了一年还是msra？印象中ms主要负责商业事务吧。2、博主没碰过*nix也能进google，是不是进了google还是做.Net那块？google不是主要是要熟悉C/C++、Python、Linux吗。感觉楼主主要是在ms呆的那一年完成ds程序猿的逆袭的吧，比较国际化，视野比较开阔。但是总觉得那里的人有莫名的优越感而整天无所事事(安逸)....--泳裤王子
2. Re:9个offer，12家公司，35场面试，从微软到谷歌，应届计算机毕业生的2012求职之路
楼主，求教，怎么登陆topcoder Arena？貌似被墙了。。--baiyundsh
3. Re:我是如何设计并实现一门程序设计语言——一门函数式编程语言Lucida的诞生
楼主，我看了一下你的语言手册，感觉好熟悉啊，语法好像基本和scheme差不多，你这算是LISP的一种方言么？--qzhouayi
4. Re:9个offer，12家公司，35场面试，从微软到谷歌，应届计算机毕业生的2012求职之路
@果果天涯这个 AV应用比较生猛。。--neo_shen
5. Re:9个offer，12家公司，35场面试，从微软到谷歌，应届计算机毕业生的2012求职之路
楼主我想问下学c++的找那个方向的工作职位好找，因为现在好像国内找的c++程序员很少，几乎清一色的java，谢谢！！！--看向星空
 
阅读排行榜
 

1. 9个offer，12家公司，35场面试，从微软到谷歌，应届计算机毕业生的2012求职之路(33769)
2. 一个Quicksort究竟可以写到多么短(8481)
3. 与.Net大师Jeffrey Richter面对面交流——TUP对话大师系列活动回顾（多图配详细文字）(4366)
4. 我是如何设计并实现一门程序设计语言——一门函数式编程语言Lucida的诞生(4067)
5. 深入理解计算机系统（Computer Systems: A Programmer's Perspective）阅读体会(3845)
 
评论排行榜
 

1. 9个offer，12家公司，35场面试，从微软到谷歌，应届计算机毕业生的2012求职之路(233)
2. 与.Net大师Jeffrey Richter面对面交流——TUP对话大师系列活动回顾（多图配详细文字）(58)
3. 我是如何设计并实现一门程序设计语言——一门函数式编程语言Lucida的诞生(16)
4. 深入理解计算机系统（Computer Systems: A Programmer's Perspective）阅读体会(16)
5. 一个Quicksort究竟可以写到多么短(15)
 
推荐排行榜
 

1. 9个offer，12家公司，35场面试，从微软到谷歌，应届计算机毕业生的2012求职之路(150)
2. 与.Net大师Jeffrey Richter面对面交流——TUP对话大师系列活动回顾（多图配详细文字）(27)
3. 一个Quicksort究竟可以写到多么短(18)
4. 我是如何设计并实现一门程序设计语言——一门函数式编程语言Lucida的诞生(7)
5. 深入理解计算机系统（Computer Systems: A Programmer's Perspective）阅读体会(5)
 


我是如何设计并实现一门程序设计语言——一门函数式编程语言Lucida的诞生





Lucida——一门函数式程序设计语言的诞生


起因
自己从本科那会就开始想写一个编程语言，不过那会缺乏编译的功底。自从阅读了DSL和Language Implementation Patterns，并写了一个一定规模的Parser之后，对编译有了一个比较全的认识，大概也能想清一个语言的运行机理和实现过程。而且到现在自己用过的语言也不少了，过程的有C，OO的有C++、C#、Java，脚本的有Javascript、Python，函数式的有Scheme、Haskell，看的书更是数都数不清，以至于到后来都觉的没什么意思了。

正好现在很多人都在热衷F#、Scala什么的函数式程序设计语言，说实话，与其去学这些东西，不如自己写一个出来，那这比学这些玩意要深刻的多。倒不是追求reinvent the wheels，我只是觉得现在的wheels未免太多了些，学完这个再学那个，这辈子也学不完。与其被这些东西搞的晕头转向，不如自己弄一个出来，以后再出个什么新东西也不至于会被弄的措手不及。


设计

经过短暂的思考，我决定以Scheme、Haskell和Python为基础，在尽可能短的时间内弄一门函数式编程语言出来，支持函数式编程的所有基本特性。此外，我需要为这个语言提供一个易用的interactive interface，就像GHCi或是IDLE那样。

为了便于构建解析器，我几乎毫不犹豫的选择了Scheme的RPN（逆波兰表达式）语法，尽管这个语法有些诡异：

    (def (f a) (* a a))
    (f 3) => 9

有了Scheme这个参考，构建语言的词法分析器和语法分析器就相当简单了，用了不到两个小时就搞出了Tokenizer和Parser，前端的部分就搞定了。

由于对代码生成不熟悉，况且我要弄的是一门解释型语言，因此有一个中间结构就足够了，这里我用了我比较熟悉的异构抽象语法树：通过一个基类型节点导出各种功能的子类型节点，同时子类型节点可以保存对基类型节点的引用，简单的来说就是Composite Pattern。
 


 
 

常用的语法结构无所谓就是定义，引用，调用函数，分支语句这些，只需按照之前写好的BNF逐一对应上就可以了，算上在草稿纸设计对象模型的时间，这部分大概用了我一个多小时。

接下来就是类型系统了，为了尽快的做出第一个原型，我挑选了四个最基本的类型：数字（Number），列表（List），函数（Function），名字（Name）。



 

数字自然保存一个整数值，直接使用CLR提供的Int64就足够了，这个很简单。

列表的设计花了我点时间，主要是在同构列表（Haskell风格）和异构列表（Python风格）之间抉择，但想到同构列表还要做类型推导这类蛋疼的工作，我选择了更简单的异构列表（而且功能似乎要更强大，只是无法提供静态类型检查）。

由于函数式语言中的函数也可以作为值传递，因此无需为它命名，只需设置它的形参和方法体即可。在这里它的方法体就是一段语法树，执行这个函数就是对语法树里进行实参代换，然后规约出结果即可，很自然的东西。

名称就是对上面这些类型实例的名字，名称保存一个对基类型的引用，因此它可以指向任何类型，这样使得函数赋值变的很简单，比如说：




 

这部分花的时间比较长，大概用了三个小时的样子，因为推翻了几个不靠谱的设计，多花了些时间。

接下来就是最外层的解释器了，在这里用的就是常用解释型语言的模式：Read and Eval：首先用Read读入代码，做一个简单的语法检查。然后再由Eval把这段代码执行（实际上就是转换成语法树并规约出结果），然后由控制台输出结果，这里不需要进行什么设计，倒是控制台的配色花了点时间，我向来很不爽GHCi或是IDLE的配色，因此我绝不会让我自己设计的解释器的配色方案跟它们一样烂：




 

做了几个简单的Test之后，把符号表弄了进去，测试了一下，变量赋值，函数递归的都能用，就是列表的递归有些问题，看了下时间，已经连续搞了快10个小时了，于是休息。第二天上午用了近两个小时才把bug揪出来，原来是函数生成List时共享了一部分内存引用，修改了就好使了。再次体会到除错的恶心。

接下来就是引入基本的操作了，这个很简单：写一个预定义的方法表，然后特定的操作符回调方法表中对应的方法。由于以前就用过这种手法，所以几乎没花什么时间，一个下午的时间，算术操作符，逻辑操作符以及基本的列表操作就搞定了，晚饭回来之后顺便写了三个最常用的高阶函数：map、reduce、filter。只要玩过函数式编程或是用过Python的人都知道这几个函数的作用，非一般的好用。



我一直很喜欢Haskell和Python的List Comprehension，于是就琢磨着把它弄进来，但考虑到RPN语法的限制，于是就参考了Python的range函数，以便快速生成一个list。



再次测试，由于都是很明显的东西，所以也出不了什么错。

事实上到这里Lucida已经成为了一个全功能的语言了：变量赋值，递归，列表，高阶函数，以及常用的内置函数，作为一个语言应该有的几样基本都具备了。

之前一直认为写个语言会是个很麻烦的事情，但写完了发现实际上也不算什么，anyway, who could not design and implement a programming language in two days?



接下来的工作


    引入浮点型，以及浮点型和整形数字的混合操作：

 

    引入匿名函数和Curry函数：



 

    引入字符和字符串类型，并设计它们与列表和数字之间的转换操作：
 

    为操作符添加一些有趣的属性：

    设置操作符映射，从而可以写出极其简短的代码：



最后就是写一个语言的手册了，这个更好写，直接仿照K&R的The C Programming Language写就行了。有兴趣的同学可以到这个链接下载阅读。



后记

 

算上这篇回顾，Lucida从无到原型，再到现在的基本完备，也就是不到一周时间的而已，所以在这里建议那些动不动就要学习新语言的同学停下来，花时间自己写一门语言出来，这比学语言深刻的多，再说写一个小语言也用不了多少时间。

刚刚看到坛子里有一个关于编译的很不错的连载博客，博主好像是叫装配脑袋吧（好奇怪的名字），他把编译那些常用的东西已经讲的很清楚了，认真的看一遍的话写一个语言是不成问题的。只可惜我看到的大多回复都毫无营养，只是毫无意义的顶来顶去。

Anyway, that's all. 有兴趣的话可以交流下编程语言的知识：lunageek@gmail.com





 





绿色通道： 好文要顶 关注我 收藏该文与我联系 




_Luc_
 关注 - 2
 粉丝 - 326 



+加关注 


7

0


 (请您对文章做出评价) 


« 博主上一篇：TUP Masters系列第四期 搜索与云计算首席科学家Raghu Ramakrishnan：深入云计算实战 现场QA实录
» 博主下一篇：lmth1 一个用Python编写的便捷网页信息提取工具
« 首页上一篇：算法之旅——杨辉三角
» 首页下一篇：（译）如何使用cocos2d制作一个塔防游戏：第四部分（完）

 
posted on 2011-07-10 22:48 _Luc_ 阅读(4067) 评论(16) 编辑 收藏
 



Feedback


#1楼 2011-07-10 22:54Aga.J  
 

收藏！希望博主能写更多关于语言细节的文章！
装配脑袋那位高人就是一个搞编译器的牛人...

支持(0)反对(0)
 
  
 

#2楼 2011-07-10 23:28麦舒  
 

我想知道，它能应用在什么场合下。

支持(0)反对(0)
 
  
 

#3楼[楼主] 2011-07-10 23:31_Luc_  
 


引用麦舒：我想知道，它能应用在什么场合下。


手册里面已经说的很明白了
支持(0)反对(0)
 
  
 

#4楼 2011-07-11 06:12没一句正经的业余程序员  
 

一周时间能折腾出来不错了，呵呵。
“由于函数式语言中的函数也可以作为值传递，因此无需为它命名，只需设置它的形参和方法体即可。在这里它的方法体就是一段语法树，执行这个函数就是对语法树里进行实参代换，然后规约出结果即可，很自然的东西。”
这句话什么意思？你的函数计值机制是call-by-name吗？
解释性语言和CLR什么关系？
既然是“设计”一门新语言，应该介绍一些重要的决策和思考，有可能的话，给出它的形式语义和实现技术。



支持(0)反对(0)
 
  
 

#5楼 2011-07-11 08:40zhuangzhuang1988  
 

楼主NB

支持(0)反对(0)
 
  
 

#6楼 2011-07-11 14:13T2噬菌体  
 

顶了，从理论角度探寻程序语言的本质，确实非常有用。《Language Implementation Patterns》是本好书，另外推荐一本书《Types and Programming Languages》

支持(0)反对(0)
 
  
 

#7楼[楼主] 2011-07-12 09:29_Luc_  
 


引用没一句正经的业余程序员：
一周时间能折腾出来不错了，呵呵。
“由于函数式语言中的函数也可以作为值传递，因此无需为它命名，只需设置它的形参和方法体即可。在这里它的方法体就是一段语法树，执行这个函数就是对语法树里进行实参代换，然后规约出结果即可，很自然的东西。”
这句话什么意思？你的函数计值机制是call-by-name吗？
解释性语言和CLR什么关系？
既然是“设计”一门新语言，应该介绍一些重要的决策和思考，有可能的话，给出它的形式语义和实现技术。




1，我想你说的应该是参数传递机制，这里使用的是按值传递（按名传递的话太诡异了）。函数在执行时会有一个内部的scope，我会把实参复制到这个scope中，然后函数体的形参在scope中寻找对应的实参，如果实参不全则会生成一个curry function。
2，解释型语言和CLR没什么关系，之所以提到CLR是因为我写的解释器构建于CLR之上
3，BNF参考了Htdp中的intermediate student grammar。词法用的是传统的词法分析，语法用的是带回退的LL(1)，中间结构用的则是异构抽象语法树。
支持(0)反对(0)
 
  
 

#8楼[楼主] 2011-07-12 09:35_Luc_  
 


引用T2噬菌体：顶了，从理论角度探寻程序语言的本质，确实非常有用。《Language Implementation Patterns》是本好书，另外推荐一本书《Types and Programming Languages》


多谢帮顶，你提到的后面那本书似乎还是咱们院老师翻译的。我看过一点点，由于理论性很强，所以没看下去，也许以后应该读一下
支持(0)反对(0)
 
  
 

#9楼 2011-07-13 06:42没一句正经的业余程序员  
 

@_Luc_
是我误解了，我看到“执行这个函数就是对语法树里进行实参代换”以为是call－by－name，一般解释实现大多用一个环境，函数相当于闭包。

支持(0)反对(0)
 
  
 

#10楼 2011-07-14 16:20placeholder  
 

LZ的UML图效果不错，用的什么工具？

支持(0)反对(0)
 
  
 

#11楼[楼主] 2011-07-17 22:35_Luc_  
 


引用placeholder：LZ的UML图效果不错，用的什么工具？

就是Visual Studio自带的类图生成工具了
支持(0)反对(0)
 
  
 

#12楼 2012-02-16 00:18硅胶鱼  
 

提一个无关痛痒的错:
"我几乎毫不犹豫的选择了Scheme的RPN（逆波兰表达式）语法" 这里应该是波兰式,更确切的说是S-expression.逆波兰式是符号后缀的.

支持(0)反对(0)
 
  
 

#13楼 2012-06-01 13:53gussing  
 

good, 我也实现了一个类似的语言，不过是中缀表达式形式的，见我博客
有空可以交流下

支持(0)反对(0)
 
  
 

#14楼 2012-09-13 12:54OwnWaterloo  
 

关于这个观点：

引用所以在这里建议那些动不动就要学习新语言的同学停下来，花时间自己写一门语言出来，这比学语言深刻的多，再说写一个小语言也用不了多少时间。


我并不赞同。

有本《Programming Languages: Application and Interpretation》
可在这里下载：

并不是说这书很好，其实我也没看完。提到它只是因为它在Preface里提出编程语言应该同时从两方面学。

引用While this reasoning is internally consistent, it fails to recognize that understanding definitions does not imply we understand consequences of those definitions. For instance, the difference between strict and lazy evaluation, or between static and dynamic scope, is only a few lines of interpreter code, but the consequences of these choices is enormous.


"this"指的是通过实现语言学习编程语言的方式。
如果只从这种方式学习语言，就较难理解这些选择给实际编程带来的巨大影响。
支持(0)反对(0)
 
  
 

#15楼 2013-01-13 23:44wojiushiwo987  
 

不错，同样关注并转载（加对应书籍注释）您的求职博客
http://blog.csdn.net/wojiushiwo987/article/details/8499121
，向大牛看齐！

支持(0)反对(0)
 
  
 

#16楼 2013-01-24 09:16qzhouayi  
 

楼主，我看了一下你的语言手册，感觉好熟悉啊，语法好像基本和scheme差不多，你这算是LISP的一种方言么？

支持(0)反对(0)
 
  
 



刷新评论刷新页面返回顶部
 

注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。

 
博客园首页博问新闻闪存程序员招聘知识库
 





最新IT新闻:
 · 马云知天命：固执坚持不动摇
 · 若不是那五次拒绝！惠普或成今日之苹果
 · 新疆阿勒泰发现世界第四大铁陨石 引发官争民抢
 · 伊朗的猴子宇航员真的安全返回了？
 · 谷歌将在法国出资6000万欧元成立媒体基金
» 更多新闻...

最新知识库文章:

 · HTML5之美
 · 每天工作的第一个小时，做什么？
 · Hadoop 分布式文件系统：架构和设计
 · 异常的代价
 · 从P1到P7——第八年

» 更多知识库文章... 





Copyright @ _Luc_
 Powered by: .Text and ASP.NET
 Theme by: .NET Monster 

