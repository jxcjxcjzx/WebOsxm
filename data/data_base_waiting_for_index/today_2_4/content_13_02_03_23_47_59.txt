您还未登录！|登录|注册|帮助首页业界移动云计算研发论坛博客下载
更多
ws84643557的专栏
目录视图摘要视图订阅
CSDN客服工作问卷调查        智能开发框架 JEECG 作者张代浩专访 
2012CSDN博客之星火热出炉！        2013年全国百所高校巡讲讲师招募
 读写STM32内部flash读写代码
分类： 单片机 stm32 2012-03-25 06:16 4777人阅读 评论(1) 收藏 举报
由于老师的要求，所以写了一份读写STM32内部FLASH的代码，这样的话就可以把STM32里面没有用来保存代码段的部分用来存储数据了。
由于《stm32flash编程手册》是很久很久以前看的，现在也没心情去仔细看那份手册了。大概浏览了一下，只看到了STM32里面的flash是以16位为单位读写的。
为什么记住这个，因为之前想写一个字节老是出错，所以翻翻手册，果然看到不能写1个字节数据。而且还发现，flash写地址为奇数时也会出错。所以这份代码里面
写flash的地址只能是偶数。浏览过程中还发现，手册里面说写flash和擦除flash的时候会影响cpu的运行速度，没仔细看（真心不想看）。其他具体手册里面的资料的话没有了，
看有没有高手仔细看完，然后写个总结什么的。。。
而且flash的读写保护也没看清楚，好像这些保护都是针对页大小来保护的话。这样的话就可以只保护代码段，这些放数据段不用保护了，这样可以省下flash芯片，不错吧。
废话不多说，直接上代码。。
flash读写代码也不用初始化，拿来直接就用。哈哈。。。。。。。。。。


-------------------DataFlash.c----------------------------------
#include "DataFlash.h"




uint16_t Flash_Write_Without_check(uint32_t iAddress, uint8_t *buf, uint16_t iNumByteToWrite) {
    uint16_t i;
    volatile FLASH_Status FLASHStatus = FLASH_COMPLETE;
    i = 0;
    
//    FLASH_UnlockBank1();
    while((i < iNumByteToWrite) && (FLASHStatus == FLASH_COMPLETE))
    {
      FLASHStatus = FLASH_ProgramHalfWord(iAddress, *(uint16_t*)buf);
      i = i+2;
      iAddress = iAddress + 2;
      buf = buf + 2;
    }
    
    return iNumByteToWrite;
}
/**
  * @brief  Programs a half word at a specified Option Byte Data address.
  * @note   This function can be used for all STM32F10x devices.
  * @param  Address: specifies the address to be programmed.
  * @param  buf: specifies the data to be programmed.
  * @param  iNbrToWrite: the number to write into flash
  * @retval if success return the number to write, -1 if error
  *  
  */
int Flash_Write(uint32_t iAddress, uint8_t *buf, uint32_t iNbrToWrite) {
                /* Unlock the Flash Bank1 Program Erase controller */
        uint32_t secpos;
        uint32_t iNumByteToWrite = iNbrToWrite;
uint16_t secoff;
uint16_t secremain;  
  uint16_t i = 0;    
        uint8_t tmp[FLASH_PAGE_SIZE];
        
        FLASH_UnlockBank1();
secpos=iAddress & (~(FLASH_PAGE_SIZE -1 )) ;//扇区地址 
secoff=iAddress & (FLASH_PAGE_SIZE -1);     //在扇区内的偏移
secremain=FLASH_PAGE_SIZE-secoff;           //扇区剩余空间大小 
        volatile FLASH_Status FLASHStatus = FLASH_COMPLETE;
        
        if(iNumByteToWrite<=secremain) secremain = iNumByteToWrite;//不大于4096个字节
        
        while( 1 ) {
            Flash_Read(secpos, tmp, FLASH_PAGE_SIZE);   //读出整个扇区
            for(i=0;i<secremain;i++) {       //校验数据
       if(tmp[secoff+i]!=0XFF)break;       //需要擦除 
   }
            if(i<secremain) {  //需要擦除
                FLASHStatus = FLASH_ErasePage(secpos); //擦除这个扇区
                if(FLASHStatus != FLASH_COMPLETE)
                  return -1;
                for(i=0;i<secremain;i++) {   //复制
                        tmp[i+secoff]=buf[i];   
                }
                Flash_Write_Without_check(secpos ,tmp ,FLASH_PAGE_SIZE);//写入整个扇区  
            } else {
                Flash_Write_Without_check(iAddress,buf,secremain);//写已经擦除了的,直接写入扇区剩余区间.
            }
            
            if(iNumByteToWrite==secremain) //写入结束了
                break;
            else {
                secpos += FLASH_PAGE_SIZE;
                secoff = 0;//偏移位置为0 
                buf += secremain;  //指针偏移
                iAddress += secremain;//写地址偏移    
                iNumByteToWrite -= secremain;  //字节数递减
                if(iNumByteToWrite>FLASH_PAGE_SIZE) secremain=FLASH_PAGE_SIZE;//下一个扇区还是写不完
                else secremain = iNumByteToWrite;  //下一个扇区可以写完了
            }
            
         }
        
        FLASH_LockBank1();
        return iNbrToWrite; 
}






/**
  * @brief  Programs a half word at a specified Option Byte Data address.
  * @note   This function can be used for all STM32F10x devices.
  * @param  Address: specifies the address to be programmed.
  * @param  buf: specifies the data to be programmed.
  * @param  iNbrToWrite: the number to read from flash
  * @retval if success return the number to write, without error
  *  
  */
int Flash_Read(uint32_t iAddress, uint8_t *buf, int32_t iNbrToRead) {
        int i = 0;
        while(i < iNbrToRead ) {
           *(buf + i) = *(__IO uint8_t*) iAddress++;
           i++;
        }
        return i;
}


-------------------DataFlash.h----------------------------------
#ifndef   __DATAFLASH_H__
#define   __DATAFLASH_H__


#include "stm32f10x.h"
#include "stm32f10x_flash.h"




#if defined (STM32F10X_HD) || defined (STM32F10X_HD_VL) || defined (STM32F10X_CL) || defined (STM32F10X_XL)
  #define FLASH_PAGE_SIZE    ((uint16_t)0x800)
  
#else
  #define FLASH_PAGE_SIZE    ((uint16_t)0x400)
#endif




int Flash_Read(uint32_t iAddress, uint8_t *buf, int32_t iNbrToRead) ;
int Flash_Write(uint32_t iAddress, uint8_t *buf, uint32_t iNbrToWrite);


#endif
分享到： 
上一篇：The stack 'CSTACK' is filled to 100% (4096 bytes used out of 4096) 错误解决
下一篇：Linux上vi(vim)编辑器使用教程

查看评论
1楼 gylglove 2012-04-21 22:00发表 [回复]

哥们 你真能用？ 晶振都没有说明 开不开内部高速晶振啊 开了后系统主时钟要不要重新设定啊？？真心求教 正在郁闷 调试不出来
您还没有登录,请[登录]或[注册]
* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场

个人资料
  
ws84643557
 

访问：88377次
积分：706分
排名：第14305名
原创：21篇转载：22篇译文：0篇评论：6条
文章搜索

文章分类
单片机 stm32(5)
单片机 STM32 IAR环境(1)
UNICODE编码表(2)
GB2312编码表(2)
GBK编码表(2)
插入排序(1)
卡尔曼滤波(2)
vim的使用(2)
心情(3)
ACM(2)
gcc(2)
Note(1)
SIP(1)
Linphone(1)
文章存档
2012年12月(3)
2012年11月(3)
2012年09月(1)
2012年07月(3)
2012年05月(1)
展开
阅读排行
unicode编码表(36844)
GBK 汉字内码扩展规范编码表(24846)
mysql 添加列，修改列，删除列。(7612)
GB2312简体中文编码表(5802)
读写STM32内部flash读写代码(4777)
linphone安装和使用教程(1465)
关于IAR 里面用JLINK烧写STM32程序的Target reset 错误(1403)
The stack 'CSTACK' is filled to 100% (4096 bytes used out of 4096) 错误解决(950)
无间(481)
为什么STM32里面一些表达式放函数里面用和直接用效果不用(322)
评论排行
关于IAR 里面用JLINK烧写STM32程序的Target reset 错误(3)
mysql 添加列，修改列，删除列。(1)
STM32_USART_DMA_TRANMIST(1)
读写STM32内部flash读写代码(1)
滤波器模型的建立(0)
Linux上vi(vim)编辑器使用教程(0)
The stack 'CSTACK' is filled to 100% (4096 bytes used out of 4096) 错误解决(0)
无间(0)
到了哈佛，你就会知道中国高校的差距在哪里(0)
<海马记忆法>读后感!(0)
推荐文章

最新评论
mysql 添加列，修改列，删除列。
suxinpaul: 听不不错的
读写STM32内部flash读写代码
gylglove: 哥们 你真能用？ 晶振都没有说明 开不开内部高速晶振啊 开了后系统主时钟要不要重新设定啊？？真心求教...
STM32_USART_DMA_TRANMIST
yuanwei_guo: 学习一下！
关于IAR 里面用JLINK烧写STM32程序的Target reset 错误
lichenbook: 想请教楼主能不能发一个iar stm32的模板，能够产生hex文件，并能够用jlink下载调试的。i...
关于IAR 里面用JLINK烧写STM32程序的Target reset 错误
ws84643557: @ycd521:没想到居然还有人回复，呵呵！感动啊。
关于IAR 里面用JLINK烧写STM32程序的Target reset 错误
ycd521: 谢谢
公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告
京 ICP 证 070598 号
北京创新乐知信息技术有限公司 版权所有
世纪乐知(北京)网络技术有限公司 提供技术支持
江苏乐知网络技术有限公司 提供商务支持
 联系邮箱：webmaster(at)csdn.net
Copyright © 1999-2012, CSDN.NET, All Rights Reserved 

