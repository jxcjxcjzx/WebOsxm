您好，欢迎来到阿里巴巴 请登录 免费注册
阿里巴巴首页 我的阿里  进货单(0) 收藏夹 诚信通服务 供应商专区 客服中心 网站导航
创业


资讯
搜索
创业首页 创业新闻 创业故事 创业指导 创业政策 创业资金 创业项目 项目分析 商业模式 原创
互联网 电子商务 人物 金融 IT数码 消费 传媒 通信 教育 科技 医药
您当前的位置：阿里巴巴资讯创业频道正文
为什么函数式编程在Java中很危险？
阿里巴巴创业 2013-01-22专题：创业新闻 打印
在我的日常工作中，我身边的开发者大多是毕业于CS编程顶级院校比如MIT、CMU以及Chicago，他们初次涉及的语言是Haskell、Scheme及Lisp。他们认为函数式编程是一种自然的、直观的、美丽的且高效的编程样式。但奇怪的是，我和我的同事并没有为Haskell、Scheme、Lisp、Clojure、Scala而编程，这个行业里的绝大部分人都会使用Python、 Ruby、Java或C#等编程，因为它们用起来比较顺手。但在Java中，函数式编程却是低效且危险的。

为什么函数式编程在Java中很危险呢？
每隔几个月，我都会在调试中发现问题，究其原因最终可追溯到滥用函数的想法以及编程算法，更重要的原因是这个虚拟机无法创建这种编程样式。
最近Bob Martin想出一个很好的例子并说明了原因。Clojure （一个真正的函数式编程）返回到25整数列表：
(take25(squares-of(integers)))
此代码运行和响应速度都很快，输出结果：
(1491625364964…576625)
现在，假设我们想要在Java中重写，如果我们以Gosling的方式来编写Java，那么该代码是简单、快速且明显的：
for(inti=1;i<=25;i++) 
System.out.println(i*i); 
}
但是，现在假设我们让它变得多功能性，在特定的假设范围内重置上面的Clojure样式：
importjava.util.ArrayList; 
importjava.util.List; 
publicclassTake25{ 
publicstaticvoidmain(String[]args){ 
for(Objecto:take(25,squaresOf(integers()))){ 
System.out.println(o); 
} 
} 
publicstaticList&lt;?>take(intn,List&lt;?>list){ 
returnlist.subList(0,n); 
} 
publicstaticList&lt;Integer>squaresOf(List&lt;Integer>list){ 
List&lt;Integer>result=newArrayList&lt;Integer>(); 
for(Integernumber:list){ 
result.add(number.intValue()*number.intValue()); 
} 
returnresult; 
} 
publicstaticList&lt;Integer>integers(){ 
List&lt;Integer>result=newArrayList&lt;Integer>(); 
for(inti=1;i&lt;=Integer.MAX_VALUE;i++){ 
result.add(i); 
} 
returnresult; 
} 
}
尝试运行吧，OK，从堆转储（Heap Dump）中恢复 ？
Exceptioninthread"main"java.lang.OutOfMemoryError:Javaheapspace 
atjava.util.Arrays.copyOf(Arrays.java:2760) 
atjava.util.Arrays.copyOf(Arrays.java:2734) 
atjava.util.ArrayList.ensureCapacity(ArrayList.java:167) 
atjava.util.ArrayList.add(ArrayList.java:351) 
atTake25.integers(Take25.java:30) 
atTake25.main(Take25.java:9)
当Java输出后，Clojure如何处理函数，使该函数可返回到每一个int？
Clojure如同所有真正的函数语言（与Java不同）具备懒散赋值特性。它（指clojure）不会计算不被使用的值。它可以远离这个，因为Clojure不像Java，它是真正函数式语言，可以假定变量不发生变异，使评价的顺序变得无关紧要。因此，Clojure可以执行优化，但是Java编译器却不能——这就是为什么函数式编程在Java中是危险的原因。因为，Java不是真正的函数式语言，JIT和javac无法像在一个真正的函数式语言中积极且有效地优化函数构造对象，比如返回无穷个列表的标准函数计算，都是Java程序的死穴。这也是为什么函数式编程在Java中危险的原因。
这里，也许你会反对我的观点，OK，你无须在Java中返回所有的整数列表（或者甚至是所有的ints）；但是相信没人做到这一点。
我们来一起看看比较现实的做法。这里我再次使用递归来计算而不是循环：
publicclassSquares{ 
publicstaticvoidmain(Stringargs[]){ 
squareAndPrint(1,Integer.parseInt(args[0])); 
} 
publicstaticvoidsquareAndPrint(intn,intmax){ 
System.out.println(n*n); 
if(max>n){ 
squareAndPrint(n+1,max); 
} 
} 
}
开始运行！
很抱歉，堆栈溢出。这就是为什么在XOM中我小心翼翼地使用循环，即使递归的地方十分清楚也不使用递归。否则，精心配置XML文档可能会造成XOM-using程序来转储核心。因此，避免在非函数式语言中进行大量递归，正如Java和C不仅仅是性能需求，也是安全方面的要求。
写在最后：
我不是说函数式编程不好，也不是说函数式编程低效，其实，我热爱函数式编程。就像我的同事认为函数式编程是自然、直观且美丽的编程风格，但当它作为一们语言比如为Haskell重新设计时，Java中函数语句的性能Bug绝对能要了你的命。
英文出自：Cafe.elharo
(责任编辑：leonlee07)
打印
分享
评论分享到：
分享
顶一下(0)
上一篇： 十年历史的KDE bug修复... 下一篇： 126只基金发布分红公告...
相关推荐：创业资讯创业新闻科技新闻科技
“由于地址不明原因，本网使用部分文字、摄影作品报酬未能及时支付，在此深表歉意，相关权利人可与中华版权代理总公司联系协助解决”。地址：北京市东城区安定门东大街28号雍和大厦西楼三层。邮编：100007,电话：010－68003887 (转) ，传真：010－68003940
创业贸易管理故事指导项目技巧知识营销职场更多
美女弃高薪创业，自办公司8个月赚300万80后乞丐网上卖烧烤 500元起家赚400万
4000元起家，2年赚得30万下岗女工摆地摊月销80万6000元创业 首月就赚1.2万大学生创业2年坐拥800万！
创业贫困生创业 2年赚到400万白手起家 23岁赚到100万
商机85个最快赚钱方法2013年创业必成功的项目
外贸外贸新手怎么做外贸促进外贸谈判成功的三个技巧
职场兼顾工作与家庭的十大理想工作2013年压力最小的工作
裸替现状:挨打被摸又陪睡爱因斯坦成功的10个秘诀2013年前景最好的职业盘点历届车模大尺度表演
评论


本周热门资讯排行
34914小情侣淘宝开店卖袜子 3个月4钻经...
1
339466000元创业，如何做到首月就赚1....
2
223194000元起家，2年如何赚得30万？
3
21868加速Web开发的9款知名HTML5框架
4
2057090后大学生1000元起家，3次创业年...
5
1485080后乞丐网上卖烧烤 500元起家赚...
6
14003大学毕业生蜗居生活，从一千到月...
7
1326680后小情侣淘宝成就事业，2年进军...
8
12991夫妻店淘宝掘金记：从零到8000万...
9
焦点资讯
[创业]高中生辍学创业，网上卖零食5年赚1000万
[贸易]2013年世界需要一个怎样的中国
[管理]提升企业基础战略管理能力的措施
[职场]中国涨薪最慢的职业出炉
[创富]贫困学生创业开公司 2年赚到400万！
[理财]6000元创业，如何做到首月就赚1.2万？
精彩画报精彩图集
 
炫富的滚进来，哥家是造钱的！
北京“红灯区”的深刻调研！
揭秘日本最奢华“天上人间”
 
2013年就业前景最好的10大职业
百万年薪必备的15种能力
20年后职场最吃香的14个新工作
干货、人脉、导师尽在商友圈更多
小姑娘全职2年赚百万！ 情趣内衣竟是这样做... 揭秘胸模真实辛酸！ 云南一母猪产8小孩！

阿里巴巴版权所有 1999-2013 著作权与商标声明 | 法律声明 | 服务条款 | 隐私声明 | 关于阿里巴巴 | 联系我们 | 网站导航
阿里巴巴集团: 阿里巴巴网络 -国际站 中国站 全球速卖通 | 淘宝网 | 天猫 | 一淘 | 聚划算 | 阿里云 | 中国雅虎 | 支付宝
