百度之星2009程序设计大赛 初赛第二场试题 

http://www.Baiduer.com.cn　2009年05月31日 　责编:俞昊然 　来源:百度爱好者


2009年5月31日14：00-18：00，2009百度之星大赛在线资格赛（初赛）展开。百度爱好者（Baiduer.com.cn）在第一时间给大家带了初赛题目。第二场初赛共四题，分别是Sorry，打错了（250分）、树形控件（300分）、交点覆盖（300分）和我的地盘（350分），总计1200分。
 
1.Sorry，打错了（250分）
 
题目描述
 
龙先生是一位著名的记者，平时最喜欢报道一些鲜为人知的故事。最近，由于听说索马里海盗猖獗，他打算实地探访，做一个深入的调查。
 
龙先生联系了索马里当地的一些朋友，做了周密的计划——坐船从三亚出发，越过南海，趟过印度洋，最后到达索马里海域的亚丁湾。可就在船离海岸仅10公里时，突然一伙海盗突袭客船，所有人都被劫持到了索马里城内。
 
在人质被运送到“海盗基地”的途中，龙先生凭着多年的经验，乘海盗不注意，跃下了卡车，在无数砰砰的枪声中，没命的向外跑去。跑了几分钟后，龙先生突然看到一个电话厅。他迅速向电话厅奔去，想打电话向住在索马里的朋友求助。然而，随着追赶脚步声的临近，龙先生估算留给自己打电话的时间最多30秒，决不容许拨错电话。
 
遗憾的是，越是这种危机的时候，越容易犯错。身为“智者”的您，请帮龙先生算一算：当他打电话给一位朋友的时候，恰好打给了另外一个人（不一定是他朋友）的概率是多少？已知索马里是一个有不超过10万人的小城，电话号码只有6位。
 
输入格式
 
第1行：索马里人数n。n <= 100000
 
接下来的n行：所有人的电话号码
 
接下来的10行：一个10*10错按表，表示按a键时按成b键的概率（第一行第一列表示按0时按成0的概率，第一行第二列表示按0时按成1的概率。所有的概率用整数0~10表示，即实际概率要除以10）
 
下一行：索马里城中你的朋友人数m。m <= n。
 
接下来的m行：每个朋友的电话号码。
 
输出格式
 
打给你的每一个朋友时候，打通其他人的电话的概率（每行一个概率，乘以10^6 后用整数表示）
 
输入样例
 
5
 
267535
 
229127
 
693606
 
861879
 
902375
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
1 1 1 1 1 1 1 1 1 1
 
5
 
267535
 
229127
 
693606
 
861879
 
902375
 
输出样例
 
4
 
4
 
4
 
4
 
4
 
测试数据
 
共10个测试点，基本参数如下表：
 





测试点编号
 
n
 
m
 


1
 
10
 
5
 


2
 
50
 
25
 


3
 
300
 
100
 


4
 
2000
 
1000
 


5
 
8000
 
3000
 


6
 
30000
 
10000
 


7
 
50000
 
10000
 


8
 
100000
 
20000
 


9
 
100000
 
50000
 


10
 
100000
 
100000
 



2. 树形控件 （300分）
 
题目描述
 
在本题中，你需要和一种通用的交互控件——树形控件打交道。树形控件中的结点分为两类：实体结点和链接结点，后者类似于Linux中的符号链接。
 
用户可以通过拖拽节点改变树的结构。用户在一个结点A上按下鼠标左键，移动到另外一个结点B上，松开鼠标，即可将结点A移动到结点B下面，作为B的最下方的儿子。如果改用鼠标右键拖动，表示结点A的位置不变，只是在结点B下创建一个到源结点A的链接结点。树中的所有实体节点始终是全部展开的，而链接结点只显示结点本身，不展开被链接的子树。
 
屏幕是一个矩形的区域，左上角是坐标原点(0,0)，x轴正方向指向右， y轴正方向指向下。树的每个结点的高度为10个像素，宽度为50个像素。子结点相对父结点要向右缩进10个像素。另外，每个结点前都有一个展开/折叠的控件，宽度和高度均为10像素。为了简单起见，这里所有的展开/折叠控件均处于失效状态，不响应与此相关的用户事件。换句话说，要想把结点A拖拽到结点B下，点击和释放时，鼠标指针必须分别位于结点A/结点B所属的10*50区域中（不能位于该矩形的四个边界上）。如果点击或释放时鼠标指针不在任何结点区域内，或者点击与释放时鼠标在同一个结点区域内，此操作应被认为是无效的（状态码为1）。
 
即使控件能顺利检测到点击和释放时鼠标所处的结点A和结点B，拖拽操作也可能是非法的（状态码为2）。下图展示了两个连续的链接操作，其中第两个操作是非法的，因为这将导致树上形成一个环。其他非法操作包括：将任意结点拖拽到其后代结点上（不管是移动还是链接）、尝试把任意结点拖拽到链接结点上。
 


如果操作完整，并且没有出现上述任何一种非法情况，则视为操作合法，状态码为0。注意：可以将一个结点移动到其父结点下，尽管树结构不会发生任何变化。
 
请编写控件交互逻辑，输出每个用户操作的状态码。
 
输入格式
 
第1行是两个正整数m，n，其中m为树的非叶结点个数，n为操作次数。 1 <= m,n <= 1000
 
以下m行是初始树的描述。每行的开头是一个非叶结点的名称，接下来是它的各个子结点名称。每个实体节点的名称都是唯一的，是一个由数字和小写字母组成的字符串（长度不超过20）。如果一个结点是链接节点，其名称与源结点相同，其后用“(link)”标注（如果多次创建链接，最后也只有一个 “(link)”而不是多个）。输入保证合法（没有环，链接结点没有子结点）。在任何时候，树上最多有10000个结点。
 
之后的n行描述交互动作，每行格式为：
 
Button x1 y1 x2 y2
 
例如，L 15 65 25 55表示在(15,65)单击左键并拖拽到(25,55)； R 15 65 25 55表示在(15,65)单击右键并拖拽到(25,55)；
 
输出格式
 
输出为n行，依次为每个输出的返回码。
 
样例输入
 
2 3
 
root node1 node2 node3
 
node1 node2(link)
 
L 25 25 25 15
 
R 25 45 25 35
 
R 25 15 25 55
 
样例输出
 
1
 
0
 
2
 
测试数据
 
共20个测试点，基本参数如下表：
 





测试点编号
 
m
 
n
 
备注
 


1
 
1
 
4
 


2
 
1
 
2
 


3
 
1
 
3
 


4
 
3
 
6
 


5
 
1
 
999
 


6
 
2
 
4
 


7
 
100
 
100
 


8
 
500
 
10
 


9
 
500
 
10
 


10
 
500
 
100
 


11
 
100
 
300
 


12
 
150
 
400
 


13
 
200
 
450
 


14
 
250
 
500
 


15
 
300
 
550
 


16
 
400
 
600
 


17
 
600
 
600
 


18
 
800
 
800
 


19
 
900
 
900
 


20
 
1000
 
1000
 



3. 交点覆盖 （300分）
 
题目描述
 
平面上有N条直线，至少有两条直线不相互平行。
 
任务一：求一个周长最小的凸多边形，包围住所有直线的交点。
 
任务二：求一个周长最小的矩形，包围住所有直线的交点。
 
输入格式
 
第1行包含一个整数T，即任务编号（T=1或2）。
 
第2行为一个整数N，为直线的数目。接下来有N行，每行包含四个数，为一条直线上两点的坐标。
 
仅一行，为周长最小的矩形的周长，保留两位小数。
 
输出格式
 
如果T=1，输出凸多边形的最小周长，保留两位小数；
 
如果T=2，输出矩形的最小周长，保留两位小数。
 
样例输入1
 
1
 
4
 
0 0 1 0
 
0 0 0 1
 
1 1 1 0
 
1 1 0 1
 
样例输出1
 
4.00
 
样例输入2
 
2
 
3
 
0 2 3 0
 
3 0 3 2
 
3 1 0 2
 
样例输出2
 
8.85
 
样例输入3
 
2
 
6
 
2 0 0 9
 
6 5 3 8
 
9 0 7 1
 
9 4 0 3
 
6 2 2 6
 
0 5 2 8
 
样例输出3
 
51.47
 
测试数据
 
共40个测试点，基本参数如下表：
 





测试点编号
 
T
 
N
 


1
 
1
 
3
 


2
 
1
 
10
 


3
 
1
 
20
 


4
 
1
 
100
 


5
 
1
 
1000
 


6
 
1
 
2000
 


7
 
1
 
5000
 


8
 
1
 
10000
 


9
 
1
 
20000
 


10
 
1
 
50000
 


11-20
 
1
 
100000
 


21
 
2
 
3
 


22
 
2
 
10
 


23
 
2
 
20
 


24
 
2
 
100
 


25
 
2
 
1000
 


26
 
2
 
2000
 


27
 
2
 
5000
 


28
 
2
 
10000
 


29
 
2
 
20000
 


30
 
2
 
50000
 


31-40
 
2
 
100000
 



在所有数据中，坐标绝对值均不超过1,000。
 
4. 我的地盘 （350分）
 
题目描述
 
百度公司的员工们在工作之余，经常以产品组为单位组织一些活动，包括吃大餐、春游秋游、公益活动、唱KTV、看电影、体育比赛等。这些活动有一个专业的名字，叫做team building，我们也亲切的称之为“bui”。
 


最近，地图产品组刚刚完成一个大项目，大家决定大bui一场。一阵七嘴八舌后，很多内容被提了出来，最终确定先打乒乓球，然后吃饭，最后K歌。问题是，谁也不知道有什么地方可以同时满足这三个需求。
 
不过没有什么问题可以难倒我们的工程师。很快，就有人写出了程序，为大家找到了合适的地点。
 
地图覆盖之处，皆为我的地盘。你想挑战一下我们的工程师吗？想为我们找出更合适的地点吗？那就来吧。
 
输入格式
 
第1行是一个整数k，表示某范围内所有的POI（Point of Interest）点数量，后续k行每行用5个字段描述一个POI点。它们的含义和格式如下表：
 
内容 数据格式 数据范围
 
POI编号 Int，唯一 [0,231-1]
 
POI类型 字符串 0-16字节(不超过15种类型)
 
POI级别 Int 0-5(越大表示越高级)
 
POI经度 Double [0,180],6位有效精度
 
POI纬度 Double [0,180],6位有效精度
 
需要注意的是这里的经纬度跟通常的经纬度范围是不一样的
 
随后是一个整数n(0 < n <= 20)，表示共n组查询。以下n行，每行表示一组查询，格式为：
 
POI类型1 POI类型2 POI类型3 最低级别 最高级别
 
分别表示三个bui地点各自的类型、最低级别和最高级别。
 
输出格式
 
对于每组查询”t1 t2 t3 min max”，输出三个POI编号p1、p2、p3，满足：
 
•p1、p2、p3的类型分别为t1、t2和t3。
 
•p1、p2、p3的级别不小于min，不大于max。
 
•p1、p2、p3的两两欧几里得距离之和应尽量小。
 
输入数据保证至少存在一个解。
 
样例输入
 
5
 
1 休闲娱乐 3 11.122843 12.431021
 
2 餐饮服务 2 13.384021 10.230425
 
3 旅游景点 3 12.234492 9.234268
 
4 休闲娱乐 5 20.242391 39.304233
 
5 教育机构 1 42.243292 67.232065
 
1
 
休闲娱乐 餐饮服务 旅游景点 0 5
 
样例输出
 
1 2 3
 
测试数据
 
点击此处下载一份POI数据。所有测试点中的POI数据都基于此数据生成。可能的变动包括：
 
•修改POI编号
 
•对经纬度加入随机干扰（变化不会超过1%）。
 
•修改POI类别和级别
 
•加入不超过1%的新点，各项属性均完全随机
 
共20组测试点，其中第i个测试点包含i组查询。1 <= i <= 20
 
注意事项
 
•对于每个测试点，设已知最优解为D，则不超过1.05D的任意解均是可以接受的。
 
•请不要把离线计算的结果保存在源代码中（例如，直接把某些输入的答案保存在常量数组中，读取输入后直接输出），否则本题得0分。
 
•今年新增比赛规则: 公布所有选手的源代码。

