万一的 Delphi 博客

记录学习过程中的点点滴滴，是喜欢、不是职业；记性不好，特别需要这么一个博客。
博客园    首页    新随笔    联系    订阅    管理
随笔 - 2063  文章 - 78 评论 - 10903 trackbacks - 253

提示1: 点击 标题 可进入首页;   提示2: 从搜索引擎中搜索 万一 可迅速找到这里.  
  
随笔分类(2513)

问与答(155)
常用列表(25)
其他列表(20)
点点滴滴-日积月累(26)
2009-2010 新功能(75)
XE2 与 FireMonkey(51)
学习官方示例(15)
使用泛型(33)
System 单元(34)
SysUtils 单元(34)
从 VCL 中吸取营养(14)
Classes 单元(2)
DateUtils 单元(20)
Math 单元(4)
StrUtils 单元(7)
Graphics 单元(5)
Variants 单元(1)
Delphi IDE 使用(12)
Delphi 编译指令(7)
Pascal 与 Console(4)
Delphi 语言常识(18)
程序语句(8)
数据类型相关(50)
运算符相关(8)
数组相关(23)
类相关(86)
接口相关(11)
DLL 相关(5)
Delphi 内存与指针(15)
Delphi 其他小技巧(31)
数据库编程(39)
关于资源文件(19)
字符串操作及相关函数(54)
数学操作及相关函数(3)
文件操作及相关函数(22)
颜色操作及相关函数(11)
时间操作及相关函数(23)
常用自定义函数、单元(56)
菜单相关(15)
TStringGrid(12)
TTreeView(18)
TListView(4)
TWebBrowser(10)
其他常用控件(34)
TApplication(1)
TClipboard 类(7)
TScreen 类(10)
注册表类 TRegistry(4)
Delphi 中的容器类(10)
Delphi 中的流类(13)
学习 Delphi 类的实现(11)
错误处理(2)
Delphi 与正则表达式(29)
Delphi 的绘图功能(29)
Delphi 与 GDI+(202)
Delphi 与 XML(35)
Delphi 与 COM(3)
Delphi 与 DirectX(116)
Direct2D(43)
Delphi 与 多线程(22)
Delphi 与 JOSN(19)
Delphi 与汇编入门(70)
汇编指令列表(49)
算法与数据结构(17)
Windows 消息(29)
API 常识(16)
API 窗口函数(15)
API 菜单函数(4)
API 硬件与系统函数(36)
API 控件与消息函数(12)
API 进程与线程函数(10)
API 绘图函数(58)
API 图像函数(14)
API 文本与字体函数(14)
API 内存与剪切板函数(14)
API 文件处理函数(12)
API WAVE 专栏(50)
API MIDI 专栏(32)
API 其他多媒体函数(2)
API 钩子相关函数(24)
API 字符及字符串函数(15)
API 网络函数(2)
API 未归类函数(6)
Windows 底层编程(30)
多媒体函数库Bass.dll(17)
学习 C 语言(45)
学习 C++(7)
C# 与 Net(43)
HTML 与 CSS(22)
JavaScript(51)
其他(122)
随笔档案(2063)

2012年3月 (12)
2012年2月 (3)
2012年1月 (3)
2011年12月 (6)
2011年11月 (6)
2011年10月 (60)
2011年9月 (22)
2011年7月 (3)
2011年6月 (5)
2011年5月 (12)
2011年4月 (42)
2011年3月 (23)
2011年2月 (4)
2011年1月 (45)
2010年12月 (4)
2010年6月 (1)
2010年5月 (14)
2010年4月 (50)
2010年3月 (7)
2010年2月 (20)
2010年1月 (29)
2009年12月 (68)
2009年11月 (22)
2009年10月 (75)
2009年9月 (1)
2009年6月 (9)
2009年5月 (45)
2009年4月 (7)
2009年3月 (33)
2009年2月 (43)
2009年1月 (130)
2008年12月 (50)
2008年11月 (66)
2008年10月 (44)
2008年9月 (19)
2008年8月 (65)
2008年7月 (42)
2008年6月 (120)
2008年5月 (79)
2008年4月 (59)
2008年3月 (120)
2008年2月 (242)
2008年1月 (145)
2007年12月 (154)
2007年11月 (54)
积分与排名

积分 - 4222522
排名 - 4
最新评论

1. Re:学习结构[记录]类型(5) - 结构的方法
万一老师，
        想问你个问题，你上面的记录类型方法，只能在delphi2007运行，在delphi7， function RecShow: string;  这个方法就是错误的。这方法能在delphi7实现吗？
--不灭的记忆
2. Re:理解 Delphi 的类(十) - 深入方法[26] - 回调函数
最后直接调用无需再声明Fun变量，在开始定义实现时本身就是和TFunType本身就是类型兼容函数了

ShowMessageFmt('%d', [TcallBack(4, myFun)]);
--haiou327'Blog
3. Re:如果提取网页中的变量 - 回复 lancernig 的问题
万老师，请教，怎样遍历包含n层框架网页中所有元素？
--清风徐徐
4. Re:使用 TListView 控件(3)
向楼主学习，嘿嘿。。。
--不灭的记忆
5. Re:判断一个数组的长度用 Length 还是 SizeOf ?
你好，有个问题请教一下：一个record结构中有动态数组，如：Tinfo = packed record num : Byte; array : array of LongWord; end;1、在程序里用了setLength(info.array,info.num);用sizeof好像得不到正确的大小。2、如果要把这个record写入文件或内存流中，mStream.WriteB...
--ka_ka
6. Re:现在, Delphi 的多线程已经非常易用了!
写的好。匿名线程对象。第一次看到这个函数。CreateAnonymousThread。
--线木偶
7. Re:现在, Delphi 的多线程已经非常易用了!
不释放？
--胡勇-EricHu
8. Re:以接口为主导的设计中, 我在使用的框架模式
谢谢万一老师的资料。
我碰到一个问题不太明白，还请指教。
我想在dll中调用在主程序中实现的接口该如何操作那？
--六叶子
9. Re:FireMonkey 绘图(1)
很想与万老师一起学习啊.
万老师还没有时间更新Firemonkey吗?
--梦断难寻
10. Re:使用钩子函数[1]
好像很牛逼的样子！
--卿卿之影
11. Re:在 Delphi 中调用 JavaScript(2)
如果能把万一的博客看完并且理解透彻了,那就成为一个delphi的高手了!
--编程小爬虫
12. Re:TWebBrowser 与 MSHTML(3): window 对象的属性、方法、事件纵览
你好，请问一下，我想实现鼠标在网页上点击时取得所在位置的表单元素，我用 elementFromPoint已经实现了，现在有个问题是如果鼠标位置有iframes，就取不到，有什么办法吗？
--liqiao
13. Re:用 API 提取、写入指定网站的 Cookie - 回复 &quot;bangrj&quot; 的问题
楼主，你好，我问一下，按你的方法，我获取到了cookie，现在我像循环cookie第一项，给他加上过期时间，但用似乎不能对buf进行操作，后面一有操作，buf就为空了，这是怎么回事。var temp,domain:WideString;flags,Headers,targetFrameName,postData:OleVariant;url,ref,cookie:string;buf: array...
--liqiao
14. Re:WinAPI: SetBkMode - 设置背景模式
不错~~
--微曦风影
15. Re:学 Win32 汇编[24] - 移位: SHL、SHR、SAL、SAR、ROL、ROR、RCL、RCR、SHLD、SHRD
很有帮助，感谢
--Claruarius
16. Re:JSON 之 SuperObject(1)
万老师 如何检查是否有 jo['Name'] 这个属性是否存在呢?  以避免转换的时候出错?
--绵白糖
17. Re:Delphi 正则表达式之TPerlRegEx 类的属性与方法(1): 查找
万老师 貌似 delphi 不支持\u4e00-\u9fa5 这样的正则表达式无法使用  我现在用的是D2010
--绵白糖
18. Re:提取网页中的所有链接、点击第 n 个链接 - 回复 &quot;刘丽&quot; 的问题
厉害，请问效果图用什么工具做的
--liqiao
19. Re:JSON 之 SuperObject(4): 增、删、改
万一老师 请问下 如何增加数组?
--绵白糖
20. Re:学点 C 语言(37): 函数 - 常量(const)参数
很直观！！
--liushuaikobe
多线程编程(1) - 先入门再说


多线程应该是编程工作者的基础技能, 但这个基础对我来讲的确有点难(起码昨天以前是这样).

开始本应该是一篇洋洋洒洒的文字, 不过我还是提倡先做起来, 在尝试中去理解.

先试试这个:
procedure TForm1.Button1Click(Sender: TObject);
var
  i: Integer;
begin
  for i := 0 to 500000 do
  begin
    Canvas.TextOut(10, 10, IntToStr(i));
  end;
end;


上面程序运行时, 我们的窗体基本是 "死" 的, 可以在你在程序运行期间拖动窗体试试...

Delphi 为我们提供了一个简单的办法(Application.ProcessMessages)来解决这个问题:
procedure TForm1.Button1Click(Sender: TObject);
var
  i: Integer;
begin
  for i := 0 to 500000 do
  begin
    Canvas.TextOut(10, 10, IntToStr(i));
    Application.ProcessMessages;
  end;
end;


这个 Application.ProcessMessages; 一般用在比较费时的循环中, 它会检查并先处理消息队列中的其他消息.

但这算不上多线程, 譬如: 运行中你拖动窗体, 循环会暂停下来...

在使用多线程以前, 让我们先简单修改一下程序:
function MyFun: Integer;
var
  i: Integer;
begin
  for i := 0 to 500000 do
  begin
    Form1.Canvas.Lock;
    Form1.Canvas.TextOut(10, 10, IntToStr(i));
    Form1.Canvas.Unlock;
  end;
  Result := 0;
end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  MyFun;
end;


细数上面程序的变化:
1、首先这还不是多线程的, 也会让窗体假 "死" 一会;
2、把执行代码写在了一个函数里, 但这个函数不属于 TForm1 的方法, 所以使用 Canvas 是必须冠以名称(Form1);
3、既然是个函数, (不管是否必要)都应该有返回值;
4、使用了 500001 次 Lock 和 Unlock.

Canvas.Lock 好比在说: Canvas(绘图表面)正忙着呢, 其他想用 Canvas 的等会;
Canvas.Unlock : 用完了, 解锁!

在 Canvas 中使用 Lock 和 Unlock 是个好习惯, 在不使用多线程的情况下这无所谓, 但保不准哪天程序会扩展为多线程的; 我们现在学习多线程, 当然应该用.

在 Delphi 中使用多线程有两种方法: 调用 API、使用 TThread 类; 使用 API 的代码更简单.
function MyFun(p: Pointer): Integer; stdcall;
var
  i: Integer;
begin
  for i := 0 to 500000 do
  begin
    Form1.Canvas.Lock;
    Form1.Canvas.TextOut(10, 10, IntToStr(i));
    Form1.Canvas.Unlock;
  end;
  Result := 0;
end;

procedure TForm1.Button1Click(Sender: TObject);
var
  ID: THandle;
begin
  CreateThread(nil, 0, @MyFun, nil, 0, ID);
end;


代码分析:
CreateThread 一个线程后, 算上原来的主线程, 这样程序就有两个线程、是标准的多线程了;
CreateThread 第三个参数是函数指针, 新线程建立后将立即执行该函数, 函数执行完毕, 系统将销毁此线程从而结束多线程的故事.

CreateThread 要使用的函数是系统级别的, 不能是某个类(譬如: TForm1)的方法, 并且有严格的格式(参数、返回值)要求, 不管你暂时是不是需要都必须按格式来; 
因为是系统级调用, 还要缀上 stdcall, stdcall 是协调参数顺序的, 虽然这里只有一个参数没有顺序可言, 但这是使用系统函数的惯例.

CreateThread 还需要一个 var 参数来接受新建线程的 ID, 尽管暂时没用, 但这也是格式; 其他参数以后再说吧.

这样一个最简单的多线程程序就出来了, 咱们再用 TThread 类实现一次
type
  TMyThread = class(TThread)
  protected
    procedure Execute; override;
  end;

procedure TMyThread.Execute;
var
  i: Integer;
begin
  FreeOnTerminate := True; {这可以让线程执行完毕后随即释放}
  for i := 0 to 500000 do
  begin
    Form1.Canvas.Lock;
    Form1.Canvas.TextOut(10, 10, IntToStr(i));
    Form1.Canvas.Unlock;
  end;
end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  TMyThread.Create(False);
end;


TThread 类有一个抽象方法(Execute), 因而是个抽象类, 抽象类只能继承使用, 上面是继承为 TMyThread.

继承 TThread 主要就是实现抽象方法 Execute(把我们的代码写在里面), 等我们的 TMyThread 实例化后, 首先就会执行 Execute 方法中的代码.

按常规我们一般这样去实例化:
procedure TForm1.Button1Click(Sender: TObject);
var
  MyThread: TMyThread;
begin
  MyThread := TMyThread.Create(False);
end;
因为 MyThread 变量在这里毫无用处(并且编译器还有提示), 所以不如直接写做 TMyThread.Create(False); 

我们还可以轻松解决一个问题, 如果: TMyThread.Create(True) ?
这样线程建立后就不会立即调用 Execute, 可以在需要的时候再用 Resume 方法执行线程, 譬如:
procedure TForm1.Button1Click(Sender: TObject);
var
  MyThread: TMyThread;
begin
  MyThread := TMyThread.Create(True);
  MyThread.Resume;
end;

//可简化为:
procedure TForm1.Button1Click(Sender: TObject);
begin
  with TMyThread.Create(True) do Resume;
end;

使用 TThread 类时, Delphi 有提供的模板, 但用 IDE 写代码很方便, 我重写一遍录下来给大家看:



期间使用了 Ctrl+J、Shift+Ctrl+C、Ctrl+Alt+P 等快捷键.

重要的修正与补充:
在 TThread 类的例子中, 应该有这句: FreeOnTerminate := True; (原来漏掉, 代码中已加上; 但动画加不上了).

先说它什么意思:
类 Create 了就要 Free; 
但 TThread(的子类) 有特殊性, 很多时候我们不能确定新建的线程什么时候执行完(也就是什么时候该释放); 
如果线程执行完毕自己知道释放就好了, 所以 TThread 给了一个布尔属性 FreeOnTerminate, 如果为 True, 线程执行完毕后就会自释放.

我怎么会忽略了这么重要的问题呢? 原因有二: 
1、我一直在追求最精炼的代码;
2、我手头上不只一本书上介绍说: FreeOnTerminate 的默认值是 True(错误!), 经落实, 应该是 False, 起码在 Delphi 2007 和 2009 中是这样; 或许以前的某个版本和现在不一样.

分类: Delphi 与 多线程
绿色通道： 好文要顶 关注我 收藏该文与我联系 
万一
关注 - 34
粉丝 - 498
荣誉：推荐博客
+加关注
2 0
(请您对文章做出评价)
« 上一篇：图解 CSS (11): 理解样式表的逻辑
» 下一篇：多线程编程(2) - 从 CreateThread 说起
posted on 2009-02-05 16:26 万一 阅读(24073) 评论(75) 编辑 收藏

12

FeedBack:
#26楼  2009-02-09 01:17 模拟[未注册用户]
--引用-------------------------------------------------- 
万一: @模拟 
var 
x,y: Integer; 
begin 
x := 0; 
y := 0; 
mouse_event(MOUSEEVENTF_LEFTDOWN, x, y, 0, 0); 
mouse_event(MOUSEEVENTF_LEFTUP, x, y, 0, 0); 
end; 
-------------------------------------------------------- 
这一个函数有点不解...... 

我将得到的x和y的值替换后.当我激活按钮。他也只会点击当前的位置。而不会生成我设置的那一个位置。。我刚看了一些人家的实例。。也没找到合适的。请指教
  
#27楼  2009-02-09 02:26 模拟[未注册用户]
--引用-------------------------------------------------- 
模拟: --引用-------------------------------------------------- 
万一: @模拟 
var 
x,y: Integer; 
begin 
x := 0; 
y := 0; 
mouse_event(MOUSEEVENTF_LEFTDOWN, x, y, 0, 0); 
mouse_event(MOUSEEVENTF_LEFTUP, x, y, 0, 0); 
end; 
-------------------------------------------------------- 
这一个函数有点不解...... 

我将得到的x和y的值替换后.当我激活按钮。他也只会点击当前的位置。而不会生成我设置的那一个位置。。我刚看了一些人家的实例。。也没找到合适的。请指教 
-------------------------------------------------------- 
忘记转换当前的位置了搞掂了。不过此类的方法像得有点笨拙。因为鼠标会自己走过去。有没有其他的办法可以无需这样就可以实现点击呢？
  
#28楼[楼主]  2009-02-09 09:45 万一  
@模拟 
帮你理一下思路: 
1、用 mouse_event 可以模拟鼠标点击, 但这不能用在 "点击网页上的链接". 
2、激活 "网页上的链接" 有几种办法, 这要根据链接的不同特点来决定. 
3、如果提取 "网页上的全部链接", 我举过的例子只可用在最普通的网页上, 对框架网页等不可以. 

这是三个(是三个)问题, 甚至是互不相关的三个问题 ... 建议你先放一放, 改日再看容易理出头绪.
支持(0)反对(0)
  
#29楼  2009-02-09 09:52 外来天客  
继承 TThread 主要就是实现抽象方法 Execute(把我们的代码写在里面), 等我们的 TMyThread 实例化后, Execute 方法会被立即执行, Execute 执行完毕, 线程将自动销毁, 所以也不需要手动 Free. 


这个好像有点问题哦，如果要让线程自动销毁并释放，好像得让线程的属性FreeOnTerminate := True吧！ 就像1楼的那位兄弟说的那样，你那段代码会引起内存泄漏的
支持(0)反对(0)
  
#30楼  2009-02-09 14:08 模拟[未注册用户]
--引用-------------------------------------------------- 
万一: @模拟 
帮你理一下思路: 
1、用 mouse_event 可以模拟鼠标点击, 但这不能用在 &quot;点击网页上的链接&quot;. 
2、激活 &quot;网页上的链接&quot; 有几种办法, 这要根据链接的不同特点来决定. 
3、如果提取 &quot;网页上的全部链接&quot;, 我举过的例子只可用在最普通的网页上, 对框架网页等不可以. 

这是三个(是三个)问题, 甚至是互不相关的三个问题 ... 建议你先放一放, 改日再看容易理出头绪. 
-------------------------------------------------------- 
1： 
我已经解决模拟点击网页的问题。但是鼠标是跟随着去的。... 
想法:能否用其他的方式。不用鼠标跟随。但可以发送鼠标点击命令的 
2: 
一般来说有几种。大概能举一个名字吗。我昨天看了几个。但是取得的地址不一样~可能我比较麻烦。但是我很有诚意解决问题的。 
3: 
这一个已经解决~ 

只和大哥讨论~~~嘿嘿。。
  
#31楼[楼主]  2009-02-09 14:20 万一  
@模拟 
回答你第一个问题: 
用程序控制鼠标直接去点击链接是不可行的, 因为用不同的浏览器、不同的分辨率下或者浏览器窗口在不同的大小的情形下, 浏览器中的元素的位置都会变化甚至隐藏. 

你后面两个问题又没了逻辑了.
支持(0)反对(0)
  
#32楼  2009-02-09 17:19 模拟[未注册用户]
--引用-------------------------------------------------- 
万一: @模拟 

回答你第一个问题: 

用程序控制鼠标直接去点击链接是不可行的, 因为用不同的浏览器、不同的分辨率下或者浏览器窗口在不同的大小的情形下, 浏览器中的元素的位置都会变化甚至隐藏. 



你后面两个问题又没了逻辑了. 
-------------------------------------------------------- 
难道没有好的方法可以模拟点击中了吗。。那么万一大哥。能不能写一个得到百度地址的实例看看呀。
  
#33楼[楼主]  2009-02-09 18:15 万一  
@模拟 
是模拟激活链接吗?
支持(0)反对(0)
  
#34楼  2009-02-09 18:44 模拟[未注册用户]
是的~。。。取得百度搜索后的地址。。。然后点击
  
#35楼[楼主]  2009-02-09 20:01 万一  
@模拟 
百度的页面我看了, 是它们用 javascript 脚步禁止了此类操作, 
这种问题不典型, 也就是说: 换一个网站可能会有另一种禁止方法. 

解决方案也会有很多, 我都不很感兴趣, 告诉你个最简单的: 
"禁用脚步"
支持(0)反对(0)
  
#36楼[楼主]  2009-02-09 23:42 万一  
@外来天客 
谢谢, 你说得对, 等有空我重新修改下.
支持(0)反对(0)
  
#37楼  2009-02-10 10:06 zhmy.michael[未注册用户]
万一老师，您好：最近一直没来关注您了，但发现您的博客排名突飞到了13，这么多人关注，感觉不可思议。呵呵。 
万一老师：最近我碰到一个关于多线程下载的问题，麻烦您帮我指点一下： 
1、当一个文件很大，下载的人很多，每个人创建多少个线程才算合理，创建算法依据什么？ 
2、Delphi哪些书籍介绍多线程下载的内容？（我已经去了很多家书店，但没有找到。） 
3、如果万一老师有多线程下载的相关例子，麻烦您传上来，参考一下。谢谢。
  
#38楼[楼主]  2009-02-10 11:00 万一  
@zhmy.michael 
这也是我需要的, 就当给我的一个作业吧, 过几天我详细解决这个问题. 
应该能找到参考代码, 不过我不愿去找了, 我想从根开始明白的彻底一点.
支持(0)反对(0)
  
#39楼  2009-02-10 16:15 哈哈1[未注册用户]
关注下一篇
  
#40楼  2009-02-10 16:18 哈哈1[未注册用户]
TGetIp = class(TThread)
private
FWeb: TWebBrowser;
Fpg:TProgressBar;
procedure Update;
public
procedure execute;override;
constructor create(IsSuspended :Boolean;Web: TWebBrowser;PG:TProgressBar);
end;

线程内的控件是不是应该传入。
  
#41楼  2009-02-14 11:12 哈哈哈，[未注册用户]
模拟点击，用atuoit 比较好，，这东东是在行
  
#42楼  2009-02-18 18:12 jack007@vip.163.com[未注册用户]
万老师您好，为什么我照上面的代码写的程序，就是在窗体上显示数字。为什么在线程执行的过程中，我关闭程序，会出错呢？
  
#43楼[楼主]  2009-02-18 20:51 万一  
@jack007@vip.163.com
为了代码简介，我没有加错误处理，你这样试试：
//把
Form1.Canvas.Lock;
Form1.Canvas.TextOut(10, 10, IntToStr(i));
Form1.Canvas.Unlock;

//改为:
try
  Form1.Canvas.Lock;
  Form1.Canvas.TextOut(10, 10, IntToStr(i));
finally
  Form1.Canvas.Unlock;
end;

支持(0)反对(0)
  
#44楼  2009-02-23 09:58 冰仪
您好，对于用多线程实时、同时、不间断接受许多张传输而来图片（448x512），您觉得有多大可行性？
  
#45楼[楼主]  2009-02-23 10:01 万一  
@冰仪 
那肯定没问题, 但传输速度主要取决于网速.
支持(0)反对(0)
  
#46楼  2009-02-24 11:39 冰仪
for i := 0 to 5 do 
begin 
dealdata := Tdealdata.create(false，date()-i); 
end; 

procedure Tdealdata.Execute; 
begin 
inherited; 
Synchronize(getattendance); 
end; 

getattendance过程查询表，保存到另一个表 
线程设置为自动释放freeonterminate := true; 

报错说是在异步运行时，操作不能够被执行，请问您知道问题在那吗？
  
#47楼[楼主]  2009-02-24 15:45 万一  
@冰仪 
竟然在 for 循环里面建立线程, 建议先做点基础的例子.
支持(0)反对(0)
  
#48楼  2009-02-24 20:08 冰仪
@万一 
实在汗颜，刚接触多线程，但老板要做一个东东，只好硬来了。 
我在您的博客已经泡了几天了，人太笨，好多东西都不是很理解。 
我的这个问题好像是数据库组件不是安全的线程，有资源冲突。另外在循环里面建线程确实很有问题。
  
#49楼  2009-02-24 20:28 Liangpei2008[未注册用户]
为每个独立的线程创建一个ADOConnection连接即可！不要共享ADO连接！共享ADO连接会造成ADO连接紊乱！
  
#50楼  2009-02-25 09:58 冰仪  
@Liangpei2008 
谢谢你的提示，我测试了一下，发现是这个问题
支持(0)反对(0)
  
#51楼  2009-03-01 10:58 Pig[未注册用户]
万分感谢，佩服之致!
  
#52楼  2009-03-24 17:12 问多文件传输难住了[未注册用户]
采用多线程接受同时发来的多个文件，该如何处理？最好把步骤说具体一点，还有就是这么多文件会不会混淆，如何将它们分隔开？先谢谢了
  
#53楼  2009-04-08 17:44 未注册用户[未注册用户]
万大哥， 
Ex怎么变成下面这个代码呢 

protected 
procedure Execute;override; 
这段代码是怎么实现的呢，我的是delphi 2007
  
#54楼  2009-04-15 09:46 潇湘博客[未注册用户]
写得不错，很有价值。
  
#55楼  2009-06-09 15:20 zeroStart  
非常好呢~~我已经看了好几遍了。
支持(0)反对(0)
  
#56楼  2009-06-28 00:28 初学Delphi[未注册用户]
万老师: 
你好! 能做一个ado的多线程控制数据库的示例吗? 
谢谢!
  
#57楼  2009-07-30 14:11 QQ:703005177[未注册用户]
万老师，为什么你写的那个myfun在我这里执行不了呢？提示未声明 ，我用的是delphi7版本。。。
我直接复制你的。他还提示我这个。。。
  
#58楼  2009-12-16 11:47 莫扎兔[未注册用户]
想学点新东西 都会来逛下..

文章都写得很好... 自己获益了不少.

谢谢啊 万一
  
#59楼[楼主]  2009-12-16 11:50 万一  
@莫扎兔
互相学习.
支持(0)反对(0)
  
#60楼  2009-12-16 16:48 阿红[未注册用户]
万一老师，我在查询中,采用CreateThread建立多线程,
type
TQryThread = class(TThread)
private
procedure Qry;
protected
procedure Execute;override;
end;

procedure TQryThread.Execute;
begin
inherited;
FreeOnTerminate := True;
Qry;
end;

procedure TQryThread.Qry;
begin
//查询代码
end;

procedure TFrmMain.button1Click(Sender: TObject);
begin
with TQryThread.Create(True) do Resume;
end;

点击按钮后，查询OK。

程序关闭时,出现system Error code:1400 无效的窗口句柄,怎么解决呀?
在程序关闭前，线程没有释放？
要如何进行释放呀？


  
#61楼[楼主]  2009-12-16 16:50 万一  
@阿红
现在会不过神来, 等有空我仔细看看.
支持(0)反对(0)
  
#62楼  2009-12-16 20:38 阿红[未注册用户]
@万一
好的，麻烦老师了，谢谢您！
  
#63楼  2009-12-18 11:19 zyt  
FreeOnTerminate := False;
支持(0)反对(0)
  
#64楼  2010-06-13 14:07 封涨停  
1.这才是真正的教学
2.被你影响到了，以后就按照这种思路写文章
3.非常有用的文章，每次遇到delphi概念都过来学学，保证每次都没让我失望，我的delphi生涯工作还能继续在国内就靠你了。
支持(0)反对(0)
  
#65楼  2010-06-13 14:08 封涨停  
引用
QQ:703005177：
万老师，为什么你写的那个myfun在我这里执行不了呢？提示未声明 ，我用的是delphi7版本。。。
我直接复制你的。他还提示我这个。。。

--------
我刚刚运行了，你什么错误
支持(0)反对(0)
  
#66楼  2011-07-16 00:07 {乌鸦}  
@模拟
要移动鼠标应该要使用这个SetCursorPos(10,10);
然后再模拟鼠标 
mouse_event(MOUSEEVENTF_LEFTDOWN,0,0,0,0); mouse_event(MOUSEEVENTF_LEFTUP,0,0,0,0); 
或是模拟键盘
Keybd_event


对了，万老师，你这些动画图片是用什么做的，效果很不错，
有时候我会把自己的学习过程录下来，不过视频文件太大了，
如果可以像万老师一个，弄万一张GIF，那就可以省好多好多的空间了。
支持(0)反对(0)
  
#67楼[楼主]  2011-07-16 08:03 万一  
@{乌鸦}
移动鼠标: SetCursorPos
模拟鼠标点击: mouse_event 或 SendInput
模拟键盘按键: keybd_event 或 SendInput

制作动画的软件: Camtasia Studio
支持(0)反对(0)
  
#68楼  2011-07-30 16:19 问题123  
各位，为啥我看的动画 有重影啊。是我的显卡问题吗?
支持(0)反对(0)
  
#69楼  2012-03-17 10:54 Hey_D  
万老师： 你当时学习的时候系统的学习是怎么学习的啊？比如我现在看完基本的语法后，写了个记事本，通讯录，然后再往后就不知道怎么学了，感觉自己学的好浅显，就会赋值，使用delphi的组件的属性，方法， if判断 偶尔的一个循环，其他什么都没用到，不知道怎么办了现在，万一老师还在么
支持(0)反对(0)
  
#70楼[楼主]  2012-03-17 11:03 万一  
@Hey_D
看别人的例子, 试着重做.
看 Delphi 源码, 了解每个(常用)库.
支持(0)反对(0)
  
#71楼  2012-03-17 11:17 Hey_D  
@万一
没想到万一老师真的在啊，还回复的这么快，太感动了。。。向您致敬！
我现在的情况：就是拖拖简单的组件，数据库学了一点点，
用一些基本的语法，然后就是看看你的博客，但是基础的我能看懂，稍微难点的我都看不懂了，就看这个线程，我还看不懂，比如creat（false）我也不知道什么意思，我的电脑里存了好多delphi资料，但是我很少能坚持下来看完，每本书都是看了前面的基本语法，再往后看到面向对象，类，还有你这博客上的泛型啊正则表达式线程这些东西的时候就不行了，我看别人源码的时候老是有些东西看不明白，然后看不明白的东西我百度上去追溯，又出现不明白的东西，感觉学习就没有主线，很乱的感觉，一点都不系统，不能循序渐进，慢慢的，就越来越糊涂，以至于现在我都要忧郁了，唉
支持(0)反对(0)
  
#72楼  2012-04-28 15:28 sonnyhao  
万老师，你好，我按照你这个写了一下图片的例子。我也是在线程未结束的时候，关闭窗体，但是我这蹦出一个错误提示“class $c0000005 with message 'access violation at oxooo4a83db: read of address ox000000010'”这个错误呢？
支持(0)反对(0)
  
#73楼  2012-04-30 19:28 Zhaokf1991  
万一老师，你在动画里的那个方框是怎么调出来的，快捷键我不大会用，谢谢
支持(0)反对(0)
  
#74楼[楼主]  2012-05-01 10:17 万一  
@Zhaokf1991
你说的可能是 Ctrl+J 或 Ctrl+空格;
其中 Ctrl+空格 可能和输入法冲突, 需从控制面板设置一下.
支持(0)反对(0)
  
#75楼  2012-08-23 03:05 blue_morning  
首先是感谢，你写的多线程系列Blog有助于我的学习。但在实际使用中发现你的所有例子均有如下误导性地方：

1、Canvas.Lock()和Canvas.Unlock()本身已经在使用临界区。所以
1.1、示例代码已经变为了多线程同步嵌套代码。
1.2、信号量的示例其实是伪并行。

2、每个线程在循环中都规律的调用Sleep（线程调用Sleep函数将立即退出CPU）。 也就是这些示例代码表现为均匀的的线程调度。把示例代码中的Sleep参数时间变大一些，就可以清楚的发现，每个线程调用Canvas画出的数值增长是均匀的（每个线程轮流加1）。这与实际中的应用出入非常大。
支持(0)反对(0)
  
12
刷新评论刷新页面返回顶部
注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。
找优秀程序员，就在博客园
博客园首页博问新闻闪存程序员招聘知识库

最新IT新闻:
· Yelp CFO表示有意与Facebook图谱搜索展开合作
· Twitter利用位置标签绘制纽约等城市地图
· 很震撼：将全世界iPhone的屏幕组合之后
· 美司法部欲强迫谷歌向FBI交出用户个人数据
· 三星Galaxy S4年内销量可能突破8000万
» 更多新闻...
最新知识库文章:
· 谈谈.NET中常见的内存泄露问题——GC、委托事件和弱引用
· BPM流程管理软件的五大创新
· IT固化是流程管理成功的重要手段
· 持续交付模式
· 关于软件开发的一些常识和思考
» 更多知识库文章...



