网易 
博客 
发现
小组
风格
 
下载最文艺的手机博客APP>
创建博客登录  加关注
莫语的小镇
技术博客
首页
日志
相册
音乐
收藏
博友
关于我
  
  
莫语
  加博友   关注他
最新日志
Linux下限制单个进程的CPU、
设计模式之观察者模式（Obse
设计模式之策略模式(Strateg
基础知识复习-正则表达式
英语论文写作的若干注意事项
如何大幅度压缩图片
随机阅读
股市大涨到底有没有秘密？
谢娜否认怀孕 综艺一姐的私服甜美搭
外国女性如何舍身“套”色狼
国五条离婚北京人成了＂京白梨＂？
12星座的情人该如何关心？
中国有庞大的时尚老年群体却无人注意他们的消费能力
首页推荐
流氓燕举牌喊'开房找我'
蔡澜：去澳门必吃的海鲜
韩开国总统故居一片破败
圈养大熊猫为何'性冷淡'
老北京民间里的四大仙儿
女性私处大小尺寸的秘密
更多>>



 【引用】Android 数据存储之三SQLite嵌入式数据库 电子邮件（二）
（转）集成测试  

2011-04-06 16:31:28|  分类： 软件测试技术 |  标签：模块  测试  组装  集成测试  单元   |字号 订阅
http://ajava.org/readbook/test/rjcsdxjc/index.html
8.6  集 成 测 试
集成测试又叫组装测试或联合测试，是在单元测试的基础上进行的一种有序测试。这种测试需要将所有模块按照设计要求，逐步装配成高层的功能模块，并进行测试，直到整个软件成为一个整体。集成测试的目的是检验软件单元之间的接口关系，并把经过测试的单元组成符合设计要求的软件。集成测试验证程序和概要设计说明的一致性，是发现和改正模块接口错误的重要阶段。

在所有的单元都经过单元测试后，各个单元都可以正常工作，那么为什么要把它们组装在一起测试是否能正常工作呢？这是因为在将单元组装成一个整体时需要考虑以下问题：

235    在把各个单元模块连接起来的时候，穿越模块接口的数据是否会丢失。

236    一个单元模块的功能是否会对另一个单元模块的功能产生不利的影响。

237    各个子功能组合起来，能否达到预期要求的父功能。

238    全局数据结构是否有问题。

239    单个模块的误差积累起来，是否会放大，从而达到不能接受的程度。

因此，单元测试后，有必要进行集成测试，发现并排除在模块连接中可能发生的上述问题，最终构成要求的软件子系统或系统。对子系统，集成测试也叫部件测试。如何合理地组织集成测试，即选择什么方式把模块组装起来形成一个可运行的系统，直接影响到模块测试用例的形式、所用测试工具的类型、模块编号和测试的次序、生成测试用例和调试的费用。

集成测试的内容包括以下两个方面：

1) 功能性测试主要解决上文中提到的几个问题，侧重于测试软件模块组装以后的功能有没有达到预期效果，这是集成测试最主要的部分。

2) 此外，集成测试还应包含其他一些测试，如可靠性测试、易用性测试、效率测试、可维护性测试等内容。

由模块组装成程序时，有两种方法。一种方法是先分别测试每个模块，再把所有模块按设计要求放在一起结合成所要的程序，这种方法称为非渐增式测试方法；另一种方法是把下一个要测试的模块同已经测试好的那些模块结合起来进行测试，测试完以后再把下一个应该测试的模块结合进来进行测试，这种每次增加一个模块的方法称为渐增式测试，这种方法实际上同时完成单元测试和集成测试。如图8-17所示的程序结构在下面的叙述中当作示例，矩形表示程序中的单元，单元之间的连线表示程序的调用层次。图8-17中单元A调用单元B、C、D，单元B调用单元E，单元D调用单元F。



图8-17  程序结构示意图

8.6.1  一次性组装方式

一次性组装方式是一种非渐增式测试方法，也可以叫做整体拼装。使用这种方式，首先对每个模块分别进行单元测试，对单元的测试次序是无关紧要的，它可以顺序地进行，也可以平行进行。最后把通过单元测试的模块组装在一起进行测试，最终得到要求的软件系统。图 8-18 示意了这个过程。



图8-18  非渐增式集成测试

在图8-18中，模块d1、d2、d3、d4、d5是对各个模块做单元测试需要用到的驱动模块，s1、s2、 s3、s4、s5是为单元测试而建立的桩模块。这种一次性组装方式试图在辅助模块的协助下，在分别完成模块单元测试的基础上，将所有测试模块连接起来进行测试。但是由于程序中不可避免地存在涉及模块间接口、全局数据结构等方面的问题，所以一次试运行成功地可能性并不是很大。其结果通常是发现错误，但是不知道去哪里找原因。查错和改错都非常困难。

非渐增式测试方法有一个贬义的名称“莽撞测试”，它的意思是一下子把几十个甚至是上百个单元很莽撞地连接在一起。显然，使用这种方法的人希望最后的组装阶段会大大缩短，并且所有的单元大体上能在一起较好地执行，这对进度比较紧的项目非常具有诱惑力，但是实际常常是相反的，用这种方法会产生一系列的问题，在讲述了渐增式测试方法后，通过对比就能看到这些问题。

8.6.2  渐增式测试

渐增式测试方法不是独立地测试每个单元，而是首先把下一个要被测试的单元同已经测试过的单元集合组装起来，然后再测试，在组装的过程中边连接边测试，以发现连接过程中产生的问题，最后通过渐增式方法逐步组装成要求的软件系统。以不同的组合方式可以有很多的渐增式测试方法。典型的有自顶向下和自底向上两种。

1. 自顶向下集成测试方法

自顶向下集成测试是按照程序和控制结构从主控模块开始，向下逐个把模块连接起来。把附属主控模块的子模块、孙模块等组装起来的方式有两种：深度优先和广度优先。

1) 深度优先方法

深度优先方法(如图8-19所示)是先把结构中的一条主要的控制路径上的全部模块组装起来。主要路径的选择与特定的软件应用特性有关，可以尽可能地选取程序主要功能所涉及的路径。



图8-19  自顶向下按深度方向组装的例子

2) 广度优先方法

从结构的顶层开始逐层向下组装。把上一层模块直接调用的模块组装进去，然后对每一个新组装进去的模块，再把其直接调用的模块组装进去。参见图8-20，从模块A出发，先组装模块B、C、D，接着是模块E、F这一层，以此类推。

深度优先和广度优先自身也存在不同的组装次序，这些选择次序一般说来无所谓，但必须遵循自顶向下的原则：新组装的模块其上层必须是被测试过的。可以从以下两点来注意次序的选择：

1) 如果存在程序的关键模块，此时我们要改变选择模块次序，使这些关键模块能尽早地组装进去。所谓的关键模块是指一个复杂的模块，或者包含有新的算法的模块，又或者是怀疑有错误的模块。尽早组装关键模块可以尽早发现关键错误，在进入组装前更改单元，另外，早组装进入意味着在后续的组装测试中将经受更频繁的考验。



图8-20  自顶向下按广度方向组装的例子

2) 在设计模块组装顺序时，要尽早使I/O模块加入序列，形成输入—— 处理—— 输出的骨架，会使以后的测试工作简化，并减少测试的辅助性工作和人为因素所造成的测试错误和问题。

自顶向下组装测试的具体步骤为：

1) 以主控模块作为测试驱动模块，把对主控模块进行单元测试时引入的所有桩模块用实际模块替代。

2) 依据所选的集成策略(深度优先或广度优先)，以及新模块的选择原则，每次用一个实际单元替换一个被调用的桩模块，并开发该单元可能需要的桩模块。

3) 每集成一个模块的同时立即进行测试，排除组装过程中可能引进的错误，如果测试发现错误，则要在修改后进行回归测试。

4) 判断系统的组装测试是否完成，若没有完成则转到第二步循环进行，直到集成结束。

自顶向下组装测试的优点是它在测试过程早期，对主要的控制点或判决点进行检验。在分解得很好的软件结构中，判决需要在结构层次的较高层确定。如果主要控制点有问题，早点认识到这个问题就变得很重要。如果选用按深度方向组装的方式，可以首先实现和验证一个完整的软件功能，可先对逻辑输入的分支进行组装和测试提供保证。此外，功能可行性较早得到证实，还能够给开发者和用户带来成功的信心。缺点是在测试较高层模块时，低层处理采用桩模块替代，不能反映真实情况，重要数据不能及时回送到上层模块，因此测试并不充分。解决这个问题有2种办法：

第一是把某些测试推迟到用真实模块替代桩模块之后进行。

第二是开发能模拟真实模块的桩模块。

2. 自底向上集成测试方法

这种测试是从程序模块结构的最底层的单元开始(即这种单元不再调用其他单元)，此后选择下一个单元时就不存在唯一的方法了。其中唯一的原则是有资格作为下一个被选择的单元满足以下条件：这些单元的全部下层单元在此前已经被测试过。自底向上的测试仅需要对每个被测试模块构造一个驱动模块，而不需要构造桩模块。

自底向上组装测试的具体步骤为：

(1) 开发一个测试驱动模块，由驱动模块控制最底层模块的并行测试；也可以把最底层模块组合成实现某个子功能的模块群，由驱动模块控制它进行测试。

(2) 用真实模块代替驱动模块，与它已经通过测试的下属模块组装成为完成更大功能的新模块群。

(3) 判断程序组装的过程是否已经达到主模块，如果是，则代表完成组装结束测试，否则从第一步开始循环执行直到组装结束。

以图8-17 所示的系统结构为例，用图8-21来说明自底向上组装测试的顺序。

       

图8-21  自底向上组装的例子

自底向上测试的优点在于，由于驱动模块模拟了所有调用参数，测试模块返回结果不影响驱动模块，生成测试数据也没有困难。如果关键模块是在结构图的底部，自底向上的测试是有优越性的。另外自底向上的组装测试不必开发桩模块。自底向上的组装测试的缺点是，当最后一个模块尚未测试时，还没有呈现出被测软件系统的雏形。因此，在测试软件系统时，应根据软件的特点和工程的进度，选用适当的测试策略，有时混合使用两种策略更为有效。

3. 混合渐增式集成测试方法

自顶向下集成测试方法和自底向上集成测试方法各有优缺点，一般来讲，一种方法的优点是另一种方法的缺点，因此产生了混合渐增式集成测试方法。下面介绍三种常见的混合渐增式集成测试方法。

1) 衍变的自顶向下的渐增式测试，它的基本思想是强化对输入/输出模块和引入新算法模块进行测试，再自底向上组装成为功能相当完整且相对独立的子系统，然后由主模块开始自顶向下进行渐增式测试。

2) 自底向上—— 自顶向下的渐增式测试，首先对含读操作的子系统自底向上直至根结点模块进行组装和测试，然后对含写操作的子系统进行自顶向下的组装与测试。

3) 回归测试，这种方式采取自顶向下的方式测试被修改的模块及其子模块，然后将这一部分视为子系统，再自底向上测试，以检查该子系统与其上级模块的接口是否匹配。

在组装测试时，测试者应当确定关键模块，对这些关键模块及早进行测试。关键模块至少应具有以下几种特征：

240    满足某些软件需求。

241    在程序的模块结构中位于较高的层次(高层控制模块)。

242    较复杂、较容易发生错误。

243    有明确定义的性能要求。

现在已经分别介绍了非渐增式测试方法和渐增式测试方法，从中可以看出渐增式测试方法相比非渐增式测试方具有以下优点：

1) 非渐增式测试需要更多的工作量，对于图8-17所示的程序模块结构，使用非渐增式测试方法可能需要5个驱动模块和6个桩模块。但对从底向上的渐增式测试方法仅需要5个驱动模块，不需要构造桩模块，减少了辅助性测试工作。

2) 非渐增式测试方法先分散测试，再集中起来一次完成组合和测试，如果在模块接口处存在差错，只会在最后的组合时一下子暴露出来。而使用渐增式测试方法可以较早地发现模块接口错误，这是由于较早地把模块组合起来进行测试所致。

3) 作为一个结果，使用渐增式测试将使调试工作变得容易，因为渐增式测试逐步组合和逐步测试模块，把可能出现的错误逐步分散暴露出来，并且由于每次组合一个模块，错误发生时，可以比较容易地定位；这些错误是在最新增加的模块的连接中出现的。反之，使用非渐增式测试方法，直到对各个模块测试结束，对整个程序进行组合时才能发现错误，这时再确定错误的位置就非常困难，因为它可能出现在程序的任何地方。

4) 渐增式测试方法利用以前已测试过的模块取代非渐增式测试方法中所需要的驱动(或桩)模块，这样对后面模块的测试会使得前面已经实际测试过的模块得到更多的检验，因而使得整个程序的测试能取得较好的效果。

那么非渐增式测试方法为什么还要存在呢？一个原因是因为在实际工作中有人是这样进行程序的组装测试的，需要在这里指出其弊端；另一个原因是非渐增式测试方法在一些特定条件和特定范围内能起到一定作用，它把整个软件系统组装起来也很快，但是必须小心谨慎。下面是一系列非渐增式测试方法应用的条件，但这仅仅是必要条件。那就是在一个做得很好且高度模块化的设计中，模块间的相互作用很小，而且详尽说明了接口，且将接口错误保持在最低限度，这时可以考虑用非渐增式测试方法。

8.6.3  组装测试的组织和实施

组装测试要完成程序的组装及测试，还要进行组装成的功能模块的测试，因此必须精心设计，并且与单元测试的完成时间协调起来。在制定测试计划时，要考虑如下因素：

244    采用何种系统组装方法来进行组装测试。

245    组装测试过程中连接各个模块的顺序。

246    模块代码编制和测试进度是否与组装测试的顺序一致。

247    测试过程中是否需要专门的硬件设备。

在解决了上述问题之后，就可以列出各个模块的编制、测试计划表，标明每个模块单元测试完成的日期、首次组装测试的日期、组装测试全部完成的日期、以及需要的测试用例和所期望的测试结果。

组装测试完成的标志是：

248    成功地执行了测试计划中规定的所有组装测试。

249    修正了所有发现的错误。

250    测试结果通过了专门小组的评审。

组装测试应由专门的测试小组来进行，测试小组由有经验的系统设计人员和程序员组成。整个测试活动要在评审人员出席的情况下进行。

本文内容搜集于互联网，如有侵犯你的权利，请来信告知。
本站只提供部分章节试读，版权为作者和出版社所有，请购买正版书籍。
看过此文的读者还看过： 
目录 -《软件测试大学教程》 
前言 -《软件测试大学教程》 
5.1 软件测试过程模型 
5.2 软件测试过程管理 
5.3 测试过程改进 
分享到：        阅读(398)| 评论(0)| 转载 (0) |举报
 【引用】Android 数据存储之三SQLite嵌入式数据库 电子邮件（二）
最近读者
登录后，您可以在此留下足迹。 
qingxu49
  
jueshi.q
  
板栗
  
scott101
  
qq281103
  
sqhua
  
影落
 
caoweira
评论
点击登录|昵称：

 
  
公司简介 - 联系方法 - 招聘信息 - 客户服务 - 隐私政策 - 博客风格 - 手机博客 - VIP博客 - 订阅此博客
网易公司版权所有 ©1997-2013
精选来自：右边印象
