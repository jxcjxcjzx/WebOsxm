TimYang
生命本没有意义，只在于你追求的东西！ 保持身体健康，坚持骑车，坚持自己的梦想，努力学习！
博客园
首页
博问
闪存
新随笔
联系
订阅
管理
随笔-87  文章-0  评论-547 
走进单元测试一：初认Unit Test

　　前言：在公司写单元测试已经有两个多月了(思想上有过纠结)，说实话有点像赶鸭子上架，在项目收尾的时候才做，很明显它的作用已经是名副其实了，而且还找像我这样的新手来写(一开始我都不怎么熟悉业务流程)，所以现在一直努力学好单元测试，写好它，把自己的事做好！

　　我也是在读程序员修炼之道 - 单元测试这本书之后，再阅读了园子中的各个文章后的感悟把，写出来跟大家一起分享！

　　电子书下载地址：http://www.kuaipan.cn/file/id_29568238492847284.htm

　　测试是贯穿整个整个软件工程的始末，做好测试对软件的质量会有一个质的保证，减少查找BUG的工作量，所以作为一个开发者需要了解各种测试流程以及核心思想，然而这次的单元测试是我们开发者必须要具备的技能，这次就让我们走进单元测试(Unit Test)！

　1.个人对单元测试的初识　　

　　　　①坚持的开发中编写单元测试，并把它培养成一种习惯！

　　　　②写出高效的单元测试，这种能力需要在实践中慢慢积累！

　　　　③提高对单元测试的认识高度，把它和编码工作同等对待！

 

　2.什么是单元测试？

　　　　通俗讲单元测试就是检查一个函数执行后它的返回结果或者它对系统数据造成的影响(或者其它方面的影响)是否跟你的期望一致，也就是为了证明代码的行为和我期望的一致！

 

　3.我们为什么要使用单元测试？

　　　　①最直接的原因是保证我们函数的正确性，如果这个函数在没有保证正确的情况下就被上层代码调用，那么随着项目的深入，调用层次会越来越深，就很容易产生严重的BUG问题，从而增加开发难度，降低开发效率！

　　　　②根本原因是减轻我们开发人员的工作量，使我们的工作变的轻松(这只是一个相对说法)！

 

　4.单元测试的内涵

　　　　如果把单元测试上升到一定程度后，它可以把我们的代码变的更加完美和简洁！

 

　5.单元测试的本质

　　　　请记住一点，不是为工作而编写单元测试，单元测试是方便我们开发人员的，可以使我们的工作变的轻松！

　　　　单元测试可以减少我们花在解决不必要的BUG之上(并不是说没有BUG，而是说减少不必要的BUG)，而把大量时间专注于业务需求上！

 

　6.函数的行为和预期的一致吗？

　　　　如果测试只考虑在正确的环境下造成正确的影响，那么这样的单元测试是不及格的！

　　　　做测试就要考虑全面，各个方面都要涉及的到，如：环境因素(也可以是系统所处在的环境)，各种异常，边界值等等，所以尽可能的考虑特殊情况，做到做到百密而无一疏(尽自己的最大努力达到)！

 　　

　7.需要依赖单元测试吗？　　　　

　　　　答案是肯定的！

       　   当你很自信的认为你写的函数是绝对正确的且没有测试代码做为依据的时候往往会出现意想不到的错误，因为你会疏忽了其它的一些情况，所以编写单元测试来保证我们函数的准确性是非常有必要的！

       　   注：后面会说明测试应该测哪些情况！

　　

 　8.单元测试干了什么，作用是什么？

　　　　①最直接的是保证了函数的正确性(这个大家都知道)！

　　　   ②还有我们可以根据单元测试来判断此函数是用来干什么的，也就说单元测试类似于一个可执行文档，其它开发人员可以通过看单元测试就会明白你测试的函数是用来干嘛的！

 　　

　9.如何进行单元测试？

　　　　 这边我们使用的VS2008，2010自带的单元测试框架！ 　　　　

 ①  使用VS自带的Unit Test，简单易学！

 ②  测试要全面！

 ③  保证所有测试都能通过，不管旧的还是新的测试代码，都要通过！

 ④  保证所有测试没有对系统中任何模块产生影响(这个很重要)！

 ⑤  及时运行测试代码，查看运行结果，保证系统的运行正常！

　　　　

　10.不要为没写测试代码找借口　　　　

　　　　一般情况的看来当你写的一个函数已经不太需要修改了，你就应该编写这个函数的单元测试代码！

       　 大多数情况下开发人员的大量时间都是修改BUG，如果能尽早的做单元测试将会减轻你的工作量(虽然不可能没有BUG，但写Unit Test却对你是有益无害的)，即使在以后的时间里出现BUG，我想你能很快的定位产生BUG的位置！

           最后写Unit Test千万不要放在项目末期，如果此时写单元测试的人还是一个刚进项目新手的话，写单元测试就是扯淡，这样的方式是不能体现单元测试的核心观念的，而我就刚好处于这个状态，真的很后怕，所以还需要多多加油，努力了解系统流程！

 

　11.如果真的没有时间写单元测试，请思考下面几个问题？

　　　　①对于你所编写的代码，你花在调试上面的时间有多少？

　　　　②你目前认为你的代码正确无比，但很有可能在系统中却存在严重隐患，你是否花了很多时间来查找这些隐患？

　　　　③对于一个新的BUG，你花了多长时间来定位这个BUG在源码中的位置？

　　　   总结：随着项目的深入，你的函数会被调用的越来越深，那么特殊情况就会经常发生，万一出现什么情况你将会耗费很多的精力来解决它，另一方面，适当的单元测试代码会很大程度上减少你的工作量，这是经过实践检验的！　　

 

总结：好了基本的单元测试思想就这么多了，希望园友们能指点一二，单元测试系列将持续更新中！ 

下一篇： 走进单元测试之二：测试需要从哪些方面着手    

 　　　　走进单元测试之三：创建自己的单元测试

　　　　 走进单元测试之四：单元测试的利器 → Mole技术　　　　 

分类: [04] 单元测试
绿色通道： 好文要顶 关注我 收藏该文与我联系 
TimYang
关注 - 45
粉丝 - 245
荣誉：推荐博客
+加关注
6 0
(请您对文章做出评价)
« 上一篇：迷茫后的感悟
» 下一篇：走进单元测试二：测试需要从哪些方面着手
posted @ 2012-02-06 19:41 TimYang 阅读(4705) 评论(11) 编辑 收藏

评论列表
   #1楼 2012-02-06 20:37 Desmond  
正在学习，关注中
支持(0)反对(0)
   #2楼 2012-02-07 00:14 超我专注  
楼主加油，期待后面的文章
支持(0)反对(0)
   #3楼 2012-02-07 08:16 甜麦圈  
unittest是每个程序员必练的基本功
支持(0)反对(0)
   #4楼 2012-02-07 09:23 magicDict  
UT很好，必须做到测试代码在正式代码之前就写。
1.UT写了之后，就明确了你正式要写的代码是干什么的。
2.UT可以自动化测试，保证了你新写的代码，新改动的部分不会引起以前代码的BUG。
3.UT逼着你必须将代码合理的模块化，帮助你解耦。
支持(0)反对(0)
   #5楼[楼主] 2012-02-07 09:32 Mr Yang  
@magicDict
你说的很有道理，你的观点我会加到文章里面去的！
支持(0)反对(0)
   #6楼[楼主] 2012-02-07 11:27 Mr Yang  
@magicDict
你说的是测试驱动开发，这个东西还没有实践过，需要有人带着做，不然我想风险有点大！:-)
支持(0)反对(0)
   #7楼 2012-03-20 19:19 Charles Yan  
说实话，我到现在都没有正式的做过单元测试，悲剧的人生。
支持(0)反对(0)
   #8楼 2013-04-16 11:54 huihui1982  
你好，文章写得不错，总结的很好，学习中。不过那本书下载的链接有问题呢，可否把程序员修炼之道 - 单元测试发到我电子邮箱里：382473658@qq.com。谢谢！！
支持(0)反对(0)
   #9楼[楼主] 2013-04-19 00:44 TimYang  
@Charles Yan


哈哈，这个有的时候还要看公司的重视程度了，不过你平时开发的时候还是需要为你做的东西写一些测试代码的！
支持(0)反对(0)
   #10楼[楼主] 2013-04-19 00:45 TimYang  
@huihui1982
链接已修复了，电子书已经发给你了，注意查收!
支持(0)反对(0)
   #11楼 2013-05-24 11:03 里贝里  
写的非常好
支持(0)反对(0)
刷新评论刷新页面返回顶部
注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。
找优秀程序员，就在博客园
博客园首页博问新闻闪存程序员招聘知识库

最新IT新闻:
· 三星Galaxy S4年内销量可能突破8000万
· 诺基亚：Lumia手机不只会低光拍照
· 2013年欧洲太空局太空夏季编程计划将于6月开始
· 联合国讨论限制杀手机器人
· Instagram自称通信公司欲扩张拒绝会员收费制
» 更多新闻...
最新知识库文章:
· 谈谈.NET中常见的内存泄露问题——GC、委托事件和弱引用
· BPM流程管理软件的五大创新
· IT固化是流程管理成功的重要手段
· 持续交付模式
· 关于软件开发的一些常识和思考
» 更多知识库文章...

公告
第 个访问者

昵称：TimYang
园龄：1年9个月
荣誉：推荐博客
粉丝：245
关注：45
+加关注
<	2012年2月	>
日	一	二	三	四	五	六
29	30	31	1	2	3	4
5	6	7	8	9	10	11
12	13	14	15	16	17	18
19	20	21	22	23	24	25
26	27	28	29	1	2	3
4	5	6	7	8	9	10
搜索
 
 
常用链接
我的随笔
我的评论
我的参与
最新评论
我的标签
随笔分类
[01] 迭代器系列(4)
[02] 学习的那些事(30)
[03] 工作总结(17)
[04] 单元测试(5)
[05] ADO.NET(2)
[06] 博客文章精选(2)
[07] 程序猿人生感悟(4)
[08] .NET设计规范(4)
[09] .NET Remoting之旅(1)
[10] 每周||每月总结(24)
随笔档案
2013年5月 (1)
2013年4月 (4)
2013年3月 (3)
2013年2月 (3)
2013年1月 (8)
2012年12月 (3)
2012年11月 (5)
2012年10月 (4)
2012年9月 (5)
2012年8月 (6)
2012年7月 (8)
2012年6月 (4)
2012年5月 (4)
2012年4月 (6)
2012年3月 (6)
2012年2月 (6)
2012年1月 (3)
2011年12月 (8)
最新评论
1. Re:学习之路之三十：利用消息机制自定义数据库回滚特性
牛逼啊
--YR.Inearbyu
2. Re:走进单元测试四：单元测试背后的思考和感悟
@里贝里


谢谢大哥的赞赏呀，大家一同进步！
--TimYang
3. Re:走进单元测试四：单元测试背后的思考和感悟
其他的不说，文档的排版真的很好
--里贝里
4. Re:走进单元测试一：初认Unit Test
写的非常好
--里贝里
5. Re:学习之路之三十：利用消息机制自定义数据库回滚特性
@de_shuai

我一开始也不理解，动动手，看看资料，到时候就会明白的！
--TimYang
阅读排行榜
1. 工作的思考，是走还是留(6208)
2. 走进单元测试一：初认Unit Test(4705)
3. 学习之路十：简单的系统架构图(4437)
4. ADO.NET - 全面梳理(4434)
5. 面试总结，坚定自己的想法(3704)
评论排行榜
1. 工作的思考，是走还是留(66)
2. ADO.NET - 全面梳理(27)
3. 学习之路二十三：利用委托减少Try/Catch(27)
4. 迷茫后的感悟(21)
5. 面试总结，坚定自己的想法(20)
推荐排行榜
1. ADO.NET - 全面梳理(29)
2. 学习之路九：深入剖析Web分页原理(10)
3. 面试总结，坚定自己的想法(9)
4. 学习之路七：一步一步学习ASP.NET数据绑定(9)
5. 走进单元测试三：实战单元测试(8)
