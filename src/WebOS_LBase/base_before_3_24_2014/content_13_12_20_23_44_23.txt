您还未登录！|登录|注册|帮助首页业界移动云计算研发论坛博客下载
更多

业界移动开发云计算软件研发专题程序员杂志极客头条CSDN Share我的Tag
编程语言开放平台HTML5前端开发智能算法架构开源数据库


订阅软件研发RSS CSDN首页> 软件研发
Angular.js VS. Ember.js：谁将成为Web开发的新宠？
发表于2013-09-09 19:28| 18453次阅读| 来源Quora| 77 条评论| 作者王果 编译
Angular.jsEmber.jsWeb开发Javascript框架
摘要：在Web项目开发中，选择一个合适的框架可以让你的工作变得简单。而面对众多的框架，究竟哪个才是最适合的呢？Angular.js和Ember.js各有什么特点呢？大量的开发者正在面临这样的抉择，本文或许可以为你提供一些参考。
本文源自于Quora网站的一个问题，作者称最近一直在为一个新的Rails项目寻找一个JavaScript框架，通过筛选，最终纠结于 Angular.js和 Ember.js。

这个问题获得了大量的关注，并吸引到这两个框架的开发者参与回答。如果你也纠结JavaScript框架的选择，那么本文对你来说也是一个非常好的参考资料。

Angular.js和Ember.js介绍

Angular.js是一款开源的JavaScript框架，由Google维护，其目标是增强基于Web应用，并带有MVC功能，使得开发和测试变得更加容易。

  
Angular.js读取包含附加自定义（标签属性）的HTML，遵从这些自定义属性中的指令，并将页面中的输入输出与由JavaScript变量表示的模型绑定起来。这些JavaScript变量的值可以手工设置，或者从静态或动态JSON资源中获取。

项目地址： http://angularjs.org/

Ember.js同样是一个用于创建web应用的JavaScript MVC 框架，其采用基于字符串的Handlebars模板，支持双向绑定、观察者模式、计算属性（依赖其他属性动态变化）、自动更新模板、路由控制、状态机等。

  
Ember.js使用自身扩展的类来创建Ember.js对象、数组、字符串、函数，提供大量方法与属性用于操作。每一个Ember.js应用都使用各自的命名空间，避免冲突。

项目地址： http://emberjs.com/ 
Angular.js开发者：Angular.js最能体现HTML的精髓

Angular.js其中一位开发者Misko Hevery回复了提问者的疑问，内容如下。

我是Angular团队中的一名开发者，我还不太了解Emeber.js，因此我的观点可能会有些偏颇。

有人说，Angular.js和Ember.js都在HTML中放入了太多的逻辑。当然，将逻辑放入HTML是一个不好的做法，我们也不建议这么做。事实上，Angular.js只放置绑定，而不是逻辑，我们建议把逻辑放入控制器中。但绑定同样是信息，这些信息可以放在一些地方，你有三种选择：

代码。但这使得程序模块化很成问题，因为HTML与代码紧密耦合，要想重新组成一个应用程序非常困难。
HTML。这正是Angular.js所做的。我们认为，除了放置连接信息外，你不应该在HTML中做任何事情。任何逻辑都不应该出现在这里，因为它会导致各种问题。我认为Angular.js做的绑定相当好。
元数据文件：虽然我不知道是否有人这样做，但基本上这是一个双重问题，因为你将不得不在代码中连接HTML位置和模型位置。
当然，在构建一个应用程序时，你也可以不使用框架，但不可否认，使用框架将使得你的开发工作变得更容易。

我个人认为Angular.js的独特之处在于它拥抱HTML/CSS，遵循“HTML是什么”的精神。其他一些框架提供了它们自己的API，偏离了HTML。Angular.js在所有框架中是最能体现声明式的。我相信声明式非常适合用来构建用户界面，而JS非常适合用来编写逻辑。

Angular.js允许你扩展HTML，所以你在使用Angular.js过程中遇到的任何问题都可以很容易地克服。你可以在Angular.js官网中 http://angularjs.org找到一些能够展示其特性的例子。

Ember.js开发者：Ember.js是构建“雄心勃勃”的应用程序的不二选择

Ember.js的一位开发者Tom Dale对Angular.js和Ember.js进行了详细对比，具体内容如下。

作为Ember.js的作者之一，我经常会被问道：应该使用Angular.js还是Ember.js？

我认为在做出选择之前，需要考虑：要构建什么样的应用？那么Ember.js是不是比Angular.js更好呢？

虽然两者在表面上有一些相似之处——它们都使用绑定，都比其他框架（比如Backbone.js）更有利于编写Web应用程序。

我首先来介绍一下Ember.js项目的由来。从2009年开始，我就一直在苹果公司参与 SproutCore的开发，这是一个开源的类似于Cocoa的JavaScript框架，后来演变成了你现在所看到的 iCloud。当时，我的周围是一些世界上最好的Cocoa开发者。

问题是，多少年来在客户端应用程序方面，似乎并没有真正新的突破。自80年代以来就一直遵循的基本模型——代码运行在本地计算机上，从网络上获取数据，然后在本地处理，并显示在屏幕上；而如今唯一改变的是——代码运行在浏览器的沙箱环境中，然后加载所需的“二进制”文件，而不是由用户安装到硬盘上的文件。

在考虑这些问题是，我会首先想到：在我们之前，人们已经做了什么？我认为很难去争辩框架的成功，比如Cocoa，无论在Mac还是iOS上，Cocoa都可以让开发者轻松编写受用户喜爱的应用程序。

我们希望开发者能够创建雄心勃勃的、能够与本地应用竞争的Web应用程序。要做到这一点，开发者首先需要先进的工具和正确的概念，以帮助他们沟通和协作。

在开发Ember.js过程中，我们花了大量时间从其他一些本地应用程序框架（如Cocoa）中引入一些概念，但后来我们感觉到这些概念带来的困扰多于帮助，或它们并不适合用来构建Web应用程序。因此，我们开始转向其他流行的开源项目，比如Ruby on Rails和Backbone.js，从它们中来找灵感。

因此，Ember.js最终成为了一个综合的、强大的、符合现代Web特性的、轻量级的工具。

在我看来，与Ember.js相比，Angular.js更像一个研究项目。比如，来看看它们的学习文档：Ember.js主要讨论模型、视图和控制器，而Angular.js指南要求你去学习一些类似于范围、指示符和transclusion方面的内容等。

我完全支持一些研究型项目，并希望它们能够变成最好的。但是，要记住，要在生产环境中看待应用程序。

一些大公司已经在Ember.js上投入了时间和精力，比如新版ZenDesk已经使用Ember.js重写（在他们对Backbone.js失望后，决定放弃它改用Ember.js），Square的整个Web层面也是基于Ember.js的（因为他们想要一个漂亮、响应式的UI），Groupon的移动版Web应用也是使用Ember.js开发的。此外，还有很多初创型公司通过Ember.js获得了成功，并开始对Ember.js社区进行贡献。

而我目前所看到使用Angular.js开发的大多数应用程序只是演示项目，或是Google的内部项目。

Yehuda（Ember.js开发者之一）和我也一直积极邀请真正的用户参与Ember.js框架的设计和维护，这可以确保我们在Ember.js中添加的功能对于实际开发是有用的。

事实上，在过去的几个月中，大多数Ember.js开发工作都是由Ember.js社区的核心贡献组完成的，他们来自不同的公司。如果Yehuda和我哪天有什么事情，或者我们的公司倒闭了，Ember.js还将会持续发展。这是一个真正的社区项目，而不是“Google”项目。

回到技术细节。Angular.js官网上写道“Angular.js是HTML的未来，它被设计用于构建Web应用程序。”我认为当看他们的应用程序时，这种理念是显而易见的——用户界面由HTML标记定义，使用有语义意义的属性（比如data-ng-repeat）来装饰。

而Ember.js使用Handlebars来描述HTML，来展现你的应用程序界面。从美观角度，我们可以谈谈你是更喜欢Handlebars语法（使用类似于{{#each}}的helper），还是喜欢像Angular.js那样通过额外的属性来注释HTML。我个人认为，HTML属性方法有点杂乱，难以阅读。当然，你可以使用其中任何一种方式。如果Ember.js不存在，而我又必须使用一个使用了数据属性的框架，那么我会考虑Angular.js。

抛开美观不谈，我相信，Ember.js使用基于字符串的模板的方式也为我们带来了一些优势：

基于字符串的模板可以在服务器上预编译。这样可以减少启动时间，也意味着渲染一个模板可以像调用一个函数一样简单。
Angular.js需要你在应用程序启动时遍历整个DOM，你的应用程序越大，启动速度越慢。
如果你想在服务器上渲染你的应用程序（用于Google爬虫索引或让首次加载时显示速度更快），Angular.js需要你去启动整个浏览器环境，像PhantomJS，这是资源密集型的。而Handlebars是100％的JavaScript字符串，所有你需要的只是像node.js或Rhino之类的东西。
如果你的应用程序变得越来越大，那么字符串模板可以很容易地被分割和懒加载。
此外，Handlebars只让你绑定属性，而Angular.js允许你嵌入实时更新的任意表达式。很多人最初将这个视为Ember.js的局限性，但实际上：

Ember.js允许非常容易地使用JavaScript来创建可计算属性，它可以包含任意表达式。我们只要求你指定你的依赖，这样在更新时可以智能些。
Angular.js在每次有新的变化时，必须重新计算这些表达式，这意味着需要在你的应用程序中绑定更多的元素，速度会变慢。
因为Ember.js只允许你绑定属性，我们将可以很容易地利用ECMAScript 6的性能优势，如 Object.observes。由于Angular.js发明了自己的带有 自定义解析器的JavaScript子集，这对于浏览器来说，优化代码变得比较困难。
在一般情况下，Angular.js依靠一种叫做“ 脏检查（dirty checking）”的机制来确定对象是否已进行更改。“脏检查”的方式是，在你扫描每个对象和其所有绑定属性时，比较当前值和之前已知的值。如果它发生了变化，你就需要去更新其绑定。正如你能想到的那样，代码中对象越多，成本将越昂贵。

但Angular.js开发者非常聪明，他们非常仔细地进行了折中。他们的方案是：

使用“脏检查”，你不需要使用accessors。你可以用person.name = "Bill"来代替person.set('name', "Bill")，就像在Ember.js 或 Backbone.js中的一样。
为什么在DOM中你会有这么多的对象？这最终将会成为一个瓶颈的。
Miško Hevery在StackOverflow上介绍了 这种折中方式。他指出，使用“脏检查”，你无法一次有超过2000个绑定对象。

我认为这很好地说明了Ember.js 和 Angular.js理念上的区别。Ember.js 和 Angular.js都力求简单和易用。而Ember.js使你不必担心代码中是否有超过2000个绑定。如果你正在编写大型应用程序，那么你已经解决了你所担心的最大的事情。对于中小规模的应用程序来说，Angular.js同样是伟大的，因为这些应用程序不会触及Angular.js的限制区。

在Ember.js中，我们总是希望利用浏览器和语言中的新功能，以便使事情变得更容易。例如，一旦ES6中 代理对象（proxies）可用，我们不会再要求你使用get()和set()。

所以这就是为什么我认为——如果你想构建雄心勃勃的应用程序，你应该选择Ember.js。

我们从不拒绝从其他一些框架中吸取一些知识，因为这些框架已经知道如何最好地去构建大型应用程序。

我们已经有了一个梦幻般的社区，有一群最聪明的Web开发人员，他们致力于解决现实中遇到的最难的一些问题。

此外，在开发过程中，我们对于性能方面和如何利用语言新特性方面也考虑了很久。Yehuda Katz和我一起开发Ember.js，他同时也是TC39（负责JavaScript下一个版本的制定）的成员，在此方面相当有经验。

我们已经发布了1.0版API，因此你可以开始学习，而不用担心有大的变化。

你可以通过这个视频来了解如何通过Ember.js从头开始构建一个应用程序： Building an App with Ember.js

下面是一些非常棒的学习资源：

Ember.js指南
Rey Bango的 Ember.js入门教程
Luke Melia 的 介绍Ember.js幻灯片
如果你想构建一个雄心勃勃的应用程序，你一定要考虑Ember.js。

angularjs_scaffold开发者：Angular.js符合Web的未来

angularjs_scaffold的开发者Patrick Aljord也参与了讨论，内容如下。

我是 angularjs_scaffold（基于Angular.js编写的针对scaffolding视图的Rails插件）的开发者，我来说说为什么我会选择Angular.js。

事实上，我原本打算在项目中使用Ember.js，因为我比较信赖Yehuda（Ember.js开发者之一）在Rails和jQuery方面的工作。但是Ember.js中随时会变化的API和匮乏的文档，使我一再推迟使用它。我偶然发现了Angular.js，就被它吸引了。

像Tom Dale（Ember.js开发者之一）所说，Ember.js受Cocoa 和Rails启发。但问题是，通过Ember.js，我并没有真正感觉到像在写一个Web应用程序，它就像一堆抛出的概念。而在Angular.js中，我感觉像在写一个Web应用程序，它真正支持所有的Web概念，并以一种非常自然的方式来扩展HTML。

事实上，Angular.js并没有使用自己的对象或重写JS方法，当你使用Angular.js时，你就使用了纯JS，并且Angular.js实现的许多概念都将直接进入下一个版本的Javascript中。

学习Angular.js，就意味着学习未来的Javascript，而学习Ember.js，你只是学习到了Ember的特定概念。

来看个例子。HTML是伟大的，因为它是声明式的，如果想要定义一个段落，你只需写如下代码：

[html] view plaincopy
<p>Hello world</p>  
但是如果你想非常动态地实现？你需要通过类似于下面的代码来引导浏览器：

[html] view plaincopy
<p id="greeting1"></p>  
 <script>  
  var isIE = document.attachEvent;  
  var addListener = isIE  
  ? function(e, t, fn) {  
  e.attachEvent('on' + t, fn);}  
  : function(e, t, fn) {  
  e.addEventListener(t, fn, false);};  
  addListener(document, 'load', function(){  
  var greeting = document.getElementById('greeting1');  
  if (isIE) {  
  greeting.innerText = 'Hello World!';  
  } else {  
  greeting.textContent = 'Hello World!';  
  }  
  });  
 </script>  
来看看Angular.js如何实现：

[html] view plaincopy
<p>{{hello}}</p>  
它通过HTML声明来编写动态代码。再来看一个示例，如果你要遍历一个数组，只需：

[html] view plaincopy
<ul>  
  <li ng-repeat="element in array">element</li>  
</ul>  
这个语法看起来像新的 MDV标准。这看起来比Ember.js更加简洁。另外，Angular.js被优化得非常快，开发团队通过如下措施来实现：

脏检查
只检查当前视图
只在变化发生时检查
通过和Chrome团队协作来利用JIT
在一些基准测试中，结果显示Angular.js的速度要快于Ember.js，具体可见 Angular VS Knockout VS Ember。

Angular.js未来会拥有可重用的组件，这允许你编写非常简洁的代码，并轻松重用一些部件。这不是Angular.js特定的需求，而是Web的未来。

此外，Angular.js还拥有一个庞大的社区和 大量的贡献者。

原帖中还有很多开发者也参与了讨论，详细内容：Is Angular.js or Ember.js the better choice for Javascript frameworks?

你是否曾经也纠结于框架的选择？如果你也有Angular.js或Ember.js的使用经验，欢迎与我们分享。

本文为CSDN编译整理，未经允许不得转载，如需转载请联系market#csdn.net(#换成@) 
顶
59
 
踩
3
 
推荐阅读相关主题： 本地应用 ruby on rails stackoverflow 开源项目 浏览器 服务器
相关文章最新报道
PhoneGap 3.3.0发布，支持Android 4.4 KitKatIE11全新的F12开发人员工具详解研发周报：为什么开发者担心将代码公布AMD Mantle优化实际演示：渲染脚本提升一倍多平台同步 谈IE11全新功能IE11中的WebGL探秘：渲染速度超Chrome
已有77条评论

还可以再输入500个字


您还没有登录! 请 登录 或 注册
最新评论最热评论

suny323 2013-12-09 15:33
看了那么多web框架，AngularJS才是我想要的
   回复

stonephp 2013-10-11 18:09
angular是一颗美丽的罂粟花，深陷其中的人迟早会死在它上面
1票，来自yaohiyang    回复

Q123456cd 2013-09-27 18:57
mark
   回复

blocksom 2013-09-16 18:02
mark
   回复

丽日湖畔 2013-09-16 14:58
看来还是angular.js
   回复

xici_magic 2013-09-16 14:22
mark
   回复

lizhicheng2008 2013-09-16 13:15
做个记号
   回复

arthur_d 2013-09-16 09:47
ember.js太难学了。候选版本还一直在更新。语法变来变去。
后来看了angular.js，入门简单多了
   回复

kingdelee 2013-09-16 03:40
MARK
   回复

finbill 2013-09-15 23:29
mark
   回复

海东青2013 2013-09-15 12:49
学习一下
   回复

勇敢的心515 2013-09-15 12:27
学习学习了。
   回复

承諾一輩孒 2013-09-13 20:30
先下载下来，空了学习一下呢。
   回复

sxrstrive 2013-09-13 09:26
框架太多了，让人有点应接不暇
   回复

lazyhawk 2013-09-12 17:00
mark to win
   回复

鸿阅 2013-09-12 15:55
hao hao
   回复

鸿阅 2013-09-12 15:09
学习 学习  在学习
   回复

鸿阅 2013-09-12 15:08
学习 学习
   回复

hdhItPc 2013-09-12 12:54
很好好
   回复

gpgpu 2013-09-12 12:08
Tom Dale够恶的，一有机会就拼命攻击Angular。凭这个就已经输了一筹
   回复

yyq1971 2013-09-12 09:29
可以试试
   回复

qowera123 2013-09-10 20:25
angularjs 大爱
   回复

erictang2003 2013-09-10 19:59
这些东西都和jquery分开的吗？已经习惯jquery
   回复

fyd222 2013-09-10 18:48
可以试试
   回复

hangyanyan10 2013-09-10 18:40
kankan
   回复

ysyn1912 2013-09-10 17:03
过来学习一，表示都没有用过！
2票，来自我就是大神ysyn1912    回复

德玛西亚22 2013-09-10 16:28
呵呵··酱油
   回复

昵称总是被占用 2013-09-10 16:22
过来学习下
   回复

神出鬼没之王 2013-09-10 16:04
本是同根生,相煎何太急
   回复

ARROW 2013-09-10 15:45
另外使用{{}} 可能和一些模版引擎冲突.
   回复

ARROW 2013-09-10 15:44
只从这个东西的实用性上来看,功能jquery都能实现.且需要一定成本.另外效率都是javascript执行,估计没什么性能提升.seo这个东西.用javascript 都没什么seo.
   回复

henameo 2013-09-10 15:37
mark,留着以后看
   回复

天太长 2013-09-10 15:33
看不懂。。
   回复

lisi0909 2013-09-10 15:29
good
   回复

sh5188588 2013-09-10 15:16
mark
   回复

calreykhal 2013-09-10 15:14
不能收藏，只能mark下了
   回复

挥不去的思念 2013-09-10 14:53
看看。
   回复

何冬华 2013-09-10 14:52
没用过这框架
   回复

csdn还我帐号 2013-09-10 14:47
完全看不懂，就是为了积分来的
   回复

J-自由人 2013-09-10 14:38
新技术
   回复

ahking 2013-09-10 14:07
微软同学在干啥呢
   回复

路大大 2013-09-12 13:06
微软搞的是MVVM，参考knockout.js
   回复

紫舞玥汐 2013-09-10 13:51
mark一下
   回复

gj123root 2013-09-10 13:31
个人比较喜欢knockout.js
   回复

头号大宝贝 2013-09-10 13:27
那我就关注一下Angular.js吧。
   回复

vy1234 2013-09-10 11:02
新技术太多
   回复

qm4050 2013-09-10 10:31
正在学习 Angular.js ，不论是思想还是技术都让人眼前一亮。
   回复

huanxuleishenxiao 2013-09-10 16:30
请问，你有什么资料可以看？ 就看官网么？ 我们项目用的就是Angular.js，也在学习。
   回复

huanxuleishenxiao 2013-09-10 16:30
请问，你有什么资料可以看？ 就看官网么？ 我们项目用的就是Angular.js，也在学习。
   回复

qm4050 2013-09-12 10:24
回复@huanxuleishenxiao:官网上有一些资料，另外源码里面也有很多示例和解说。
另外可以看一些别人写的不错的博客。
http://zouyesheng.com/angular.html
   回复

菜鸟瞰 2013-09-10 10:21
不错！
   回复

一公升红豆 2013-09-10 09:58
马克
   回复

木薯超人 2013-09-10 09:40
为啥我觉得是JQUERY
   回复

sunruilive 2013-09-10 09:35
mark
1票，来自ysyn1912    回复
共2页 首页  上一页 12 下一页  末页
请您注意
·自觉遵守：爱国、守法、自律、真实、文明的原则
·尊重网上道德，遵守《全国人大常委会关于维护互联网安全的决定》及中华人民共和国其他各项有关法律法规
·严禁发表危害国家安全，破坏民族团结、国家宗教政策和社会稳定，含侮辱、诽谤、教唆、淫秽等内容的作品
·承担一切因您的行为而直接或间接导致的民事或刑事法律责任
·您在CSDN新闻评论发表的作品，CSDN有权在网站内保留、转载、引用或者删除
·参与本评论即表明您已经阅读并接受上述条款

CSDN官方微信
扫描二维码,向CSDN吐槽
微信号：CSDNnews

程序员杂志for iPad 免费下载
每日资讯快速浏览
微博关注


相关热门文章

优秀程序员的6个共同特质
NodeJS无所不能：细数10个令人惊讶的NodeJS开源项目
浏览器基准测试：IE11成绩惊人
【开源专访】Java高效开发框架Nutz：是SSH的轮子？还是新神器？
为什么开发者担心将代码公布
项目开发中，质量和速度哪个更重要？
JavaScript社区开发者调查：服务端JS盛行，Backbone.js使用最多
IE11中的WebGL探秘：渲染速度超Chrome
【开源推荐】ThinkPHP：大道至简，让Web开发更简单
Node.js 2013年大事记
热门标签

JavaVPNAndroidiOSERPIE10EclipseCRMJavaScriptUbuntuNFCWAPjQuery数据库BIHTML5SpringApacheHadoop.NETAPI
CSDN Share PPT下载

使用markdown语法进行电子书/PPT编辑
CTO俱乐部121期：美团技术那些事儿
呼延：Simple Yet Powerful Hadoop
The Theory,History and Future of System Linkers
推荐内容

Angular.js VS. Ember.js：谁将成为Web开发的新宠？
专访AngularJS框架创始人Misko Hevery：让Web开发更便捷
直接拿来用！最火的前端开源项目（一）
程序员遇到Bug后的30种常见反应
Google新的Web UI库：Polymer-CSDN.NET
Google Dart语言开启标准化历程，取代JavaScript仍艰难
优秀程序员的6个共同特质
【开源专访】Java高效开发框架Nutz：是SSH的轮子？还是新神器？
【精华】Web开发必备资源汇总
谈谈Google Polymer以及Web UI框架的未来
百度推荐
热门专区


IBM新兴技术大学

win8开发马拉松

高通开发者专区

IE11有奖调查

异构编程专区
Top_arrow
公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告
QQ客服 微博客服 论坛反馈 联系邮箱：webmaster@csdn.net 服务热线：400-600-2320
京 ICP 证 070598 号
北京创新乐知信息技术有限公司 版权所有
世纪乐知(北京)网络技术有限公司 提供技术支持
江苏乐知网络技术有限公司 提供商务支持
Copyright © 1999-2012, CSDN.NET, All Rights Reserved GongshangLogo
技术文章一周热点close
1、大数据 大机遇
2、利用Informatica，驾驭社交媒体数据
3、避免大数据一败涂地
4、Informatica为您实现大数据的最大回报
5、适用于数据驱动企业的数据集成平台
6、Informatica PowerCenter大数据版
7、PowerCenter简介
8、让数据起到应有的作用
9、无所不在的Data Quality，提供可信数据

