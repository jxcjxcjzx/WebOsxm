



记录学习的点点滴滴

 期待新的开始




 



•目录视图
•摘要视图
•订阅
 



投票赢好礼，周周有惊喜！      2014年4月微软MVP申请开始了！      消灭0回答，赢下载分      “我的2013”年度征文活动火爆进行中！      专访Kinect手语翻译系统团队 



使用WebSocket推送服务器消息 

分类： JavaEE2013-06-17 22:391718人阅读评论(5)收藏举报


以前做项目的时候常常会有客户端提醒的功能,使用的是ajax长轮询的方式,这中方式对服务器端压力比较大,无论有没有通知都会发送心跳请求,最近看了一下html5以及tomcat对websocket支持的相关文章,自己做了个小东东,仅供大家分享.
 
demo实现的小功能: 客户端A发送请求,通过服务器,直达客户端B
 




演示效果如图所示
 






代码的目录结构
 





package com.bw.websocket.api;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.bw.websocket.servlet.CallCenterMessageInBound;

@Controller
public class MessageAPI {

	/**
	 * 向客户端推送消息
	 * */
	@ResponseBody
	@RequestMapping(value = "/api/send.action")
	public Map<String, String> send(@RequestParam String clientId,
			@RequestParam String message) {
		Map<String, String> result = new HashMap<String, String>();
		try {
			CallCenterMessageInBound.send(clientId, message);
			result.put("message", "success");
		} catch (IOException e) {
			result.put("message", e.getLocalizedMessage());
			e.printStackTrace();
		}
		return result;
	}
}

 




package com.bw.websocket.servlet;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.util.HashMap;
import java.util.Map;

import org.apache.catalina.websocket.MessageInbound;
import org.apache.catalina.websocket.WsOutbound;

public class CallCenterMessageInBound extends MessageInbound {
	private String clientId;
	public static final Map<String, MessageInbound> socketList = new HashMap<String, MessageInbound>();

	public static void send(String clientId, String message) throws IOException {
		MessageInbound messageInbound = socketList.get(clientId);
		messageInbound.getWsOutbound().writeTextMessage(
				CharBuffer.wrap(message));
		messageInbound.getWsOutbound().flush();
	}

	public CallCenterMessageInBound(String clientId) {
		this.clientId = clientId;
	}

	@Override
	protected void onBinaryMessage(ByteBuffer message) throws IOException {

	}

	@Override
	protected void onTextMessage(CharBuffer message) throws IOException {

	}

	@Override
	protected void onOpen(WsOutbound outbound) {
		socketList.put(clientId, this);
	}

	@Override
	protected void onClose(int status) {
		socketList.remove(clientId);
	}
}
 package com.bw.websocket.servlet;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.util.HashMap;
import java.util.Map;

import org.apache.catalina.websocket.MessageInbound;
import org.apache.catalina.websocket.WsOutbound;

public class CallCenterMessageInBound extends MessageInbound {
	private String clientId;
	public static final Map<String, MessageInbound> socketList = new HashMap<String, MessageInbound>();

	public static void send(String clientId, String message) throws IOException {
		MessageInbound messageInbound = socketList.get(clientId);
		messageInbound.getWsOutbound().writeTextMessage(
				CharBuffer.wrap(message));
		messageInbound.getWsOutbound().flush();
	}

	public CallCenterMessageInBound(String clientId) {
		this.clientId = clientId;
	}

	@Override
	protected void onBinaryMessage(ByteBuffer message) throws IOException {

	}

	@Override
	protected void onTextMessage(CharBuffer message) throws IOException {

	}

	@Override
	protected void onOpen(WsOutbound outbound) {
		socketList.put(clientId, this);
	}

	@Override
	protected void onClose(int status) {
		socketList.remove(clientId);
	}
}
 

<%@ page language="java" contentType="text/html; charset=utf-8"
    pageEncoding="utf-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Insert title here</title>
<script type="text/javascript" src="js/jquery-2.0.2.min.js"></script>
<script type="text/javascript">
var clientId =Math.random();
var url = 'ws://localhost:8080/websocket/WebSocket?clientId='+clientId;
document.write("Current ClientId:"+clientId);
var CallCenter = {
		init:function(url){
			var _websocket = new WebSocket(url);
			_websocket.onopen = function(evt) {
				console.log("Connected to WebSocket server.");
			};
			_websocket.onclose = function(evt) {
				console.log("Disconnected");
			};
			_websocket.onmessage = function(evt) {
				eval(evt.data);
			};
			_websocket.onerror = function(evt) {
				console.log('Error occured: ' + evt);
			};
		}
};
CallCenter.init(url);

$(document).ready(function(){
	$("#send").bind("click",function(){
		$.ajax({
			   type: "get",
			   url: "api/send.action",
			   data: "clientId="+$("#clientId").val()+"&message="+$("#message").val(),
			   success: function(msg){
			    	alert(msg.message);
			   }
			});
	});
});
</script>
</head>
<body>
<br/>
To ClientId:
	<input type="text" id="clientId" />
	<br /> Message:
	<input type="text" id="message" />
	<input type="button" id="send" value="send">
</body>
</html>
 

home.jsp 监控客户端连接
 
<%@page import="com.bw.websocket.servlet.CallCenterMessageInBound"%>
<%@page import="java.util.Iterator"%>
<%@page import="org.apache.catalina.websocket.MessageInbound"%>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<%
	for(Iterator<String> it = CallCenterMessageInBound.socketList.keySet().iterator();it.hasNext();)
	{
		String key = it.next();
		out.println(key+":"+CallCenterMessageInBound.socketList.get(key)+"<br/>");
	}
%>
this home page
</body>
</html>
 





上述方法只对高版本的浏览器使用,也就是支持websocket的浏览器适用
 
 考虑到浏览器的兼容性问题,我们还可以使用flash socket的方式进行消息推送,通过flex javascript bridge来执行服务器端推送信息.
 

更多 

•上一篇：Vitural Box 使用已有镜像文件报错 E_INVALIDARG (0x80070057)
 
顶1踩1 


查看评论
 






* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场
 







核心技术类目

 全部主题 Java VPN Android iOS ERP IE10 Eclipse CRM JavaScript Ubuntu NFC WAP jQuery 数据库 BI HTML5 Spring Apache Hadoop .NET API HTML SDK IIS Fedora XML LBS Unity Splashtop UML components Windows Mobile Rails QEMU KDE Cassandra CloudStack FTC coremail OPhone CouchBase 云计算 iOS6 Rackspace Web App SpringSide Maemo Compuware 大数据 aptech Perl Tornado Ruby Hibernate ThinkPHP Spark HBase Pure Solr Angular Cloud Foundry Redis Scala DjangoBootstrap
 




个人资料 

myxx520 




◦访问：74487次
◦积分：1719分
◦排名：第6372名
 ◦原创：86篇
◦转载：14篇
◦译文：1篇
◦评论：56条
 
文章搜索

 
文章分类 • C#.net(1) 
• JavaEE(25) 
• T-SQL(24) 
• WebService(2) 
• 杂项(21) 
• 跟着菜鸟学linux(7) 
• Android(5) 
• 设计模式(2) 
• 偶尔笑一笑(1) 
• memcached(0) 

文章存档 
•2013年06月(1)
•2013年05月(1)
•2013年03月(3)
•2012年05月(3)
•2012年02月(1)
•2011年12月(4)
•2011年11月(2)
•2011年10月(4)
•2011年09月(11)
•2011年08月(6)
•2011年07月(7)
•2010年07月(3)
•2010年05月(6)
•2010年04月(2)
•2010年03月(2)
•2010年02月(3)
•2010年01月(5)
•2009年12月(3)
•2009年09月(5)
•2009年08月(12)
•2009年07月(2)
•2009年06月(1)
•2009年05月(1)
•2009年04月(2)
•2008年12月(1)
•2008年11月(5)
•2008年10月(5)
 
阅读排行 • Hibernate 原生查询 createSQLQuery 详解(7537) 
• Google 地图 API 初级使用(5273) 
• C#中 使用 Backgroundworker控制UI线程 防止界面假死情况 (3329) 
• .net C# 调用 XFire发布的Webservice 安全访问控制(3203) 
• 关于MYSQL 远程登录的授权方法 命令(3045) 
• JSP设置SESSION过期(2471) 
• SVN版本库迁移(2408) 
• 使用Jquery 完成同步请求(1942) 
• mysql 创建表并设置主键自增(1828) 
• 使用WebSocket推送服务器消息(1718) 

评论排行 • Google 地图 API 初级使用(16) 
• .net C# 调用 XFire发布的Webservice 安全访问控制(15) 
• C#中 使用 Backgroundworker控制UI线程 防止界面假死情况 (5) 
• 使用WebSocket推送服务器消息(5) 
• 使用jstl标签库中的fmt标签对日期进行处理,格式化(3) 
• Oracle 中游标的使用(2) 
• JFrame中显示多个进度条的方法(2) 
• 在JSP中使用pager-taglib进行分页处理(2) 
• ERROR/AndroidRuntime(680): android.app.SuperNotCalledException: Activity(2) 
• 关于MYSQL 远程登录的授权方法 命令(1) 

推荐文章 
最新评论 •使用WebSocket推送服务器消息
myxx520: @Sven_Cha:package com.bw.websocket.servlet;import ... 

•使用WebSocket推送服务器消息
Sven_Cha: @ykslqq:你好，请问WebSocket的那个累找到了吗？ 

•使用WebSocket推送服务器消息
fishoflove: 求WebSocket的内容=。= 

•使用WebSocket推送服务器消息
dxing007: WebSocket 应该就只两句话就行了。String clientId = (String)req... 

•使用WebSocket推送服务器消息
ykslqq: 哥们，是不是WebSocket那个类没贴上来啊？麻烦你再贴一下呗，我正在研究这块东西，学习学习 

•关于MYSQL 远程登录的授权方法 命令
lixiaotao500: 谢谢了，学习了啊！！！！！ 

•.net C# 调用 XFire发布的Webservice 安全访问控制
myxx520: 可以的话把你成的代理类，和测试发过来我帮你看下，fish2-2@163.com，这东东是很早以前弄过... 

•.net C# 调用 XFire发布的Webservice 安全访问控制
Locoxue: 是不是我你说的这些内容我加的地方不对？还是namespace 之类的写得不对。你能提供一个完整、更改... 

•.net C# 调用 XFire发布的Webservice 安全访问控制
Locoxue: 按你给的步骤在 C# 更改代理类，并且实现 客户端。但调用后 对方还是提示 验证失败。我传了 use... 

•.net C# 调用 XFire发布的Webservice 安全访问控制
myxx520: @shenyang618619:头里面有信息么？ 






