汇编语言 LEA指令 ZZ2009-09-16 13:52:14



分类： WINDOWS


 LEA: Load Effectiv Address 

该指令有两个操作数。左边是目的操作数，表示操作结果保存在此，该指令目的操作数只能是8个通用寄存器之一。逗号右边的是源操作数，该指令的源操作数只能是一个存储单元，表达存储单元有多种寻址方式。
 
 LEA指令的功能是将源操作数、即存储单元的有效地址（偏移地址）传送到目的操作数。 

示例LEA BX,[BX+SI+0F54H]指令中,[BX+SI+0F54H]采用相对基址变址的寻址方式表达存储单元，它表示的存储单元的有效地址是：BX内容加SI内容加0F54H。这个结果被传送到BX中。 


LEA是INTEL颇为得意的一条指令（虽然大多数程序员并不以为然）。在INTEL OPTIMIZATION REFERFENCE MANUAL中，特别提到了这条指令的好处。

0.LEA指令具有单时钟周期，执行效率很高。

1.它是CPU地址生成单元参与运算的，而不是ALU参与运算的，所以在流水线上不会与上下文的算术逻辑指令产生流水相关

2.INTEL指令集中不存在很多RISC机器所具有的三操作数算术运算指令，比如像ARM的"add r0,r1,r2"，而LEA指令恰好提供了同样的功能，以模拟“三元算术逻辑指令”。

  举个例子，要计算两个寄存器的和，但又不想破坏原来的值，那么可以执行lea ebx ,[eax+edx]， 这条指令，执行的就是 ebx = eax + edx 这条加法运算。如果用add指令，则不可能一条指令内完成。

3.在汇编语言程序设计中，在需要取得一个变量地址时，使用LEA是很方便的。而MOV指令则常常出错，因为在微软MASM汇编语法中，label和variable是不同的。
