您还未登录！|登录|注册|帮助首页业界移动云计算研发论坛博客下载
更多
踏入神的领域kun1234567的专栏
目录视图摘要视图订阅
有奖征集活动系列——【HTML5游戏编程之旅】        专访贺炘：软件测试应讲究策略和方法      低价抢购开源中国论坛门票      “2013年度中国优秀开源项目征集”活动最后一天      体验Intel感知技术
 Lua学习笔记一
分类： Lua脚本语言 2007-12-25 15:30 6967人阅读 评论(13) 收藏 举报
lua脚本variablesmath文本编辑string
 
花了很长时间才算基本入门，期间走了不少的弯路，所以想记录下来，希望能方便后面的朋友。

 

 

前言

该系列文章将纪录我在学习Lua时碰到的一些问题和得出的心得体会，适合没有任何Lua基础的朋友看。我会不定期的将自己的学习整理成笔记，同时由于我是本月刚接触Lua，也是正在学习的阶段，所以热烈欢迎各路朋友和我探讨、交流、指教。我学习的最终目的是想在基于Allegro图像库的GUI构建中应用Lua，也许有的朋友的最终目的是在Web中应用Lua--或者别的目的--不过我想在通往最终应用的路途中，总会有一些共通的地方。希望我这些文字对你有所帮助。

 

 

 

Lua学习笔记一

首先提一下很容易找到的、比较正规的中文参考资料 《PIL5.0中文教程》，《Lua使用手册5.1》(风云翻译)。

本节的目的在于在VS2005中搭建一个用于测试Lua的环境。侧重点为C/C++与Lua的交互--在CPP文件中应用Lua脚本。

 

 

如何编写.lua文件：

任何文本编辑器都可以，只要写的语句符合Lua语法。保存的时候后缀名为 “.lua”。我用的Lua编辑器是LuaEdit,不过感觉除了能检测语法是不是正确之外，跟记事本没什么区别...

如何配置Lua使用环境：
如何生成编译后的LUA文件：

请参见 http://blog.csdn.net/kun1234567/archive/2007/12/11/1929815.aspx

一定要解决上面3个问题，千万别急躁，直到你成功的配置了使用环境、能够写简单的.lua文件并生成相应的二进制中间文件之前，不要继续阅读以下文字。

 

 

好了，让我们开始RTFS(Read The Fuxking Source)。

-------以下是Lua脚本--------
--test.lua
function f ( x, y)
    return x + y
end
---------通过LuaEdit语法测试--------------

//------------以下是test.c文件----------------
//==============================================
// Lua Test Object
// C++ Source lua_test.cpp
//==============================================
//==============================================
// Include Files
//==============================================
extern "C"
{
    #include "D://My Documents//Visual Studio 2005//Projects//lua//lua//lua.h"
    #include "D://My Documents//Visual Studio 2005//Projects//lua//lua//lualib.h"
    #include "D://My Documents//Visual Studio 2005//Projects//lua//lua//lauxlib.h"
}
//=============================================
// Libraries
//=============================================
#pragma comment( lib ,"D://My Documents//Visual Studio 2005//Projects//lua//release//lua.lib")
//=============================================
// Global Variables
//=============================================
lua_State *L;
//=============================================
// Lua Functions
//=============================================
double f( double x, double y )
{
 double ret;
 lua_getglobal( L, "f");               // 获取全局变量f
 lua_pushnumber( L,x);           // 操作数压栈
 lua_pushnumber( L,y);           // 操作数压栈
 lua_call( L, 2, 1);                      // 执行：2个操作数，1个返回值
 //lua_pcall( L, 2, 1, 0);             // 保护模式的lua_call,0为错误处理码。具体应用暂时不明，在使用手册中有粗略介绍
 
 ret = lua_tonumber( L, -1);    // 将栈顶元素转换成数字并赋值给ret
 lua_pop( L, 1);                         // 从栈中弹出一个元素
 return ret;
}
//==============================================
// Main Functions
//==============================================
int main( void)
{
 int error;
 
 L = lua_open();          // 创建Lua接口指针（借用DX的术语，本质是个堆栈指针）
 luaopen_base(L);     // 加载Lua基本库
 luaL_openlibs(L);     // 加载Lua通用扩展库
/*
 可能有的文章会采用以下写法，手工控制加载哪些库：
 luaopen_table(L);     // 加载table库
 luaopen_io(L);           // 加载IO库
 luaopen_string(L);    // 加载string库
 luaopen_math(L);     // 加载math库
 经过测试，luaopen_io(L);该句执行异常，可能跟Lua的IO库有关系。具体原因暂时没有追究，将来如果有机会弄清楚，再回头来阐述。
*/
 
 /* load the script */
 error = luaL_loadfile(L, "test.lua");    // 读取Lua源文件到内存
 double ret = f( 10, 3.4);                        // 调用模版函数f
 printf( "ret = %f", ret);                            // 输出结果，C语言的东西，跟Lua无关
 
 getchar();                                               // console程序调试技巧，方便观察结果
 lua_close( L);　　　　　　　　　   // 关闭Lua接口
 return 1;
}

你可以直接复制这些代码到.lua 和.cpp文件里，也可以手动敲进去，我建议后者--就跟上课记笔记一样--好记性不如烂笔头。

 

 

编译成功了吗？如果不成功一定是环境没有配置好。不过就算编译成功也是白搭：D。程序在执行到函数f()中的“ lua_call( L, 2, 1);”这句时肯定会跳出来。如果你眼睛反映够快，并且英语够好，那么在0.3秒之内你将看到来自Lua的Debug信息：PANIC: unprotected error in call to Lua API (attempt to call a nil value)，这是我在程序里故意留的一个BUG。

让我们来看看为什么出错了。
在调用“ lua_call( L, 2, 1);”的时候“调用了一个空的值”，说明栈是空的。Lua在执行脚本中的函数的时候，首先会把函数体压栈，然后是操作数。

那么函数体去哪了？原因在于main()中的error = luaL_loadfile(L, "test.lua"); 这句。
首先Lua是“动态编译的脚本语言”，而loadfile只是把源文件加载到内存中，还少了“编译”这一步，可以用“luaL_dofile(L,"test.lua");”来替换，它既加载又编译。替换之后执行应该就没有问题了。

但是还没完，luaL_dofile 实际上是个宏：

#define luaL_dofile(L, fn) /
 (luaL_loadfile(L, fn) || lua_pcall(L, 0, LUA_MULTRET, 0))

LUA_MULTRET也是宏定义，值为-1，表示函数有多个返回值(Lua规则，pil 24.2--堆栈)。
扩展开来就是以下两句：

luaL_loadfile(L, fn);
lua_pcall(L, 0, LUA_MULTRET, 0);

pcall以上述参数执行的时候，会把加载到内存中的源程序编译成可以用于执行的2进制代码，并将全局变量压栈（在Lua中，函数也是变量，pil 2.5 -- Functions，毕竟函数名和函数体是不同的2个东西）。就跟PE文件格式里的Section一样（PE文件就是Windows3.1之后的.exe/.dll文件）。当然如果你不知道什么PE文件也没关系--我只是打个比方--就当成VS2005编译代码时生成的.obj文件。

虽然实际使用中99%的情况都是直接使用dofile，但是我想将该问题提出来说可以更加直观的理解“动态编译”。

 

 

另外一个需要特别注意的是，在test.lua中，定义了一个模板函数 f，接受2个操作数( x , y )，所以需要在CPP文件中定义该函数的CPP模板 double f ( double x, double y)，它们一定是成对出现的（不然我们为什么要用Lua呢：D）。当然，你也可以让CPP的函数 f 接受3个参数 x, y, z，但是只把y , z 压栈，x单独做处理，同样的道理也可以应用于LUA文件。源代码我就不写了，你可以当作练习。

 

 

最后，我想谈谈luac.exe 和.OUT文件--也就是独立的LUA编译器生成的2进制文件。因为.LUA太直接，源代码可以直接看到，同时动态编译也是要花费额外的时间（可能还有别的理由，通过进一步的学习应该可以发现），所以使用.out文件是比较好的方案。

那么现在直接loadfile总可以了吧？很可惜不行！loadfile这个函数实在太傻了，只管读入文件，而负责判断读入的是源文件还是经过编译的二进制代码的工作是由lua_pcall()来做的--如果是源文件，就编译后压栈，如果是二进制代码，就直接压栈。

再一个就是，如果你在程序中使用OUT文件，在VS2005中调试的时候，依然会报attempt to call a nil value的错误--就算你用的是luaL_dofile()！
比如：error = luaL_dofile(L, "luac.out");
Lua报错！不过直接执行生成的.exe文件却没有问题 。这个问题的原因我还不清楚。

如果有什么问题，让我们一起来解决吧。QQ:115047793

                                                                                                                                                                                2007.12.25
                                                                                                                                                                                可怜的剩蛋

分享到： 
上一篇：在VS2005中配置LUA
下一篇：Lua学习笔记二--在Lua中使用自己的C函数

查看评论
12楼 beyond0824 2010-11-26 16:41发表 [回复]

[e01][e01][e01]
11楼 beyond0824 2010-11-26 16:40发表 [回复]

attempt to call a nil value这个问难搞了两天，lua_call一直导致主函数退出，今天看了楼主的文章，终于搞定了.
10楼 SherlockChanG 2010-06-15 16:31发表 [回复]

那个…弱弱的问一句…lua_gettop 为什么只给我返回1啊？
我改动过我的脚本文件，不好使啊……
9楼 匿名用户 2010-04-11 16:02发表 [回复]

也碰到了unprotected error in call to Lua API 的问题
8楼 billyeh 2010-02-12 13:11发表 [回复]

文章最後提到的「attempt to call a nil value」問題，我也遇到了，上網找了很久，以下這招似乎有效，你不妨試試：

@see http://lua-users.org/lists/lua-l/2008-05/msg00021.html

&quot;you need to call lua_pcall(L,0,0,0) after loading your file before u use the function.&quot;
7楼 匿名用户 2010-02-06 16:34发表 [回复]

[e01]
受益了[e03]
6楼 xyuepjing 2009-12-02 17:18发表 [回复]

这个系列看完之后，真觉得不错，推荐一下
5楼 qdujunjie 2009-09-23 11:46发表 [回复]

你好，我是初学lua，现在进行到了lua调用C函数这一部分。看了你的教程，写得很好，但是我有一个问题。

你的代码是直接将调用Lua文件放在了CPP的main()函数中，这样每次只能调用一个。

如果我是想将我写的库导入到Lua中，像lua的其他库一样成为lua的一部分的话，该如何写呢？我看过programming in lua中的教程，但是具体如何操作还是有点模糊。不知您是否能给与帮助呢？

期待您的回复：）。

my email:qdujunjie@126.com
Re: kun1234567 2009-09-23 15:40发表 [回复]

当你看到 Lua学习笔记五--真正的入门：编写Lua扩展库 的时候就知道了：）
4楼 huadianjie 2009-07-23 22:56发表 [回复]

好帖啊，帮我大忙了，谢谢
3楼 linbc 2009-06-03 14:24发表 [回复]

顶一下
2楼 mayao11 2008-07-10 09:14发表 [回复]

我刚看完预备知识，正在学习lua语法！！在我们的新的项目中可能会用到，而且对于学习游戏脚本设计很有用~~~

好贴必须顶一下
1楼 hylaking 2008-02-14 15:55发表 [回复]

喝完博主备下的美酒，离开之前怎么得说声啊，谢谢博主！
这个系列看完之后，真觉得不错，推荐一下
您还没有登录,请[登录]或[注册]
* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场

 
个人资料
  
kun1234567
 

访问：574284次
积分：3692分
排名：第1454名
原创：68篇转载：8篇译文：3篇评论：147条
文章搜索

文章分类
Allegro图形库(0)
Artoolkit(1)
CEGUI图形界面控件库(7)
Lua脚本语言(8)
Navi (GUI with HTML in 3D)(1)
Ogre(0)
PhysX (物理引擎)(1)
通用编程能力(9)
3D对象操作(7)
Unity3D(12)
项目管理(0)
文章存档
2013年04月(2)
2013年02月(1)
2012年12月(4)
2012年08月(3)
2012年07月(6)
展开
阅读排行
PhysX官方手册翻译(53708)
PhysX官方手册翻译（Dynamics）(49526)
NaviLibrary 研究手记(1)--Navi 介绍(46409)
CEGUI学习笔记六-- 使用CEGUI解决具体问题 (26675)
PhysX之旅（初章）--PhysXは虾米？(26448)
CEGUI学习笔记五-- 如何如何扩展CEGUI库（一）(25971)
3D对象操作(25651)
游戏制作技巧记录(25570)
PhysX官方手册翻译（Character Controller）(25537)
PhysX之旅（一）-- NxBoxes的逐行分析(25158)
评论排行
vs2005环境下编译CEGUI 0.6.0(27)
在VS2005中配置LUA(16)
Lua学习笔记一(13)
NaviLibrary 研究手记(1)--Navi 介绍(11)
Lua学习笔记三--表的应用(10)
Lua学习笔记二--在Lua中使用自己的C函数(6)
CEGUI学习笔记四-- 如何输入中文(6)
CEGUI学习笔记一--FirstWindow和FalagardDemo1分析(5)
游戏程序设计--真实案例分析（一）(5)
Artoolkit初级研究（文档翻译.2008.12.12）(4)
推荐文章

最新评论
在VS2005中配置LUA
lmqf: 非常感谢楼主的文章！是否最后一句应该写成“表示编译器luac.exe配置成功”？
Unity3D显示中文的各种方案的比较
kun1234567: GUIText.GetScreenRect.Width. 如果文字之后还有空格，需要手工计算有多少个...
Unity3D显示中文的各种方案的比较
benbon: 请教一下，GUIText如何获取像素级的宽度呢？
unity3D中使用协程来做“多次调用一次更新”特性的一个大坑。
kun1234567: @zpbaaa:yes,就是这2个事件。爱死你了
unity3D中使用协程来做“多次调用一次更新”特性的一个大坑。
zpbaaa: 这个样应该能解决死锁的问题
unity3D中使用协程来做“多次调用一次更新”特性的一个大坑。
zpbaaa: 两个变量， 协程是否打开、协程当前是否打开协成打开时 两个标识都设为trueOnDisable()中...
PhysX官方手册翻译
lyghanhailiang: 你好，我现在在用Physx引擎模拟推土机。我想用关节来控制推土机和铲斗运动，铲斗有三个自由度，一个是...
Lua学习笔记五--真正的入门：编写Lua扩展库
小熊妞: 楼主对lua中debug调试机制有什么心得吗
vs2005环境下编译CEGUI 0.6.0
wangpeng_118: 编译过不了 ……obj\Debug\CEGuiSample.o||In function `CEGu...
在VS2005中配置LUA
netbear: @Learning_C:名字相同的俩文件能共存在一个文件夹吗——所以得移走啊
公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告
QQ客服 微博客服 论坛反馈 联系邮箱：webmaster@csdn.net 服务热线：400-600-2320
京 ICP 证 070598 号
北京创新乐知信息技术有限公司 版权所有
世纪乐知(北京)网络技术有限公司 提供技术支持
江苏乐知网络技术有限公司 提供商务支持
Copyright © 1999-2012, CSDN.NET, All Rights Reserved 

