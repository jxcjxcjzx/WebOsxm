
Ubuntu
Forum
Wiki
Linux
Blog
Paste
Chat
 
 登录    注册	 FAQ

论坛首页 » 系统安装区 » 启动和引导当前时区为 UTC + 8 小时

修复GRUB引导菜单成功了
 手工删除一条路由:  sudo route del -net 192.168.0.0 netmask 255.255.255.0 gw 172.16.0.1

 	
分享到0
 分页： 1 / 1	 [ 15 篇帖子 ] 	
  打印预览	上一个主题 | 下一个主题 
作者	内容
1 楼  lxxinnn	
 文章标题 : 修复GRUB引导菜单成功了发表于 : 2009-04-22 22:04 

注册: 2008-11-01 6:50
帖子: 152 
送出感谢: 0 次 
接收感谢: 0 次
因重装系统，把GRUB引导菜单搞没了，一直不知道怎么找回来，今天看到贴子，试了下，成功了,主要步骤是下边兰字部分t

而恢复Grub，其实也很简单的：用Live CD（对于Ubuntu来说就是Desktop CD或者DVD）启动，打开终端（Applications──>Accessory──>Terminal），执行以下代码：
代码:
sudo grub 
find /boot/grub/stage1
root (hdX,Y)
setup (hdX)
quit


注意：其中的X、Y是执行find /boot/grub/stage1命令后系统提示的。，比如：
代码:
grub> find /boot/grub/menu.lst
(hd0,7)

注意：这里的grub>是执行sudo grub命令后进入grub环境得到的提示符，不用输入。这时，X就是0,Y就是7。

下面详细解释一下这几条命令：


sudo grub 以root用户身份启动grub，否则会出错，错误见后文
find /boot/grub/stage1 寻找/boot所在分区，其实换用find /boot/grub/menu.lst也一样。
这一步也可以跳过，在执行root （hdX,时连按两下Tab列出可用分区，自己确定是哪个分区。
如果是将/boot单独分区，详见说明。
root (hdX,Y) 设置硬盘hdX的根文件系统（root Device)，实际就是设置/boot所在的分区
setup (hdX) 自动安装GRUB到硬盘hdX。
quit 退出GRUB
root、setup命令后都有空格，如果没有会出错误。
如果不以root用户身份会出现什么样的错误呢？
引用:
ubuntu@ubuntu:~$grub

[ Minimal BASH-like line editing is supported. For
the first word, TAB lists possible command
completions. Anywhere else TAB lists the possible
completions of a device/filename. ]

grub> find /boot/grub/stage1

Error 15: File not found

grub> find /boot/grub/menu.lst

Error 15: File not found

grub> root(hd0,7)

Error 27: Unrecognized command

grub> root (hd0,7)

Error 21: Selected disk does not exist
grub> setup (hd0)

Error 12: Invalid device requested


一个成功例子：
引用:
ubuntu@ubuntu:~$ sudo grub
[ Minimal BASH-like line editing is supported. For
the first word, TAB lists possible command
completions. Anywhere else TAB lists the possible
completions of a device/filename. ]

grub> find /boot/grub/menu.lst
(hd0,7)

grub> root (hd0,7)

grub> setup (hd0)
Checking if "/boot/grub/stage1" exists... yes
Checking if "/boot/grub/stage2" exists... yes
Checking if "/boot/grub/e2fs_stage1_5" exists... yes
Running "embed /boot/grub/e2fs_stage1_5 (hd0)"... 15 sectors are embedded.
succeeded
Running "install /boot/grub/stage1 (hd0) (hd0)1+15 p (hd0,7)/boot/grub/stage2 /boot/grub/menu.lst"... succeeded
Done.
grub>quit


这是最简单的方法，也有其它几个寻找/boot分区的方法，但稍麻烦点：
在终端使用ls /dev/sd*和ls /hd*命令来查找系统的外部设置，用sudo mkdir命令来建立挂载目录，用sudo mount命令挂载，再用ls命令查看是否/boot所在的分区。

也可以用sudo fdisk -l来找到启动分区（这里不涉及将/boot单独分区的情况，因为那种我没有实验过，不太清楚），如：
引用:
ubuntu@ubuntu:~$ sudo fdisk -l

Disk /dev/sda: 160.0 GB, 160041885696 bytes
255 heads, 63 sectors/track, 19457 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

Device Boot Start End Blocks Id System
/dev/sda1 * 1 2295 18434556 7 HPFS/NTFS
/dev/sda2 2296 19456 137845732+ f W95 Ext'd (LBA)
/dev/sda5 2296 4845 20482843+ 7 HPFS/NTFS
/dev/sda6 4846 8669 30716248+ 7 HPFS/NTFS
/dev/sda7 8670 16557 63360328+ 7 HPFS/NTFS
/dev/sda8 * 16558 17361 6458098+ 83 Linux
/dev/sda9 17362 19393 16322008+ 83 Linux
/dev/sda10 19394 19456 506016 82 Linux swap / Solaris


就知道启动分区是/dev/sda8

有人可能会有疑问，在Linux系统中是用sda8来表示这个启动分区，而GRUB中则是用(hd0,7)表示，这是因为在新版的Ubuntu中系统将串口硬盘和并口硬盘都识别为sd，a表示第一硬盘，8表示第4个逻辑分区（1──4被分配给主分区，扩展分区里的逻辑分区从5开始计算）。而Grub中则是用统一用hd代表硬盘，硬盘号与分区号都是从0开始计算的。
这部分是凭记忆写的，可能不准确，请参考wiki。

PS：
看到有的帖子说Alterate CD可以在boot后输入linux rescue来启动救援盘，后面的操作则一样。我因手头没有Alterate CD无法验证。DVD虽说集成了Alterate CD与Desktop CD，但无法在以字符界面安装时启动救援盘。

感谢雕雕补充：
雕啸长空 写道:
补充一点，上面讲的是在/boot下面的东西都还完好的,但如果RP不行，/boot都玩完了，可以试一下下面的：
生成/etc/mtab
代码:
sudo grep -v rootfs /proc/mounts >sudo tee /etc/mtab

安装grub到mbr
代码:
grub-install --no-floppy /dev/hda

然后就自己搞定menu.lst了.

ps：将雕的命令按http://forum.ubuntu.org.cn/viewtopic.php?t=67897修改了一下。
顺便鄙视一下Linux/Windows双料菜鸟。
再鄙视一下自己，其实这都是网上流传的已有的，只是这次恰好在实验Vista时用上了实证了一下。


页首	    

2 楼  asd5381	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-04-22 23:56 

注册: 2009-03-11 20:11
帖子: 26 
送出感谢: 0 次 
接收感谢: 0 次
学习了，顶一下 


页首	    

3 楼  想入非非	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-04-23 0:15 


注册: 2008-07-14 22:42
帖子: 8079
地址: Beijing 
送出感谢: 0 次 
接收感谢: 0 次
grub修复也就这么几步，熟悉就好了 


_________________
Ubuntu User 

页首	    

4 楼  lxxinnn	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-04-23 15:44 

注册: 2008-11-01 6:50
帖子: 152 
送出感谢: 0 次 
接收感谢: 0 次
在Linux中，GRUB的配置中的安装和写入硬盘的MBR；


1、在Linux中，GRUB配置过程中的安装grub-install；

grub-install 命令有何用呢？其实就是把我们前面已经安装的软件包中的一些文件复制到 /boot/grub中；对于新安装GRUB软件包后，也是一个必经的过程；我们前面所说的GRUB软件包的安装；而现在我们说的是GRUB配置的过程中的安装；虽然在洋文中都是install ，但表达的意思是不一样的；

我们首先要运行 fdisk -l 来确认到底是硬盘的标识；

这个过程主要是确认硬盘的标识是哪个调备，到底是/dev/hda还是/dev/hdb 还是其它的；

[root@localhost ~]# fdisk -l

Disk /dev/hda: 80.0 GB, 80026361856 bytes
255 heads, 63 sectors/track, 9729 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

Device Boot Start End Blocks Id System
/dev/hda1 * 1 970 7791493+ 7 HPFS/NTFS
/dev/hda2 971 9729 70356667+ 5 Extended
/dev/hda5 971 2915 15623181 b W95 FAT32
/dev/hda6 2916 4131 9767488+ 83 Linux
/dev/hda7 4132 5590 11719386 83 Linux
/dev/hda8 5591 6806 9767488+ 83 Linux
/dev/hda9 6807 9657 22900626 83 Linux
/dev/hda10 9658 9729 578308+ 82 Linux swap / Solaris

如果通过fdisk -l 出现有/dev/hda字样的，我们就要用下面的命令来安装；

[root@localhost ~]# grub-install /dev/hda
Installation finished. No error reported.
This is the contents of the device map /boot/grub/device.map.
Check if this is correct or not. If any of the lines is incorrect,
fix it and re-run the script `grub-install'.

(fd0) /dev/fd0
(hd0) /dev/hda

如果是您fdisk -l 出现的有/dev/hdb呢，那就如下运行；

[root@localhost ~]# grub-install /dev/hdb

如果既有/dev/hda和/dev/hdb 就安装到/dev/hda中；

[root@localhost ~]# grub-install /dev/hda

值得注意的是如果您有一个/boot分区，应该用如下的办法来安装；

[root@localhost ~]#grub-install --root-directory=/boot /dev/hda

[root@localhost ~]#grub-install --root-directory=/boot /dev/hdb

注解：具体是/dev/hda还是/dev/hdb，请以fdisk -l 为准；如果两个都有，就看您把/boot分区是放在第一块硬盘还是第二块硬盘上了，以实际情况为准；


2、设定GRUB的/boot分区并写入MBR；；

在Linux中，GRUB软件包的安装，及在配置过程中安装grub到 /boot中还是不够的， 还要把GRUB，写入MBR才行；有时我们重新安装了Windows，Windows会把MBR 重写，这样GRUB就消失了；如果您出现这样的情况，就要进行这个过程；

[root@localhost ~]# grub

会出现grub>提示符，这是grub命令行模式 ，如果能在开机中出现提示符，没有引导不起来的系统，除非您的系统破坏的极为严重。如果仅仅是GRUB被破坏了，GRUB命令行是能让操作系统引导起来的；

接着看例子，我们要找到 /boot/grub/stage1的，在grub>后面输入；

grub> find /boot/grub/stage1
(hd0,6) 
(fd0) 注：这个是软驱；现在很少用软驱了，如果您有这方面的需要，自己看GRUB的DOC吧；

注解：

(hd0,6) 这是/boot所在的分区；不要误解为是Linux 的/所在的分区，这是值得注意的；
(fd0) 注：这个是软驱；现在很少用软驱了，如果您有这方面的需要，自己看GRUB的DOC吧；

grub>root (hd0,6) 注：这是/boot所在的分区；
grub>setup (hd0) 注：把GRUB写到MBR上；

注解：

上面这步骤是根据 find /boot/stage1而来的，仔细看一下就明白了；现在我们一般安装很少会把/boot分区列为一个单独的分区；不过有的弟兄可能也喜欢这么做；所以还是有必要说一下为好；


四、GRUB的配置文件的menu.lst的写法；

对于GRUB来说，如果没有配置menu.lst，无论是Linux版本的GRUB，还是WINGRUB，都会有命令行可用，通过命令行是一样能把操作系统引导起来的；有些弟兄总以为menu.lst 配置错了，或者在机器启动后出现grub>命令行模式就要重新安装系统，其实根本没有这个必要；只要学会GRUB的命令行的用法，根本没有必要重装系统；

menu.lst 位于/boot/grub目录中，也就是/boot/grub/menu.lst 文件；您可以用vi或您喜欢的编辑器来编辑他；如果您不会用vi，还是去学习一下吧；简单的用法怎么也得会，对不对？毕竟这个文档不是讲vi的用法的；

有的弟兄会说，我没有menu.lst怎么办？那就创建一个；用下面的命令；

[root@localhost ~]# touch /boot/grub/menu.lst

然后我们再做一个/boot/grub/menu.lst 的链接 /boot/grub/grub.conf
[root@localhost ~]# cd /boot/grub
[root@localhost ~]# ln -s menu.lst grub.conf

现在我们来写GRUB的menu.lst了，因为/boot/grub/grub.conf是 /boot/grub/menu.lst的链接文件，改哪个都行。链接文件相当于Windows的快捷方式，这样可能能更好的理解；


1、menu.lst的写法之一；

首先我们看一下我的Fedora 4.0 中的/boot/grub/menu.lst 的内容；

default=0
timeout=5
#splashimage=(hd0,6)/boot/grub/splash.xpm.gz
hiddenmenu
title Fedora Core (2.6.11-1.1369_FC4)
root (hd0,6)
kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/
initrd /boot/initrd-2.6.11-1.1369_FC4.img
title WinXp
rootnoverify (hd0,0)
chainloader +1

注解：
default=0

default=0 是默认启动哪个系统，从0开始；每个操作系统的启动的定义都从title开始的，第一个title 在GRUB的启动菜单上显示为0,第二个启动为1，以此类推；
timeout=5

注：表示在开机后，GRUB画面出现几秒后开始以默认启动；如果在启动时，移动上下键，则解除这一规则；
#splashimage=(hd0,6)/boot/grub/splash.xpm.gz 注：GRUB的背景画面，这个是可选项；我不喜欢GRUB的背景画面，所以加#号注掉，也可以删除；
hiddenmenu

注解：隐藏GRUB的启动菜单，这项也是可选的，也可以用#号注掉；

一般的情况下对Linux操作系统的启动，一般要包括四行；title 行；root行；kernel 行；initrd 行；


1）在menu.lst中 ，通过 root (hd[0-n],y)来指定/boot 所在的分区；

title XXXXX 注：title 后面加一个空格，title 是小写的，后面可以自己定义；比如FC4，自己定义一个名字就行；
root (hd[0-n],y) ，在本例中，我们看到的是root (hd0,6) ,root (hd[0-n],y)表示的是/boot所在的分区；有时我们安装Linux的时候，大多是不设置/boot的，这时/boot和/所在的同一个分区；这个root (hd[0-n],y)很重要，因为/boot目录中虽然有grub目录，最为重要的是还有kernel 和initrd文件，这是Linux能启动起来最为重要东西；

有的弟兄会问，root (hd[0-n],y)是怎么来的？

请参考：《在Linux系统中存储设备的两种表示方法》

2）在menu.lst中，kernel 命令行的写法；

kernel 一行，是通指定内核及Linux的/分区所在位置；

比如例子中是；
kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/

在这里以kernel 起始，指定Linux的内核的文件所处的绝对路径；因为内核是处在/boot目录中的， 如果/boot是独立的一个分区，则需要把boot省略；如果/boot是独立的分区，这行要写成:
kernel /vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/ 

因为/boot所处的分区已经在title 下一行root (hd[0-n],y)中指定了，所以就无需要再指明内核处在哪个分区了；另外Linux系统的硬盘分区的挂载配置文件在/etc/fstab ，原理是通过 mount /dev/hd[a-z]X /boot 来进行的；您可以对照着来理解；

ro 表示只读； root=LABEL=/ 来表示Linux的根所处的分区。LABEL=/ 这是硬盘分区格式化为相应文件系统后所加的标签；如果您不了解什么是标签，也可以直接以/dev/hd[a-z]X 或者/dev/sd[a-z]X来表示；就看您的Linux是根分区是在哪个分区了。比如我的是在/dev/hda7 ，那这里就可以写成root=/dev/hda7；

如果查看系统运行所挂载的分区，请用 df -lh 来查看，就能明白是不是/boot是独立的分区，或者查看/etc/fstab也能知道；

[root@localhost ~]# df -lh
Filesystem 容量 已用 可用 已用% 挂载点
/dev/hda7 11G 9.2G 1.2G 90% /
/dev/shm 236M 0 236M 0% /dev/shm

在这个例子中，我们可以发现 /boot并没有出现只有/dev/hda7，这表示/boot并不是独立的一个分区；所有的东西都包含在/中；于是我们在/boot中查看内核版本；
[root@localhost ~]# ls /boot/vmlinuz*
/boot/vmlinuz-2.6.11-1.1369_FC4 注：看到内核vmlinuz所处的目录；

于是我们就可以这样kernel 这行了；

kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7


3）initrd 命令行的写法；

如果是/boot独立一个分区，initrd 一行要把/boot中省略；如果/boot不是处于一个分区，而是和Linux的/分区处于同一分区，不应该省略；

比如我们在2）中用的例子；现在拿到这里，我们应该首先查看 /boot中的initrd的文件名到底是什么；

[root@localhost ~]# ls /boot/initrd*
/boot/initrd-2.6.11-1.1369_FC4.img

如果是通过df -lh 得知或查看/etc/fstab 也行， 得知/boot是独立的分区；这时initrd 应该写成；

initrd /initrd-2.6.11-1.1369_FC4.img

如果是 /boot不是独处一个分区，而是在/同一处一个分区， 则要写成；

initrd /boot/initrd-2.6.11-1.1369_FC4.img


4）menu.lst第一种写法的总结和实践；

在这里，我们只说重要的，不重要的就一带而过了；

1］用fdisk -l ；df -lh ；more /etc/fstab来确认分区情况；

我们过fdisk -l ；df -lh ; more /etc/fstab 来确认/boot所在的分区，及Linux的根分区所在位置；

比如我们确认/boot和Linux的/分区同处一个分区；

[root@localhost ~]# df -lh
Filesystem 容量 已用 可用 已用% 挂载点
/dev/hda7 11G 9.2G 1.2G 90% /
/dev/shm 236M 0 236M 0% /dev/shm

然后我们/etc/fstab 中,查看/分所在的分区或分区标签是什么；
[root@localhost ~]# more /etc/fstab
# This file is edited by fstab-sync - see 'man fstab-sync' for details
LABEL=/ / ext3 defaults 1 1
/dev/devpts /dev/pts devpts gid=5,mode=620 0 0
/dev/shm /dev/shm tmpfs defaults 0 0
/dev/proc /proc proc defaults 0 0
/dev/sys /sys sysfs defaults 0 0
LABEL=SWAP-hda1 swap swap defaults 0 0
/dev/hdc /media/cdrecorder auto pamconsole,exec,noauto,managed 0 0

经过上面的df -lh 和more /etc/fstab 的对照中得知，/boot并是独处一个分区，而是和/在同一个分区；这个Linux系统安装在/dev/hda7上，文件系统（此分区）的标签为 LABEL=/ ，/boot也是处于/dev/hda7 ，/dev/hda7也可以说是 root (hd0,6)；

2]查看内核vmlinuz的和initrd文件名的全称；

[root@localhost ~]# ls -lh /boot/vmlinuz*
-rw-r--r-- 1 root root 1.6M 2005-06-03 /boot/vmlinuz-2.6.11-1.1369_FC4
[root@localhost ~]# ls -lh /boot/initrd*
-rw-r--r-- 1 root root 1.1M 11月 26 22:30 /boot/initrd-2.6.11-1.1369_FC4.img


3]开始写menu.lst ；

我们根据上面所提到的，可以写成如下的样子；

default=0 
timeout=5
title FC4
root (hd0,6)
kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/
initrd /boot/initrd-2.6.11-1.1369_FC4.img

也可以写成；

default=0 
timeout=5
title FC4
root (hd0,6)
kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7
initrd /boot/initrd-2.6.11-1.1369_FC4.img

注解：上面两个不同之处在于一指定Linux的根/所在的分区时，一个是用了文件系统的标签，另一个没有用标签；

2、menu.lst的写法之二，精简型；

本写法主要是把指定/boot所位于的所分区直接写入kernel 指令行；这样就省略了通过root (hd[0-n],y)来指定/boot所位于的分区；


1)第一种情况：/boot和Linux的/根分区在同一个分区；

有前面的那么多的讲解，menu.lst写法之二就好理解多了；也得分两种情况，咱们先把/boot并不是独处一个分区，而是和Linux的根分区处于同一个分区；我们以 4）menu.lst第一种方法的写法总结 的实例为例子；

default=0 
timeout=5
title FC4x
kernel (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7
initrd (hd0,6)/boot/initrd-2.6.11-1.1369_FC4.img

注解：

title FC4x 注：自己为这个Linux 起个简单的名，以title开头，然后一个空格，后面就自己发挥吧，FC4或FC4x都行；

kernel 空格 (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 空格 ro 空格 root=/dev/hda7

kernel 这行这样理解 kernel (boot所在的分区)/boot/内核文件件全称 ro root=Linux根所位于的分区或标签

initrd 空格 (hd0,6)/boot/initrd-2.6.11-1.1369_FC4.img
initrd 这行可以这样理解 initrd (/boot所在的分区)/boot/内核文件名全称


2）第二种情况：/boot独立一个分区，和Linux的根分区不是同一个分区；

比如我们查看到df -lh 得到的是
[root@localhost ~]# df -lh
Filesystem 容量 已用 可用 已用% 挂载点
/dev/hda6 200M 120M 80M 60% /boot
/dev/hda7 11G 9.2G 1.2G 90% /

我们再进一行查看/etc/fstab 得知；
LABEL=/ / ext3 defaults 1 1
LABEL=/boot /boot ext3 defaults 1 2

所以我们应该写成如下的；

title FC4x
kernel (hd0,5)/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/
initrd (hd0,5)/initrd-2.6.11-1.1369_FC4.img

因为Linux的根分区是/dev/hda7，通过/etc/fstab和df -h的内容得知标签为 LABEL=/的分区就是/dev/hda7 ，所以有；

title FC4x
kernel (hd0,5)/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7
initrd (hd0,5)/initrd-2.6.11-1.1369_FC4.img


五、通过GRUB命令行来启动Linux操作系统；

GRUB的命令行才是王道，如果知道怎么用命令行来启动操作系统，那理解menu.lst的写法也不难；也就是说在开机的时候，不用GRUB的菜单，通过GRUB的命令也是一样能把操作系统引导起来。

因为menu.lst的内容就是GRUB的一个一个的指令集合；是不是Linux这玩意很神奇？

1、为什么需要学习GRUB的命令行；

当我们把GRUB的menu.lst写错的时候，或者丢掉了menu.lst的时，比如在开机的时候，GRUB会出现grub>类似的命令提示符，这时需要我们用命令行启动系统；当然您可以不用定义GRUB的菜单 ，直接用命令行来启动系统，比如我现在就是，为了写GRUB的文档，就把menu.lst 删除了，直接用命令来启动系统；

2、用命令行来引导Linux操作系统的步骤；

通过命令行来引导操作系统的流程，也没有什么难的；无非是把指令手工输入到grub>提示符的后面；在这个过程中，tab键的命令补齐功能就显得很重要了。如果您不知道有哪些命令，可以输入help；


1）进入GRUB的命令行模式 grub>

如果开机时，GRUB出现的是grub>，说明你没有/etc/grub/menu.lst ，您需要自己写一个才会GRUB的菜单，让我们来选择进入哪个系统。如果有GRUB的菜单，您可以按Ctrl+c组合键进入GRUB的命令行模式，会出现grub> 提示符；
grub>


2）获取帮助GRUB的 help

只要您在grub>提示符的后面输入help 就能得到GRUB所有的命令提示；

grub> help
blocklist FILE boot
cat FILE chainloader [--force] FILE
clear color NORMAL [HIGHLIGHT]
configfile FILE device DRIVE DEVICE
displayapm displaymem
find FILENAME geometry DRIVE [CYLINDER HEAD SECTOR [
halt [--no-apm] help [--all] [PATTERN ...]
hide PARTITION initrd FILE [ARG ...]
kernel [--no-mem-option] [--type=TYPE] makeactive
map TO_DRIVE FROM_DRIVE md5crypt
module FILE [ARG ...] modulenounzip FILE [ARG ...]
pager [FLAG] partnew PART TYPE START LEN
parttype PART TYPE quit
reboot root [DEVICE [HDBIAS]]
rootnoverify [DEVICE [HDBIAS]] serial [--unit=UNIT] [--port=PORT] [--
setkey [TO_KEY FROM_KEY] setup [--prefix=DIR] [--stage2=STAGE2_
terminal [--dumb] [--no-echo] [--no-ed terminfo [--name=NAME --cursor-address
testvbe MODE unhide PARTITION
uppermem KBYTES vbeprobe [MODE]

如果需要得到某个指令的帮助，就在 help 后面空一格，然后输入指令，比如；

grub>help kernel 


3）cat的用法；

cat指令是用来查看文件内容的，有时我们不知道Linux的/boot分区，以及/根分区所在的位置，要查看/etc/fstab的内容来得知，这时，我们就要用到cat (hd[0-n],y)/etc/fstab 来获得这些内容；注意要学会用tab键命令补齐的功能；
grub> cat ( 按tab 键会出来hd0或hd1之类的；
grub> cat (hd0, 注：输入hd0,然后再按tab键；会出来分区之类的；
grub> cat (hd0,6)
Possible partitions are:
Partition num: 0, Filesystem type unknown, partition type 0x7
Partition num: 4, Filesystem type is fat, partition type 0xb
Partition num: 5, Filesystem type is reiserfs, partition type 0x83
Partition num: 6, Filesystem type is ext2fs, partition type 0x83
Partition num: 7, Filesystem type unknown, partition type 0x83
Partition num: 8, Filesystem type is reiserfs, partition type 0x83
Partition num: 9, Filesystem type unknown, partition type 0x82

grub> cat (hd0,6)/etc/fstab 注：比如我想查看一下 (hd0,6)/etc/fstab的内容就这样输入；

LABEL=/ / ext3 defaults 1 1
/dev/devpts /dev/pts devpts gid=5,mode=620 0 0
/dev/shm /dev/shm tmpfs defaults 0 0
/dev/proc /proc proc defaults 0 0
/dev/sys /sys sysfs defaults 0 0
LABEL=SWAP-hda1 swap swap defaults 0 0
/dev/hdc /media/cdrecorder auto pamconsole,exec,noauto,
managed 0 0

有的弟兄可能会说，我不知道Linux安装在了哪个分区。那根据文件系统来判断一个一个的尝试总可以吧我；只要能cat出/etc/fstab就能为以后引导带来方便；

主要查看/etc/fstab中的内容，主要是Linux的/分区及/boot是否是独立的分区；如果没有/boot类似的行，证明/boot和 Linux的/处于同一个硬盘分区；比如上面的例子中LABEL=/ 这行是极为重要的；说明Linux系统就安在标签为LABEL=/的分区中；

如果您的Linux系统/boot和/没有位于同一个分区，可能cat (hd[a-n],y) 查到的是类似下面的；

LABEL=/ / ext3 defaults 1 1
LABEL=/boot /boot ext3 defaults 1 2


4） root (hd[0-n,y) 指令来指定/boot所在的分区；

其实这个root (hd[0,n],y)是可以省略的，如果省略了，我们要在kerenl 命令中指定；我们前面已经说过 (hd[0-n],y) 硬盘分区的表示方法的用途；主要是用来指定 /boot所在的分区；

比如我们确认/boot和 (hd0,6)，所以就可以这样来输入root (hd0,6)
grub> root (hd0,6)

如果发现不对，可以重新来过；没有什么大不了的；


5） kernel 指令，用来指定Linux的内核，及/所在的分区；

kernel 这个指令可能初学者有点怕，不知道内核在哪个分区，及内核文件名的全称是什么。不要忘记tab键的命令补齐的应用；

如果我们已经通过root (hd[0-n],y) 指定了/boot所在的分区，语法有两个：

如果/boot和Linux的/位于同一个分区，应该是下面的一种格式；

kernel /boot/vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root=/dev/hd[a-z]X

如果/boot有自己独立的分区，应该是；

kernel /vmlinuz在这里按tab键来补齐，就看到内核全称了 ro root=/dev/hd[a-z]X

在这里 root=/dev/hd[a-z]X 是Linux 的/根所位于的分区，如果不知道是哪个分区，就用tab出来的来计算，一个一个的尝试；或用cat (hd[0-n],y)/etc/fstab 中得到Linux的/所在的分区或分区的标签；

grub> kernel /boot/在这里按tab键；这样就列出/boot中的文件了；
Possible files are: grub initrd-2.6.11-1.1369_FC4.img System.map-2.6.11-1.1369
_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 grubBAK memtest86+-1.55
.1 xen-syms xen.gz

grub> kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/ 
[Linux-bzImage, setup=0x1e00, size=0x18e473]

注解： root=LABEL=/ 是Linux的/所在的分区的文件系统的标签；如果您知道Linux的/在哪个具体的分区，用root=/dev/hd[a-z]X来指定也行。比如下面的一行也是可以的；

grub> kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7

也可以把/boot所在的分区的指定 root (hd[0-n],y)这行省掉，直接在kernel 中指定/boot所在的分区；所以就在下面的语法；

如果是/boot和Linux的根同处一个分区；
kernel (hd[0-n],y)/boot/vmlinuz ro root=/dev/hd[a-z]X

比如：
grub>kernel

如果是/boot和Linux所在的根不在一个分区；则是；
kernel (hd[0-n],y)/vmlinuz ro root=/dev/hd[a-z]X

grub> kernel (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7
[Linux-bzImage, setup=0x1e00, size=0x18e473]

或下面的输入，以cat 出/etc/fstab内容为准；

grub> kernel (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/
[Linux-bzImage, setup=0x1e00, size=0x18e473]


6）initrd 命令行来指定initrd文件；

grub> initrd /boot/initrd在这里tab 来补齐；
grub> initrd /boot/initrd-2.6.11-1.1369_FC4.img
[Linux-initrd @ 0x2e1000, 0x10e685 bytes]

如果/boot是独立的一个分区，应该是如下样子的语法；比如下面的；

grub> initrd /initrd在这里tab 来补齐；
grub> initrd /initrd-2.6.11-1.1369_FC4.img
[Linux-initrd @ 0x2e1000, 0x10e685 bytes]


7）boot 引导系统；

grub>boot

前面的几个步骤都弄好 。就进入引导；尝试一下就知道了。。

8）引导Linux系统实例全程回放；

实例：/boot和Linux的/处于同一个硬盘分区；
grub> cat (hd0,6)/etc/fstab
# This file is edited by fstab-sync - see 'man fstab-sync' for details
LABEL=/ / ext3 defaults 1 1
/dev/devpts /dev/pts devpts gid=5,mode=620 0 0
/dev/shm /dev/shm tmpfs defaults 0 0
/dev/proc /proc proc defaults 0 0
/dev/sys /sys sysfs defaults 0 0
LABEL=SWAP-hda1 swap swap defaults 0 0
/dev/hdc /media/cdrecorder auto pamconsole,exec,noauto,managed 0 0

grub> root (hd0,6)
Filesystem type is ext2fs, partition type 0x83

grub> kernel /boot/在这里按tab补齐，全列出/boot所有的文件；
Possible files are: grub initrd-2.6.11-1.1369_FC4.img System.map-2.6.11-1.1369_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 
memtest86+-1.55.1 xen-syms xen.gz

grub> kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7 注：输入
[Linux-bzImage, setup=0x1e00, size=0x18e473]

grub> initrd /boot/在这里按tab补齐
Possible files are: grub initrd-2.6.11-1.1369_FC4.img System.map-2.6.11-1.1369_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 
memtest86+-1.55.1 xen-syms xen.gz

grub> initrd /boot/initrd-2.6.11-1.1369_FC4.img 注;输入intrd文件名的全名；
[Linux-initrd @ 0x2e1000, 0x10e685 bytes]

grub> boot

我们指定Linux的根时，可以用cat出来的fstab的内容中Linux的/分区文件系统标签来替代；也就是kernel 那行中 root=/dev/hd[a-z]X；

grub> cat (hd0,6)/etc/fstab
# This file is edited by fstab-sync - see 'man fstab-sync' for details
LABEL=/ / ext3 defaults 1 1
/dev/devpts /dev/pts devpts gid=5,mode=620 0 0
/dev/shm /dev/shm tmpfs defaults 0 0
/dev/proc /proc proc defaults 0 0
/dev/sys /sys sysfs defaults 0 0
LABEL=SWAP-hda1 swap swap defaults 0 0

/dev/hdc /media/cdrecorder auto pamconsole,exec,noauto,managed 0 0

grub> root (hd0,6)
Filesystem type is ext2fs, partition type 0x83

grub> kernel /boot/在这里按tab补齐，全列出/boot所有的文件；
Possible files are: grub initrd-2.6.11-1.1369_FC4.img System.map-2.6.11-1.1369_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 
memtest86+-1.55.1 xen-syms xen.gz

grub> kernel /boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/ 
[Linux-bzImage, setup=0x1e00, size=0x18e473]

grub> initrd /boot/在这里按tab补齐
Possible files are: grub initrd-2.6.11-1.1369_FC4.img System.map-2.6.11-1.1369_FC4 config-2.6.11-1.1369_FC4 vmlinuz-2.6.11-1.1369_FC4 grubBAK
memtest86+-1.55.1 xen-syms xen.gz

grub> initrd /boot/initrd-2.6.11-1.1369_FC4.img 注;输入intrd文件名的全名；
[Linux-initrd @ 0x2e1000, 0x10e685 bytes]

grub> boot

如果是/boot和Linux的根分区不在同一个分区，要把kernel和initrd 指令中的/boot去掉，也就是/vmlinuzMMMMMM 或 /initrdNNNN

也可以不用root (hd[0-n]来指定/boot所在分区，要在kernel 和initrd 中指定；比如Linux的/根所位于的分区和/boot所位于的分区都是(hd0,6)，并且我们cat出来的/etc/fstab是Linux的/根分区的文件系统的标签为LABEL=/，引导操作系统的例子如下；
grub>kernel (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/
grub>initrd (hd0,6)/boot/initrd-2.6.11-1.1369_FC4.img
grub>boot

或

grub>kernel (hd0,6)/boot/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7
grub>initrd (hd0,6)/boot/initrd-2.6.11-1.1369_FC4.img
grub>boot

如果/boot位于 /dev/hda6，也就是(hd0,5)，Linux的根/位于分区/dev/hda7，并且我们cat 出来的/etc/fstab 中/分区的标签为 LABEL=/。下面的两种方法都可以引导；

grub>kernel (hd0,5)/vmlinuz-2.6.11-1.1369_FC4 ro root=LABEL=/
grub>initrd (hd0,5)/initrd-2.6.11-1.1369_FC4.img
grub>boot

或

grub>kernel (hd0,5)/vmlinuz-2.6.11-1.1369_FC4 ro root=/dev/hda7
grub>initrd (hd0,5)/initrd-2.6.11-1.1369_FC4.img
grub>boot


六、通过GRUB引导Windows操作系统；


1、通过编辑 menu.lst 来引导Windows 系统；

如果您的Windows所处于的分区在(hd0,0)，可以在menu.lst 加如下的一段就能引导起来了；
title WinXp
rootnoverify (hd0,0)
chainloader +1

如果您的机器有两块硬盘，而Windows 位于第二个硬盘的第一个分区，也就是(hd1,0)

您可以用grub的map来指令来操作把两块硬盘的序列对调，这样就不用在BIOS中设置了；在menu.lst中加如下的内容，比如下面的；

title WinXp
map (hd0) (hd1)
map (hd1) (hd0)
rootnoverify (hd1,0)
chainloader +1
makeactive

如果Windows的分区不位于硬盘的第一个分区怎么办呢？比如在(hd0,2)；

这个也好办吧，把rootnoverify 这行的(hd0,0)改为 (hd0,2)

title WinXp
rootnoverify (hd0,2)
chainloader +1
makeactive

如果Windows的在第二个硬盘的某个分区，比如说是位于(hd1,2)，则要用到map指令；

title WinXp
map (hd0) (hd1)
map (hd1) (hd0)
rootnoverify (hd1,2)
chainloader +1
makeactive

如果有多个Windows 系统，怎么才能引导出来呢？应该用hide 和unhide指令操作；比如我们安装了两个Windows ，一个是位于(hd0,0)的windows 98 ，另一个是安装的是位于(hd0,1)的WindowsXP；这时我们就要用到hide指令了；

title Win98
unhide (hd0,0)
hide (hd0,1)
rootnoverify (hd0,0)
chainloader +1
makeactive

title WinXP
unhide (hd0,1)
hide (hd0,0)
rootnoverify (hd0,1)
chainloader +1
makeactive


2、通过GRUB指令来引导Windows ；

其实我们会写menu.lst了，在menu.lst中的除了title外，都是一条条指令；如果我们启动Windows ，只是输入指令就行了；

比如 Windows的分区在 (hd0,0)，我们在开机后，按ctrl+c ，进入GRUB的命令模式；就可以用下面的

grub> rootnoverify (hd0,0)
grub> chainloader +1
grub> boot

其它同理... ...

七、GRUB丢失或损坏的应对策略；

如果GRUB是Linux版本才出会这样的问题；WINGRUB可以不写在MBR上；所以不会出现这样的问题。WINGRUB用起来比较简单。menu.lst 和命令行的用法和Linux版本的GRUB是一样的；


1、由于重新安装Windows或其它未知原因而导致GRUB的丢失；

您可以通过系统安装盘、livecd进入修复模式；

请参考：《Linux 系统的单用户模式、修复模式、跨控制台登录在系统修复中的运用》

首先：您根据前面所说grub-install来安装GRUB到/boot所在的分区；要仔细看文档，/boot是不是处于一个独立的分区是重要的，执行的命令也不同；

其次：要执行grub ，然后通过 root (hd[0-n],y)来指定/boot所位于的分区，然后接着执行 setup (hd0)，这样就写入MBR了，比如下面的例子；
grub>root (hd0,6)
grub>setup (hd0)
grub>quit

重新引导就会再次出现MBR的菜单了或命令行的提示符了；


2、如果出现GRUB提示符，而不出现GRUB的菜单，如何引导系统；

存在的问题可能是/boot/grub/menu.lst丢失，要自己写一个才行；您可以用命令行来启动系统，进入系统后写一写menu.lst就OK了。前面已经谈过了；

写好后还要建一个grub.conf的链接，如下：

[root@localhost ~]# cd /boot/grub
[root@localhost grub]# ln -s menu.lst grub.conf


八、关于GRUB的未尽事宜；
[url]GNU GRUB Manual 0.97 http://www.gnu.org/software/grub/manual ... 02dinstall[/url]


页首	    

5 楼  xc1427	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-05-04 18:46 


注册: 2008-10-11 4:11
帖子: 275
地址: 瑞金无线电学校 
送出感谢: 0 次 
接收感谢: 0 次
好文章。楼上的也很不错阿。


_________________
You never know if you don't try 

页首	    

6 楼  jioyo源	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-05-04 19:43 


注册: 2008-10-08 13:48
帖子: 3481 
送出感谢: 0 次 
接收感谢: 0 次
 不错，收集了……


_________________
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
论坛精华贴全集：http://forum.ubuntu.org.cn/viewtopic.php?f=48&t=199845
book：http://forum.ubuntu.org.cn/viewtopic.php?f=21&t=198286 

页首	    

7 楼  aidong	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-05-07 18:06 

注册: 2009-04-26 11:03
帖子: 298 
送出感谢: 0 次 
接收感谢: 0 次
我也终于修复好了，原来find后面有一个空格。


页首	    

8 楼  baishigao	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-05-09 12:51 


注册: 2009-01-15 10:09
帖子: 24 
送出感谢: 0 次 
接收感谢: 0 次
昨天我也修复成功了，和你的方法一样，早看到你的帖子问题就早解决了！


页首	    

9 楼  mapper	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-08-03 20:06 

注册: 2007-10-25 13:19
帖子: 12 
送出感谢: 0 次 
接收感谢: 0 次
好啊
一楼比一楼精彩
学习了


页首	    

10 楼  peteryeh64	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2009-09-30 13:06 


注册: 2008-12-20 15:43
帖子: 8870
地址: 心靈深處 
系统: 家13.04,公司12.04
送出感谢: 5 次 
接收感谢: 27 次
學習了！ 


_________________
[论坛版主行为规定]+[PITIVI簡易教程]+[12.04amd64裝draftsight]+[11.04amd64裝osdlyrics]+[11.04amd64裝xbmc]
[ubuntu10.04全盤安裝=viewtopic.php?f=48&t=274459]
[releases.ubuntu.com]+[cdimage.ubuntu.com]+[old-releases.ubuntu.com]
[學ubuntu必須拜讀懶蝸牛"笨兔兔的故事"=viewtopic.php?f=112&t=162040][Linux明日的希望在中國] 

页首	    

11 楼  chenzw	
 文章标题 : 发表于 : 2009-10-03 16:58 


注册: 2008-11-03 14:59
帖子: 76 
送出感谢: 0 次 
接收感谢: 0 次
这个犀利，顶一下，以后双系统时肯定用得上吧


_________________
要好好混论坛

blog: http://zhiwei.in 

页首	    

12 楼  黄美姬	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2010-05-10 14:23 


注册: 2009-10-08 11:15
帖子: 8450
地址: 大城市铁岭 
送出感谢: 0 次 
接收感谢: 9 次
已阅 －－－囗囗囗


_________________
我们是命运的妓女，它把我们都嫖了

N卡驱动：http://www.nvidia.cn/Download/index.aspx?lang=cn
极品飞车：http://www.geforce.cn/optimize/optimal-game-settings/need-for-speed-shift-geforce-gts-450-ops
孤岛危机优化设置：http://www.geforce.cn/optimize/optimal-game-settings/crysis-geforce-gtx-450-ops
终端彩色：cp /etc/skel/.bashrc ~/ 
PS1="\[\e]2;\u@\H \w\a\e[32;1m\]\T$\[\e[0m\] "
http://cdimage.ubuntu.com/
http://releases.ubuntu.com/ 

页首	    

13 楼  jiemar	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2012-04-19 21:01 


注册: 2010-05-07 18:28
帖子: 78 
送出感谢: 0 次 
接收感谢: 0 次
mark 学习了


_________________
dropbox注册链接
linux下支持多文件夹同步的网盘 

页首	    

14 楼  YeLee	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2012-04-19 21:56 


注册: 2008-08-13 8:48
帖子: 24948
地址: 东海硇州，一双管钥。 
系统: Fundu i64 
送出感谢: 44 次 
接收感谢: 241 次
哇，有人挖坟。


_________________
◎当我站在道德的高度上俯视别人的时候，发现自己是多么渺小。
♥执着但不偏激，反对而不排斥，坚决捍卫矛盾体的存在方式。
★★★入门推介之《笨笨兔的故事》★★★
搜索引擎
字体相关
. 

页首	    

15 楼  BIVG_youtoo	
 文章标题 : Re: 修复GRUB引导菜单成功了发表于 : 2013-02-20 10:18 

注册: 2012-07-18 11:17
帖子: 121 
送出感谢: 0 次 
接收感谢: 0 次
12楼好大啊


页首	    

显示帖子 :  排序   
 	 分页： 1 / 1
 [ 15 篇帖子 ] 	

论坛首页 » 系统安装区 » 启动和引导当前时区为 UTC + 8 小时

在线用户
正在浏览此版面的用户：没有注册用户 和 12 位游客

您 不能 在这个版面发表主题
您 不能 在这个版面回复主题
您 不能 在这个版面编辑帖子
您 不能 在这个版面删除帖子
您 不能 在这个版面提交附件

前往 :  
本站点为公益性站点，用于推广开源自由软件，由 DiaHosting VPS 和 BurstNet VPS 和 BudgetVM VPS 提供服务。
我们认为：软件应可免费取得，软件工具在各种语言环境下皆可使用，且不会有任何功能上的差异；
人们应有定制和修改软件的自由，且方式不受限制，只要他们自认为合适。
Powered by phpBB © 2000, 2002, 2005, 2007 phpBB Group 
简体中文语系由 王笑宇 翻译

LOADING...
