 
 
sina.com.cn 新浪首页 | 免费邮件 | 用户注册 | 网站地图 
 
 
 
 

    
  
新浪首页 > 科技时代 > 网上学园 > 高级编程 > 软件世界 > 正文 
 
 





 
 
 
 
 Linux的shell编程(三)

--------------------------------------------------------------------------------
http://tech.sina.com.cn 2001/02/13 13:43 软件世界 敬茂华
　　接下来以bash为例向大家介绍shell程序设计的高级部分：shell编程的流程控制、调试方法及shell程序的运行方法，顺便也向大家介绍一下bash的内部命令。

　　四、shell程序设计的流程控制

　　和其他高级程序设计语言一样，shell提供了用来控制程序执行流程的命令，包括条件分支和循环结构，用户可以用这些命令建立非常复杂的程序。

　　与传统的语言不同的是，shell用于指定条件值的不是布尔表达式而是命令和字符串。

　　1.test测试命令

　　test命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试，其测试符和相应的功能分别如下：

　　(1)数值测试：

　　-eq：等于则为真

　　-ne：不等于则为真

　　-gt：大于则为真

　　-ge：大于等于则为真

　　-lt：小于则为真

　　-le：小于等于则为真

　　(2)字符串测试：

　　=：等于则为真

　　!=：不相等则为真

　　-z字符串：字符串长度伪则为真

　　-n字符串：字符串长度不伪则为真

　　(3)文件测试：

　　-e文件名：如果文件存在则为真

　　-r文件名：如果文件存在且可读则为真

　　-w文件名：如果文件存在且可写则为真

　　-x文件名：如果文件存在且可执行则为真

　　-s文件名：如果文件存在且至少有一个字符则为真

　　-d文件名：如果文件存在且为目录则为真

　　-f文件名：如果文件存在且为普通文件则为真

　　-c文件名：如果文件存在且为字符型特殊文件则为真

　　-b文件名：如果文件存在且为块特殊文件则为真

　　另外，Linux还提供了与(“！”)、或(“-o)、非(“-a”)三个逻辑操作符用于将测试条件连接起来，其优先级为：“！”最高，“-a”次之，“-o”最低。

　　同时，bash也能完成简单的算术运算，格式如下：

　　$[expression]

　　例如：var1=2

　　var2=$[var1*10+1]

　　则：var2的值为21。

　　2.if条件语句

　　shell程序中的条件分支是通过if条件语句来实现的，其一般格式为：

　　if条件命令串

　　then 

　　条件为真时的命令串

　　else 

　　条件为假时的命令串

　　fi 

　　3.for循环

　　for循环对一个变量的可能的值都执行一个命令序列。赋给变量的几个数值既可以在程序内以数值列表的形式提供，也可以在程序以外以位置参数的形式提供。for循环的一般格式为：

　　for变量名

　　[in数值列表]

　　do 

　　若干个命令行

　　done

　　变量名可以是用户选择的任何字符串，如果变量名是var，则在in之后给出的数值将顺序替换循环命令列表中的$var。如果省略了in，则变量var的取值将是位置参数。对变量的每一个可能的赋值都将执行do和done之间的命令列表。

　　4.while和until循环

　　while和until命令都是用命令的返回状态值来控制循环的。While循环的一般格式为：

　　while 

　　若干个命令行1

　　do

　　若干个命令行2

　　done

　　只要while的“若干个命令行1”中最后一个命令的返回状态为真，while循环就继续执行do...done之间的“若干个命令行2”。

　　until命令是另一种循环结构，它和while命令相似，其格式如下：

　　until 

　　若干个命令行1

　　do 

　　若干个命令行2

　　done 

　　until循环和while循环的区别在于：while循环在条件为真时继续执行循环，而until则是在条件为假时继续执行循环。

　　Shell还提供了true和false两条命令用于建立无限循环结构的需要，它们的返回状态分别是总为0或总为非0

　　5.case条件选择

　　if条件语句用于在两个选项中选定一项，而case条件选择为用户提供了根据字符串或变量的值从多个选项中选择一项的方法，其格式如下：

　　case string in 

　　exp-1)

　　若干个命令行1

　　；；

　　exp-2)

　　若干个命令行2

　　；；

　　……

　　*)

　　其他命令行

　　esac 

　　shell通过计算字符串string的值，将其结果依次和表达式exp-1、exp-2等进行比较，直到找到一个匹配的表达式为止，如果找到了匹配项则执行它下面的命令直到遇到一对分号(；；)为止。

　　在case表达式中也可以使用shell的通配符(“*”、“？”、“[ ]”)。通常用“*”作为case命令的最后表达式以便使在前面找不到任何相应的匹配项时执行“其他命令行”的命令。

　　6.无条件控制语句break和continue

　　break用于立即终止当前循环的执行，而contiune用于不执行循环中后面的语句而立即开始下一个循环的执行。这两个语句只有放在do和done之间才有效。

　　7.函数定义

　　在shell中还可以定义函数。函数实际上也是由若干条shell命令组成的，因此它与shell程序形式上是相似的，不同的是它不是一个单独的进程，而是shell程序的一部分。函数定义的基本格式为：

　　functionname

　　{

　　若干命令行

　　}

　　调用函数的格式为：

　　functionname param1 param2……

　　shell函数可以完成某些例行的工作，而且还可以有自己的退出状态，因此函数也可以作为if、while等控制结构的条件。

　　在函数定义时不用带参数说明，但在调用函数时可以带有参数，此时shell将把这些参数分别赋予相应的位置参数$1、$2、...及$*。

　　8.命令分组

　　在shell中有两种命令分组的方法：“()”和“{}”，前者当shell执行()中的命令时将再创建一个新的子进程，然后这个子进程去执行圆括弧中的命令。当用户在执行某个命令时不想让命令运行时对状态集合(如位置参数、环境变量、当前工作目录等)的改变影响到下面语句的执行时，就应该把这些命令放在圆括弧中，这样就能保证所有的改变只对子进程产生影响，而父进程不受任何干扰；{}用于将顺序执行的命令的输出结果用于另一个命令的输入(管道方式)。当我们要真正使用圆括弧和花括弧时(如计算表达式的优先级)，则需要在其前面加上转义符(\)以便让shell知道它们不是用于命令执行的控制所用。

　　9.信号

　　trap命令用于在shell程序中捕捉到信号，之后可以有三种反应方式：

　　(1)执行一段程序来处理这一信号

　　(2)接受信号的默认操作

　　(3)忽视这一信号

　　trap对上面三种方式提供了三种基本形式：

　　第一种形式的trap命令在shell接收到signal list清单中数值相同的信号时，将执行双引号中的命令串。

　　trap 'commands' signal-list

　　trap "commands" signal-list

　　为了恢复信号的默认操作，使用第二种形式的trap命令：

　　trap signal-list

　　第三种形式的trap命令允许忽视信号：

　　trap " " signal-list

　　注意：

　　(1)对信号11(段违例)不能捕捉，因为shell本身需要捕捉该信号去进行内存的转储。

　　(2)在trap中可以定义对信号0的处理(实际上没有这个信号)，shell程序在其终止(如执行exit语句)时发出该信号。

　　(3)在捕捉到signal-list中指定的信号并执行完相应的命令之后，如果这些命令没有将shell程序终止的话，shell程序将继续执行收到信号时所执行的命令后面的命令，这样将很容易导致shell程序无法终止。

　　另外，在trap语句中，单引号和双引号是不同的，当shell程序第一次碰到trap语句时，将把commands中的命令扫描一遍。此时若commands是用单引号括起来的话，那么shell不会对commands中的变量和命令进行替换，否则commands中的变量和命令将用当时具体的值来替换。

　　五、运行shell程序的方法

　　用户可以用任何编辑程序来编写shell程序。因为shell程序是解释执行的，所以不需要编译装配成目标程序，按照shell编程的惯例，以bash为例，程序的第一行一般为“#！/bin/bash”，其中#表示该行是注释，叹号“！”告诉shell运行叹号之后的命令并用文件的其余部分作为输入，也就是运行/bin/bash并让/bin/bash去执行shell程序的内容。

　　执行shell程序的方法有三种：

　　(1)sh shell程序文件名

　　这种方法的命令格式为：

　　bash shell程序文件名

　　这实际上是调用一个新的bash命令解释程序，而把shell程序文件名作为参数传递给它。新启动的shell将去读指定的文件，执行文件中列出的命令，当所有的命令都执行完结束。该方法的优点是可以利用shell调试功能。

　　(2)sh 

　　格式为：

　　bash 

　　这种方式就是利用输入重定向，使shell命令解释程序的输入取自指定的程序文件。

　　(3)用chmod命令使shell程序成为可执行的

　　一个文件能否运行取决于该文件的内容本身可执行且该文件具有执行权。对于shell程序，当用编辑器生成一个文件时，系统赋予的许可权限都是644(rw-r-r--)，因此，当用户需要运行这个文件时，只需要直接键入文件名即可。

　　在这三种运行shell程序的方法中，最好按下面的方式选择：当刚建立一个shell程序，对它的正确性还没有把握时，应当使用第一种方式进行调试。当一个shell程序已经调试好时，应使用第三种方式把它固定下来，以后只要键入相应的文件名即可，并可被另一个程序所调用。 

<< 上一页 下一页 >> 


【发表评论】【初学者园地】【科技聊天】【关闭窗口】

　相关链接 
【学园专题】自由奔放的Linux
 
红旗Linux成为GNOME组织成员 (2001/02/10 14:54) 
Linux实验室成立 挑战微软帝国 (2001/02/09 13:29) 
RedHat推出采用2.4内核的Linuxβ版 (2001/02/08 12:51) 
IBM称Linux做好准备进入大时代 (2001/02/05 14:20) 
台湾发现全球首个Linux病毒 (2001/02/04 21:17) 
Linux遍地开花，已有版本达188种 (2001/02/03 12:48) 
Linux有无前途？与会者各抒己见 (2001/02/02 14:45) 
LINUX业界实验室近日在美国成立 (2001/02/02 14:05) 
 

 
 

网站简介 | 用户注册 | 广告服务 | 招聘信息 | 中文阅读 | Richwin | 联系方式 | 帮助信息 | 网站律师 

Copyright © 1996 - 2001 SINA.com, Stone Rich Sight. All Rights Reserved

版权所有　四通利方 新浪网
 

