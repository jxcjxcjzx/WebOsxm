
























首页 |
 资讯 |
 技术 |
 下载 |
 手册
 
登录 | 注册 




豆豆技术网
 






首页
 系统 
编程 
设计 
电子 
软件 
网络 
认证 
安全 
办公 
服务器 
企业 
通信 
数据库 





你的位置：首页 >  系统 >  linux Shell编程入门 实例讲解详解 





linux Shell编程入门 实例讲解详解
 




2007-03-12 19:04:57     发表评论
 





　　本文结合大量实例阐述如何编写一个shell脚本。

　　为什么要进行shell编程

　　在Linux系统中，虽然有各种各样的图形化接口工具，但是sell仍然是一个非常灵活的工具。Shell不仅仅是命令的收集，而且是一门非常棒的编程语言。您可以通过使用shell使大量的任务自动化，shell特别擅长系统管理任务，尤其适合那些易用性、可维护性和便携性比效率更重要的任务。

　　下面，让我们一起来看看shell是如何工作的：

　　建立一个脚本

　　Linux中有好多中不同的shell，但是通常我们使用bash (bourne again shell) 进行shell编程，因为bash是免费的并且很容易使用。所以在本文中笔者所提供的脚本都是使用bash（但是在大多数情况下，这些脚本同样可以在bash的大姐，bourne shell中运行）。

　　如同其他语言一样，通过我们使用任意一种文字编辑器，比如nedit、kedit、emacs、vi等来编写我们的shell程序。程序必须以下面的行开始（必须方在文件的第一行）：



双击代码全选



1 

#!/bin/sh 


　　符号#!用来告诉系统它后面的参数是用来执行该文件的程序。在这个例子中我们使用/bin/sh来执行程序。当编辑好脚本时，如果要执行该脚本，还必须使其可执行。

　　要使脚本可执行：



双击代码全选



1 

chmod +x filename 


　　然后，您可以通过输入： ./filename 来执行您的脚本。

　　注释

　　在进行shell编程时，以#开头的句子表示注释，直到这一行的结束。我们真诚地建议您在程序中使用注释。如果您使用了注释，那么即使相当长的时间内没有使用该脚本，您也能在很短的时间内明白该脚本的作用及工作原理。

　　变量

　　在其他编程语言中您必须使用变量。在shell编程中，所有的变量都由字符串组成，并且您不需要对变量进行声明。要赋值给一个变量，您可以这样写：

　　变量名=值

　　取出变量值可以加一个美元符号（$）在变量前面：



双击代码全选



1 

#!/bin/sh 


　　#对变量赋值：



双击代码全选



1 

a="hello world" 


　　# 现在打印变量a的内容：



双击代码全选



12 

echo "A is:"echo $a 


　　在您的编辑器中输入以上内容，然后将其保存为一个文件first。之后执行chmod +x first。使其可执行，最后输入./first执行该脚本。

　　这个脚本将会输出：



双击代码全选



12 

A is:　　hello world 


　　有时候变量名很容易与其他文字混淆，比如：



双击代码全选



12 

num=2　　echo "this is the $numnd" 


　　这并不会打印出"this is the 2nd"，而仅仅打印"this is the "，因为shell会去搜索变量numnd的值，但是这个变量时没有值的。可以使用花括号来告诉shell我们要打印的是num变量：



双击代码全选



12 

num=2　　echo "this is the $nd" 


　　这将打印： this is the 2nd

　　有许多变量是系统自动设定的，这将在后面使用这些变量时进行讨论。

　　如果您需要处理数学表达式，那么您需要使用诸如expr等程序（见下面）。除了一般的仅在程序内有效的shell变量以外，还有环境变量。由export关键字处理过的变量叫做环境变量。我们不对环境变量进行讨论，因为通常情况下仅仅在登录脚本中使用环境变量。

　　Shell命令和流程控制

　　在shell脚本中可以使用三类命令：

　　1)Unix 命令:

　　虽然在shell脚本中可以使用任意的unix命令，但是还是由一些相对更常用的命令。这些命令通常是用来进行文件和文字操作的。

　　常用命令语法及功能:

　　echo "some text": 将文字内容打印在屏幕上。

　　ls: 文件列表。

　　wc –l file wc -w file wc -c file: 计算文件行数 计算文件中的单词数 计算文件中的字符数。

　　cp sourcefile destfile: 文件拷贝。

　　mv oldname newname : 重命名文件或移动文件。

　　rm file: 删除文件。

　　grep 'pattern' file: 在文件内搜索字符串比如：grep 'searchstring' file.txt

　　cut -b colnum file: 指定欲显示的文件内容范围，并将它们输出到标准输出设备比如：输出每行第5个到第9个字符cut –b 5-9 file.txt千万不要和cat命令混淆，这是两个完全不同的命令。

　　cat file.txt: 输出文件内容到标准输出设备（屏幕）上。

　　file somefile: 得到文件类型。

　　read var: 提示用户输入，并将输入赋值给变量。

　　sort file.txt: 对file.txt文件中的行进行排序。

　　uniq: 删除文本文件中出现的行列比如： sort file.txt | uniq。

　　expr: 进行数学运算Example: add 2 and 3 expr 2 "+" 3。

　　find: 搜索文件比如：根据文件名搜索find . -name filename -print。

　　tee: 将数据输出到标准输出设备(屏幕) 和文件比如：somecommand | tee outfile。

　　basename file: 返回不包含路径的文件名比如： basename /bin/tux将返回 tux。

　　dirname file: 返回文件所在路径比如：dirname /bin/tux将返回 /bin。

　　head file: 打印文本文件开头几行。

　　tail file : 打印文本文件末尾几行。

　　sed: Sed是一个基本的查找替换程序。可以从标准输入（比如命令管道）读入文本，并将结果输出到标准输出（屏幕）。该命令采用正则表达式（见参考）进行搜索。不要和shell中的通配符相混淆。比如：将linuxfocus 替换为 LinuxFocus ：cat text.file | sed 's/linuxfocus/LinuxFocus/' > newtext.file。

　　awk: awk 用来从文本文件中提取字段。缺省地，字段分割符是空格，可以使用-F指定其他分割符。cat file.txt | awk -F, '{print "," }'这里我们使用，作为字段分割符，同时打印第一个和第三个字段。如果该文件内容如下：



双击代码全选



1 

Adam Bor, 34, IndiaKerry Miller, 22, USA 


　　命令输出结果为：



双击代码全选



1 

Adam Bor, IndiaKerry Miller. 


　　2) 概念: 管道, 重定向和 backtick

　　这些不是系统命令，但是他们真的很重要。

　　管道 (|) 将一个命令的输出作为另外一个命令的输入。



双击代码全选



1 

grep "hello" file.txt | wc -l 


　　在file.txt中搜索包含有”hello”的行并计算其行数。在这里grep命令的输出作为wc命令的输入。当然您可以使用多个命令。

　　重定向：将命令的结果输出到文件，而不是标准输出（屏幕）。

　　> 写入文件并覆盖旧文件。

　　>> 加到文件的尾部，保留旧文件内容。

　　反短斜线,使用反短斜线可以将一个命令的输出作为另外一个命令的一个命令行参数。

　　命令：



双击代码全选



1 

find . -mtime -1 -type f -print 


　　用来查找过去24小时（-mtime –2则表示过去48小时）内修改过的文件。如果您想将所有查找到的文件打一个包，则可以使用以下脚本：



双击代码全选



123 

#!/bin/sh　　# The ticks are backticks (`) not normal quotes ('):　　tar -zcvf lastmod.tar.gz `find . -mtime -1 -type f -print` 


　　3) 流程控制

　　"if" 表达式 如果条件为真则执行then后面的部分：

　　if ....; then
 



作者：chengfu    




分享到
 

0 


打印
 投稿
 RSS订阅
 下载： 



(19)67% 顶一下 (9)33% 踩一下 



linux
 

Shell编程
 



评论

 


最新评论(共0条评论) 查看全部评论 



对不起，没有评论
 
发表评论
 


 好评  中评  差评 

用户名： 密 码： 匿名 新用户注册 

说点什么吧.. 























今日排行
 一周排行
 总排行
 

一步一步学linux c ---浅谈动态内存
 DiskGenius分区工具使用
 Android 中文 API（140） —— DexFile
 WCG世界电子竞技大赛魔兽争霸3前三中国包揽
 SapientNitro推出专有的云数字客户参与平台
 英特尔推出6瓦服务器级处理器
 Android手机安装原版BT5[ARM]
 刷机精灵联手OPPO举办ROM挑战赛
 Windows 8 开发之旅(17) --足球游戏揭秘3
 写在Linux七天系列之前（四）—性能测试工
 






















最新热门tag
 
html(10190)
 asp(9071)
 vb(6828)
 php(6593)
 c语言(6158)
 python(6021)
 windows xp(5431)
 综合布线(5414)
 photoshop(4931)
 无线网络(4375)
 windows 7(3478)
 cam(3212)
 java(3142)
 flash(2553)
 电路图(2517)
 javascript(2356)
 vc(2276)
 linux(2096)
 


digg排榜
 
美图秀秀打造温暖美妙的海底美女照片
 中国象棋初学者理论培训之开局篇
 Photoshop 去掉图片上的文字的几个方法
 Flash AS 入门到精通教程
 Photoshop抠图详细教程：明天你就是抠图高
 extjs学习笔记（二） Ext.Element类
 轻松把土豆网的视频下载保存到手机上
 Photoshop通道抠图技巧
 Photoshop婚纱照片处理：爱情天长地久
 使用 Excel 数据透视表查看数据
 



关于我们 | 联系我们 | 版权申明 | 广告服务 | 网站律师 | 提交软件 | 报告错误 
Copyright 2002-2012 ddvip All Rights Reserved
 豆豆网版权所有
 

猜你需要
 
Linux编程Shell基本工作原理方案 

Shell 编程入门：Linux 解释器原理 
Linux编程：信号篇 
Linux下Shell的使用 
linux shell 发送email 邮件 
linux shell 发送email 附件 
深入学习Linux系统,Linux内核编程风格 
Linux多线程编程和Linux 2.6下的NPTL 
Shell编程：Linux系统环境程序设计之 

