网易 新闻 微博 邮箱 相册 阅读 有道 摄影 爱拍 优惠券 云笔记 闪电邮 手机邮 印像派 网易识字  更多   博客 手机博客 博客搬家 博客VIP服务  LiveWriter写博 word写博 邮件写博 短信写博  群博客 博客油菜地 博客话题 博客热点 博客圈子 找朋友 发现小组风格   网易真人搭配社区iStyle
下载最文艺的手机博客APP>
下载最文艺的手机博客APP>.创建博客 登录    加关注..   显示下一条  |  关闭 温馨提示！由于新浪微博认证机制调整，您的新浪微博帐号绑定已过期，请重新绑定！立即重新绑定新浪微博》  |  关闭 
休闲吧

 
导航
首页 日志 相册 音乐 收藏 博友 关于我 .  
   
日志   Emily 
   加博友    关注她 
 
被推荐日志
最新日志
调理血液循环的清道夫——吴黄芪党参加红枣，男女永远不中药材的效用之最经典养生能活200岁 有缘人一四季感冒一方必清[转]女老中医：根治骨质增生绝顶该作者的其他文章
博主推荐
随机阅读
洪涛：“零毛利”是企业行为，“零元价”是违法行为浅析杜甫诗作《无家别》【转载】无 锡 又 一 景深圳大雨“最牛国土局长”连任15年的官场悬念《夜话港乐》——32.林夕：三千首歌曲的快乐与哀愁首页推荐
中国是个爱好嫖娼的民族孙中山与'黑社会'的关系央视315晚会的打假黑幕中国国家主席职位曾取消王晓渔：两会比春晚欢乐女性手淫过度后身体变化更多>>


  Nand Flash与Nor Flash区别  守护进程的编写 .
学习Linux多进程编程  2009-09-14 09:14:44|  分类： linux |  标签： |字号大中小 订阅 .


一、进程的定义：程序执行和资源管理的最小单位。

二、进程控制：

（1）进程标识： 

进程标识  子进程号  父进程号 
 头文件  #include<unistd.h>  #include<unistd.h> 
 函数功能  取得当前进程的进程号  取得当前进程的父进程号 
 函数原型  Pid_t getpid(void) Pid_t getppid(void)  
 函数返回值  成功返回进程的进程标识符   成功返回父进程的进程标识符 


注：Pid_t其实是一个typedef类型，相当于unsigned int.

例：

 #include<stdio.h>

#include<unistd.h>

int main()

{

   printf("系统分配的进程号是：%d\n",getpid());

   printf("系统分配的父进程号是：%d\n",getppid());

   return 0;

}

 （2）进程的创建：

    1)exec族函数：


 头文件  #include<unistd.h> 
原型 
int execl(const chat *path,const char *args,...)

int execv(const char *path,char const *argv[])

int execle(const cahr *path,const char *arg,...,char *const envp[])

int execve(const char *path,char *const argv[],char *const envp[])

int execlp(const char *file,char *arg,...)

int execvp(const cahr *file,char *const argv[])
 
返回  返回-1表示出错 


由于比较多，在此只举例execve函数：

#include<stdio.h>

#include<unistd>

int main()

{ 

   char *args[]={"/usr/bin/vim",NULL};

   printf("系统分配的进程号是：%d\n",getpid());

   if(execve("/usr/bin/vim",args,NULL)<0)

     perror("创建进程出错！");

    return 0;

}

注:在用execve函数创建新进程的后，会以新的程序取代原来的进程，然后系统会从新的进程运行，但是新的进程的PID值会与原来进程的PID值相同.

2)system()函数


 头文件  #include<stdlib.h> 
 功能  在进程中开始另一个进程 
 原型  int system(const char *string) 
 传入值  系统变量 
 返回值 
 成功则返回执行shell命令后的返回值，调用/bin/sh数百返回127，其他

失败返回－1，三叔string为空返回非零值
 


例：

#include<stdio.h>Linux博客/红联Linux博客l~ vQ*V!`N3dV

#include<stdlib.h>

$]co Q1T*qF,v[+k6y'\0int main()

["FpI*u.l|t gh0{

{Y Bk&X0 int newret;

4` O Ne3O-m0 printf("系统分配的进程号是:%d\n",getpid());Linux博客/红联Linux博客!UM2?W:H FK FN}

 newret=system("ping group.google.com/group/linuxerfamily");Linux博客/红联Linux博客@ I4G,WV%zau

 return 0;

0f?|@7[/] s0}

注：执行system函数是，会调用fork,execve,waitpid函数，其中任意一个调用失败将导致system函数调用失败。

3)fork函数：


 头文件  #include<unistd.h> 
 功能  建立一个新进程（复制进程） 
 原型 pid_t fork(void);  
 返回值 
 执行成功则在子进程中返回0，在父进程中返回新建进程的PID,

 失败返回－1
 


例：

#include<stdio.h>Linux博客/红联Linux博客'g N#NP?F

#include<stdlib.h>Linux博客/红联Linux博客T3|2c+U:Vg!L

#include<unistd.h>Linux博客/红联Linux博客;sCo!_SFB

#inlcude<sys/types.h>

4l,Oa5O tR#h0int main()Linux博客/红联Linux博客J&[$Z_G dZ

{

j#iMua9z0 pid_t result;Linux博客/红联Linux博客3^?tAeN

 result=fork();

C s?\ S|)r$U?0 int newret;

Dto3E;M`[0 if(result==-1)

V? w7E!]1O Q7e0 {

Ov(c{5j0  perror("创建进程失败！");

8`^&MT+?M `W0  exit(1);

)F%o1qp0ilf;X0 }Linux博客/红联Linux博客6vi"T4LC4UQDf

 else if(result==0)Linux博客/红联Linux博客5`6Pi;TV

 {

{#}B/W,m2^$H0  printf("返回值是:%d,说明这是子进程!\n此进程的进程号是:%d\n此进程的父进程号是:%    d\n",result,getpid(),getppid());

ys(u?IH8w4g!p`0  newret=system("ls -l");

{ Hg.Ms?d't-I0 }Linux博客/红联Linux博客~4H%zxS0I;m

 elseLinux博客/红联Linux博客\&] WIWl%|

 {

5H6n3G!|J0  sleep(10);

??e5Q(w'B`0  printf("返回值是:%d,说明这是父进程!\n此进程的进程号是:%d,此进程的父进程号是:% d\n",result,getpid(),getppid());

t#_._h }I c1|0  newret=system("ping "group.google.com/group/linuxerfamily");Linux博客/红联Linux博客1V:^2t5k7J9]

 }

mt$h;dhDG0 return 0;Linux博客/红联Linux博客W'x HJM1[@

}

注：使用fork要小心，特别是当把它放在if else或循环里，如：

int main()

{

    for(;;) fork();

}

可能造成系统死机，因为由fork创建的进程如果比父进程结束的晚，就有可能形成僵尸进程，占用系统资源又没有用，造成资源殆尽。


 功能  等待子进程中断或结束 
 原型  Pid_t wait(int *status) 
 传入值  status子进程状态 
 返回值  成功返回子进程的进程号，否则返回－1 
 注  wait()会暂停目前进程的执行，直到有信号来到或子进程终止 


例：

#include<stdio.h>

#include<sys/types.h>

#include<sys/wait.h>

#include<unistd.h>

int main()

{

   pid_t child;

   int i;

   child=fork();

  if(child<0)

  {

    perror("创建进程失败！");

    exit(1);

  }

  else if(child==0)

  {

     printf("这是子进程，进程号是:%d\n",getpid());

     for(i=0;i<100;i++)

       printf("这是子进程第%d此打印！\n",i+1);

    printf("子进程结束!");

  }

  else

  {

     printf("这是父进程，进程号是:%d\n",getppid());

     printf("父进程等待子进程结束...");

     wait(&child);

     printf("父进程结束!");

  }

}

注:wait()函数会阻塞父进程运行直到子进程正常结束。

5）waitpid()函数


头文件 
#include<sys/types.h>

#include<sys/wait.h>
 
功能 等待子进程中断或结束 
原型 pid_t waitpid(pid_t pid,int *status,int options) 
传入值 
pid为子进程号     

status为子进程状态   

option可以为0、WNOHANG(如果没有任何已终止的子进程则马上返回，不予等待)或WUNTRACED(如果子进程进入暂停执行则马上返回，但终止状态不予理会)
 
返回值 成功返回子进程号，否则返回－1 
注 此函数会暂停目前进程的执行，直到有信号来到或子进程终止 


例：略（同wait()例差不多）。


进程终止：

6）exit()函数


 头文件  #include<stdlib.h>  #include<stdlib.h> 
 功能  正常终止进程 终止进程执行  
 原型  void exit(int status) void _exit(int status)  
 传入数值  整数 status  整数 status 
 注 
 exit()用来正常终止目前进程的

 执行，并把参数status返回给父

 进程，而进程所有的缓冲数据会

 自动写回并关闭未关闭的文件
 
_exit()哟年来立刻终止目前进程

的执行，并把参数status返回给父

进程，并关闭未关闭的文件，但不处

理标准I/O缓冲区 
 


例：

#include<stdio.h>

#include<stdlib.h>

#include<unistd.h>

int main()

{

   pid_t result;

   result=fork();

   if(result==-1)

  {

     perror("创建进程失败!");

     esit(0);

  }

  else if(result==0)

  {

     printf("测试终止进程函数_exit()!\n");

     printf("这一行用缓存！");

     _exit(0);

  }

  else 

  {  

     printf("测试终止进程函数exit()!\n");

     printf("这一行用缓存！");

     exit(0);

  }

  return 0;

}




  评论这张 
 转发至微博 
 转发至微博 
 0人  |  分享到：         阅读(362)| 评论(0)| 不可转载 |举报 .
 
  Nand Flash与Nor Flash区别  守护进程的编写 .
历史上的今天.
最近读者
登录后，您可以在此留下足迹。. 追梦  yuliu055  魏晓武  e0662011  w-t-1989  11011212  xuzhangj  began200 .
评论
点击登录|昵称： 
   取消 
验证码：换一张 
 
上一页 1... -1-1-1-1-1-1-1... -1下一页..     .
 
 
 
 
 
 
   
页脚
公司简介 - 联系方法 - 招聘信息 - 客户服务 - 隐私政策 - 博客风格 - 手机博客 - VIP博客 - 订阅此博客 
网易公司版权所有 ©1997-2013
×
信息提示
合影需收费的瑶寨寨花
中国式楼市调控的最后一拳
被美国禁止入境的中国食物

温总理在习近平注视下对李克强说了什么
和央视3.15同流合污的名人
缅甸政府军雇百姓种植鸦片
第一夫人彭丽媛该做些什么
阎锡山反蒋不成功差点没命
.
 
 
 
 
 
 
 
 
