您还未登录！|登录|注册|帮助首页业界移动云计算研发论坛博客下载
更多
BinaryTreeEx的专栏
目录视图摘要视图订阅
博客专家信息更新登记表        社区专家谈 12306      CSDN社区程序员回乡见闻活动火爆开始！ 
专访陈勇： 敏捷开发现状及发展之路        “传统商家移动化之路”会议        2013年全国百所高校巡讲讲师招募
 [置顶] 十八年开发经验分享（一）学习篇
2012-11-12 15:09 39209人阅读 评论(159) 收藏 举报
分享学习知识程序经验
很偶然的写了一篇博文“十八年开发经历小结”，本来打算只是简单回顾一下自己经历。结果没想到被CSDN放到了首页，反映也还可以，感兴趣的可以访问我在CSDN上的博客，点击这里，或者访问我在博客园上的博客，点击这里。既然我写的东西还有人愿意看，于是我就萌发了再写一个系列的文字的想法。从第一次在CSDN上获得帮助，第一次在CSDN上帮助别人，一直到现在，期间帮助和被帮助已经很多很多次了。我认为专利和知识产权是独占并被保护的，但是经验和知识是应该分享的。为了这十八年来的帮助与被帮助，为了我写的文字还有人愿意看，我想写出这个系列来，与各位同行分享自己的经验，共同进步。这个系列的内容主要来自个人的实际经历，我不想谈一些什么经典或者范例的东西。我觉得自己体会到的东西和同行分享才更有意义，也更具有实用价值。同时我相信写出这个系列的文字，也是我对自己经验的一个认真的回顾和归纳，这一定是很有裨益的。
作为本系列的第一篇，想谈谈程序员的学习问题。之所以第一个要谈的问题就是学习，是因为我觉得这个问题最重要，也是最让相当一部分程序员比较犯愁发憷的问题。本文如果能给这部分程序员带来一点帮助或者启发，那么目的就达到了。学习问题在那篇小结中写了一小段，这次可以相对较为详细的谈谈这个问题了。 
既然要谈学习，那么首先需要明确一个问题，我们打算学什么？这里先对这个纷繁世界中的知识做一个分类：
A.教材上的知识
这部分内容来自计算机专业的课程教材。也有可能会涉及一部分来自其他相关专业或者相关课程的内容。 
B.编程语言
每一个程序员只有在会使用一门语言的情况下才有可能从事开发工作，所以学习并掌握一门语言是最低要求了。 
C.SDK
光有一门语言是不够的，从事任何实际的软件开发都需要一个类库或者开发包才可以完成。比如C语言中的库函数，C#中的.NetFramework类库，Windows的API等等就属于这个范畴。 
D.开发工具
以如今的情况来说，没有开发工具理论上也是可以开发软件的，但效率就是一个问题，所以掌握并使用一个开发工具完成开发任务应该也是一个最低要求。 
E.领域知识
软件总有用户，于是开发这些用户使用的软件，那么程序员就需要了解用户所在行业的知识，至少需要知道一些基本的必须的知识。还有一部分的内容也划分为领域知识，比如从事Photoshop这类软件的开发那么图形相关的知识就必须了解一些，从事工控软件的开发，那么对控制方面的知识也要有所了解。 
以上的分类是在本文中我对知识的理解，一个程序员知道这些知识后从事一个软件的开发应该是没有问题了。下面分别来讨论一下这些知识的学习问题。 
一．教材知识的学习
做为一个已经从业的程序员来说，我不认为计算机专业的所有专业课程（包括专业基础课，我在读大学的时候还有这个说法）都是有用的。实际上对于大部分程序员来说，只需要很少的一部分知识就足够了。这些知识主要由三门课程组成：数据结构，编译原理，操作系统。对于大部分的程序员来说，其他课程的内容不是没用，而是在实际工作中用不上。 
数据结构这门课程的重要性，可以理解为是程序员的圣经，怎么如何形容其重要性都是不过过分的。这门课程中需要掌握的内容，我个人观点如下：
1.  掌握所有线性数据结构的知识，比如表，栈，队列等（广义表可以不作要求）
2.  二叉树的基本操作和基本使用
3.  图中需要知道遍历和了解最短路径算法，以及相关的一些概念 
当然对于某些程序员来说，这是不够的，因为从事的具体的软件开发工作会有不同的要求。但是对于大部分从事MIS软件开发的程序员来说，这些知识够了。掌握这些知识可以有两个层面的要求。第一个是完成足够的习题，从而可以熟练的答题，第二个是能够在实际工作中使用数据结构描述实际的事物。做到这两点要求应该说不算太高，注意多加练习就可以了。目前来说这门课程的经典教材也不少，相信只要按部就班的学习完就是合格的了。 
编译原理这门课程主要是学习方法和思想而不是课程中的知识本身。因为毕业出来能从事编译器开发的人实在是太少太少了。这门课程需要掌握了解的东西不多，我个人的观点主要是以下几个：
1.  确定有限自动机和非确定有限自动机的使用
2.  词法分析程序的实现
3.  语法分析的方法 
自动机在实际应用中的体现就相当于是状态转换图，这个工具非常的重要，希望能够务必掌握。我们在开发EntityModelStudio时，设计界面交互部分的内容就是先设计出状态转换图然后再写代码的，否则直接开发的话就会面临开发失去控制的风险，同时重构和维护也会相当麻烦。所以这个工具极其强大，非常实用。另外提一下，非确定有限自动机，这个工具的能力和确定的有限自动机是等价的。但是由于它的不确定性，更符合人的自然思维习惯，从而在某些设计场合相对会方便很多。这一点是很实用的，也是很吸引人的。 
掌握词法分析程序的实现，可以大幅度拓展开发能力和思考能力。这部分东西理论上描述可能比较麻烦，但是实际使用时还是很容易上手的，所以非常值得学习一下。语法分析程序不需要掌握了，毕竟开发编译器的机会是微乎其微的。但是相关的方法和思想希望能够了解，这可以帮助程序员用电脑的思维来思考问题。 
操作系统需要掌握的东西只有两个：
1.  五大管理的基本方法，尤其是涉及内存管理的策略
2.  线程或者进程的同步技术 
操作系统是复杂的，但是教材中介绍的这些管理方法相对来说是简单易懂很多了。这一难一简之间体现了基本知识的重要性，基本知识在实际开发中的应用的广泛性。好好的体会，就可以明白用简单方法解决复杂问题的技巧。线程进程的同步，这个就不用多说了，大家都知道它的作用，如果实在不想掌握的话那我也非常愿意相信你的理由一定是充分的，否则你绝对不会那么做。 
最后我想强调的是，无论你如何看待这些知识：可能觉的没用，可能觉的太难，可能是不感兴趣，但是如果你想做程序员的话，那么请你务必最大可能牢固，最大可能熟练的掌握它。 
二．编程语言
对于一个程序员来说，一般需要掌握2,3门语言是基本的，并且学习一门新的编程语言也是基本功级别的能力，所以这部分主要谈谈快速学习一门新的编程语言的方法。我学过的语言有这些（这里编译器和语言的概念等同了并且不按先后次序）：Foxbase，C，C++，汇编，Visual C++，Delphi，FoxPro，VB，C#。就我个人的体会来说，这些语言可以分为三种类别：非面向对象的，面向对象以及支持可视化设计的。 
这三种类别的语言有一些共同的内容，而这些内容也是我们在学习一门新的编程语言时首先需要知道的，可以说是关键的知识点。这些内容大致如下：
1.常量，变量，数组，不同的数据类型
这部分需要掌握常量，变量，数组的定义，初始化，不同数据类型的使用。数组中元素的读写，作为参数如何定义，作为返回值如何定义。有些语言还支持数组大小的重新定义。 
2.函数（或者叫子程序）
函数如何定义（比如参数和返回值），如何调用（这里存在异步调用和同步调用的问题），全局的还是非全局的。 
3.流程控制
分支结构：if语句，if else语句，switch语句；循环结构：for语句，while语句，do…while语句，有些语言可能是Loop。 
4.最基本的输入输出和文件操作
最基本的输入输出语句可以帮助你在学习语言的过程中完成简单程序的练习任务，比如：输出到控制台，dos操作系统中输出到屏幕等等。文件操作也要知道，至少以后写个程序生成日志文件就会了。 
以上内容在学习一门新的编程语言时，希望能首先掌握，这能让你很快的入门，并尽快使用新语言写出代码。另外还可以关注一下其他方面的内容，比如： 
1.了解语言的新特性
这个阶段只需要了解，不需要掌握，记住有这些新特性，在需要用的时候想起它们就可以了。 
2.了解一下帮助文档中，该语言的所有关键字
这部分内容有可能让你发现一些很有用的东西。 
好了，知道这些内容差不多一门新的语言就算入门了。当然还有其他很多东西，但是这些内容可以在具体开发中遇到时再去找例子就可以了。下面谈谈这些语言的差异。对于面向对象的语言来说，需要知道面向对象三大特征：封装，继承，多态在具体的一门编程语言中是如何表达的或者等价表达的。对于支持可视化设计的语言来说，还需要知道如何设计窗体，以及常用控件的使用。按照这个方法，从一门已经会的编程语言到学习另一门新的编程语言应该是比较快的。对于还在大学中学习的人来说，我的建议是C++或者Pascal中的一个，VB或者C#中的一个或者其它可视化开发语言中的一个学习一下。如果可能学习一下汇编是最好的。 
三．SDK
掌握一个SDK才能使程序员在掌握一门语言的基础上进行实际的开发，如果仅仅是一门语言那是不够的。所谓SDK举例子来说就是Foxbase的命令和函数，C的库函数，C++的类库（比如微软的MFC），Windows的API，.NetFramework，这些都是我所说的SDK。程序员可以根据自己的实际开发需要，有选择的学习相关的内容。我的建议是，可以先google，然后查文档，一般的问题都可以很快解决的，慢慢的也就逐步掌握了。比如说我不知道C#如何使用线程，那么我就用google查找，关键词是“C# 线程”，然后从结果中找到需要的内容。很多时候结果中的代码是可以直接使用的。然后再去看一下MSDN的帮助文档，了解一下相关的类和方法的说明，这样这部分的知识就可以认为是掌握了。下次使用时就知道怎么用了。我的C#就是这么入门的，大概google问了二三十个问题左右。 
另外一个建议是买一本书学习也是可以考虑的，这也是一个不错的方法，只是买到好的书需要缘分。就我个人来说，绝大部分的情况下是看电子书，直接从网上下载的。 
四．开发工具
除非你只用独立的文本编辑器写代码，并且用命令行编译，否则你一定需要一个开发工具，尤其是一个带IDE的开发工具。对于你使用的开发工具而言，需要了解的基本内容如下：
1.  项目或者工程的创建，属性修改，打开关闭等基本操作
2.  具体开发时的环境设置
3.  项目中的文件组织及管理
4.  常用功能的使用，比如：编译，执行，断点设置，代码跟踪，调试信息输出，实用的快捷键，调试时变量查看，查找/替换等等
5.  从帮助文档中了解IDE的新功能。因为这些功能有可能对你是非常有帮助的。
6.  帮助文档的获取 
如果有自己的使用习惯的话，还可以了解一下如何定制IDE环境以满足自己的开发习惯。首先了解这些内容可以帮助你相对快一点适应一个新的IDE。 
五．领域知识
一个从事技术工作的程序员需要了解与技术不相干的领域知识，确实有点无奈。但是在具体的开发中，不了解这些知识就无法更好的理解用户的需求，也无法更好的完成开发任务以及与同事领导的沟通。所以这个步骤是重要的必要的，有时候有可能还会带来更严重的后果。在有些项目中如果不能很好的了解这些领域知识，项目中的成员有可能会被替换掉，我个人就有过这样的经历。所以这里特别列出来强调一下。 
差不多这些知识应该够用了，下面再提几个额外的内容，这几点虽然和开发不是太直接相关，但是确实也很重要。它们是英语，数学，读源代码和读书，有余力的程序员可以尽量提高这几方面的水平，这是很有用的学习途径和方法。对于英语而言主要是读和写，这样就可以阅读英文资料并用邮件，论坛或者聊天工具和老外沟通。由此获得的帮助是非常显著而高效的。这里要说明一下，微软论坛上的回复的质量非常之高。 
对于数学我的理解主要是三个部分，都是很具体的：
1.中学里学过的知识
这部分知识很重要，这是我们用简单方法解决复杂问题的基础，同时使用的几率也非常高。如果全部忘记的话，建议多少复习一下，或者用到的时候回顾一下。 
2.离散数学
我需要承认在开发中直接使用离散数学知识的场合我一次都没有遇到，但是如果没有离散数学的知识，那么我就无法思考，很多问题就无法解决。 
3.组合数学
这门课程属于研究生级别了，相对难度会大一些。我的观点是你不需要全部掌握，知道一部分就可以了，比如：鸽巢原理，母函数，以及常用的计数方法和技巧。尤其是技术方法这部分在问题的分析简化，工作量的评估，算法设计以及软件测试方面都有非常实用和具体的应用价值，是很值得掌握的。是否可以使用这部分知识，在实际工作中表现出来的效果至少相差一个等级。 
一个好的源代码具有不可估量的价值，潜心学习一下可以让你从一个门外汉变成一个开发老手，所以注重培养从读源代码学习编程知识的能力。我的体会是，阅读源代是一个非常有效（有用并且高效率）的方法来提高自己的开发水平或者解决实际问题的能力。我第一次认真学习的源代码来自当初的程序员大本营。一个例子是实现Visual Studio 6.0中Workspace的界面，另一个是如何实现给主菜单加入图标。两个例子大概花了我一个半月的时间并且写了几篇心得，记录下学习的内容。应该说收获很大。再比如，下一个版本的EntityModelStudio中会加入代码编辑器，这个支持语法高亮和行号的编辑器就是在读懂开源代码后我们自己独立重新开发的。在阅读源代码的时候希望能注意两点：
1.  最好能配置好环境可以单步跟踪代码，这样理解代码的速度和效果会好很多。
2.  快速的定位那些自己想看的代码。这里建议可以使用IDE提供的查找功能，看文件名，类名等方式来定位。如果实在不行，考虑注释代码，来快速定位。 
第四个内容是读书，阅读是学习的一个最基本和最重要的途径。在这里我不想列出任何需要阅读的书目，这是因为当下流行的所谓经典或者著名的开发书籍我读得很少，所以也说不出体会。我看过的书都比较老了，比如：
1.  BorlandC++4.5使用及开发指南
这是我的C++的教材，C++部分先后看了不下6次
2.  一本1970年发行的软件工程的书，这是我第一次接触软件工程
3.  代码大全第一版，我觉得第二版没有第一版好
4.  用于面向对象的设计和分析方法，这是美国哥伦比亚大学的一个教授写的。是清华大学原版教材中的一本，非常好，是OOD的绝好教材。 
目前有印象的就这些，以后想到了再补充吧。其他读过的书还有很多，都是具体的编码的书就不再一一列举了。有些书需要仔细阅读的，比如讲设计，讲方法的书，有些书需要很快的浏览完，比如讲具体编程的书。我的体会是，一本几百页的书，你应该花1,2小时就能过一遍，最好是20分钟到40分钟就能过完。在实际开发中，用到的时候再看书，查找需要的内容。如果你需要花很长一段时间全部学完一本书的话，那么你看的第一本书可以这样，否则我觉得你的学习方法就有问题了。至少一本书中不可能所有的东西都是你马上要用到的，你没有必要立刻学习，所以应该学会快速阅读的技巧。当然这是个人观点，取舍对错自行判断吧。 
你不能寄希望于一次就能买到一本理想的书，也不能希望在一本书中学到自己需要的所有内容。遇到一本好书是需要点运气和缘分的。我的总体感觉是，外国知名出版社的图书的质量明显好一些，还有台湾一些出版社的图书也还不错。建议大家可以买一些绝对知名和权威的书籍，这样相对风险会小一些。对于那些书名为XXX大全，XXX宝典，精通XXX，XXX权威这样的书，我是很不看好的，当然这是自己的看法，仅供参考。 
最后说一下不要学习的东西，这是在本文发布前刚发现的问题。几天前在群里聊天，一个人说想解析暗黑的通信协议，然后做外挂。我对这方面很不在行，但是这明显是一个非常耗费时间，难度也非常大的事情。我在这里给出的建议是，一个职业的程序员需要知道自己的价值，自己的知识和精力应该花在能够创造实际价值的地方。不要仅仅出于爱好或者热情去做一些成本很大的事情，与其炫耀自己的能力，不如踏实的做好本职工作。如果实在想做可以作为业余爱好，适可而止。 
好了这次就写到这里了，感觉还是有点仓促。再次声明以上内容都是一些个人的看法，限于本人的经历和知识面，不妥或疏漏之处在所难免，希望同行们能指出来，让我也提高一下。下一篇的题目暂定为“问题解决篇”，主要介绍如何在工作中使用这些知识解决实际问题的方法和心得。
分享到： 
上一篇：EntityModelStudio系列教程
下一篇：十八年开发经验分享（二）问题解决篇（上）
顶
216
踩
12

查看评论
158楼 dachu 4天前 09:16发表 [回复]

受教了，想想我现在还在学校里，十几年的经验对我来说可谓是最大鼓舞.....
157楼 dachu 4天前 09:10发表 [回复]

支持下，很受益
156楼 xing301lu 2013-01-14 16:35发表 [回复]

受教了！仔细阅读！
155楼 dzc1987 2013-01-09 17:19发表 [回复]

有些地方写的蛮好的。厚积薄发，打好基础，扩展起来就比较简单了。
楼主公司网站进去都是乱码（搜狗浏览器）。
Re: BinaryTreeEx 2013-01-09 17:48发表 [回复]

回复dzc1987：搜狗的没有试过。Chrome和IE没有问题
154楼 wjwj1203 2013-01-08 09:18发表 [回复]

大家都知道读源码确实对能力的提高很有帮助，但是读源码有什么方法与技巧吗？我尝试着读了几次源码，但是很迷茫，不能理解，可能是方法不对吧。
153楼 jiangp1984 2013-01-08 00:20发表 [回复]

看了楼主的文章，受益匪浅，学习，楼主的q怎么加不了，需要回答问题
Re: BinaryTreeEx 2013-01-08 06:17发表 [回复]

回复jiangp1984：应该没有吧，很多人加进来了
Re: jiangp1984 2013-01-21 23:03发表 [回复]

回复BinaryTreeEx：加不了，有个问题：“ . ”
要答问才行
152楼 yuanjungogogo 2012-12-30 12:23发表 [回复]

像技术前辈致敬,写的真不错！
151楼 guo_zilong 2012-12-29 14:59发表 [回复]

受教额~！ 再读一遍~
150楼 SnowCold 2012-12-25 20:09发表 [回复]

毕业一年半，现在全职个人开发者，非常有幸读到博主文章。发现自己很多学习的方式和博主蛮象的，当然也有很多地方深受启发。个人认为读代码应该是前期最有效的提升层次的方法了，毕业后在公司的一年时间基本就是在读Android framework和源生应用的代码，对自己的提升特别大。还有就是一定要自己写代码，真正编码的能力肯定是在平时写代码的时候积累出来的。
Re: BinaryTreeEx 2012-12-26 12:39发表 [回复]

回复SnowColdGame：如果在创业可以加这个QQ：244054966
Re: SnowCold 2012-12-27 14:28发表 [回复]

回复BinaryTreeEx：加了，但是需要验证问题噢
Re: BinaryTreeEx 2012-12-27 16:54发表 [回复]

回复SnowColdGame：不会吧，什么问题呢？我没有设置啊，其他人都可以进来啊
149楼 jeakeven 2012-12-14 10:42发表 [回复]

顶一下，对我等菜鸟，是一大财富，希望楼主常分享如此经验
148楼 h693261646 2012-11-27 11:57发表 [回复]

小弟拜读完一部分，就迫不及待的回顶部收藏。谢谢楼主的分享，小弟受益匪浅！
147楼 xiaoying2004004 2012-11-25 21:12发表 [回复]

向楼主学习！
146楼 云中漫步生 2012-11-25 19:46发表 [回复]

本人做程序员4年了，感觉做程序员最重要的是心平气和，并深爱这份职业。不断磨练自己的经验积累，有实力了才能带领小牛们干活。
145楼 fanny2006137221 2012-11-25 16:29发表 [回复]

看了楼主的博客受益匪浅 程序员之路需要潜心研究 深入学习
144楼 fes52songlu 2012-11-24 00:31发表 [回复]

我最近看的书也不少 目前在东软实训 有些东西怎么也弄不明白 这种情况怎么办 求指导。
Re: BinaryTreeEx 2012-11-24 18:32发表 [回复]

回复fes52songlu：描述有点笼统不太好发表看法，有具体的问题么？
Re: fes52songlu 2012-12-03 23:09发表 [回复]

回复BinaryTreeEx：就是比如一个冒泡排序看了很多解释都不能明白 其实最主要的是基本上接触的东西很多 但是一到真正编代码解决实际问题的时候就无从下手 求博主指导。
Re: BinaryTreeEx 2012-12-04 17:59发表 [回复]

回复fes52songlu：具体就冒泡法来说，这个算是比较容易的，所以在心理上不要畏惧。一般教材在介绍这个算法是有图的，多看看应该是可以理解的。由此推广到其他问题时，情况就比较复杂了。有的问题可以多次尝试后解决，有的却不能，这个要看具体的情况。另外需要注意学习的方法，以及实践的反馈，正确认识自己的能力和潜力。所以假设你遇到的是一些基本问题话，我的建议是你尝试着去做，这一次比上一次做得好就可以了，时间长了慢慢就有长进了。另外可能的话数据结构的一些比较大的实验题是否可以独立完成？
Re: fes52songlu 2012-12-04 20:19发表 [回复]

回复BinaryTreeEx：一看什么头结点就不知道了 数据结构不会 指针始终绕不过弯来 现在在学windows编程 以前的指针是一个地址 现在的指针直接指向一个窗口句柄啥的 会用 但是不知道到底是怎么回事
143楼 skiingman 2012-11-23 23:33发表 [回复]

向 博主 学习
142楼 Elite_1989 2012-11-22 13:56发表 [回复]

敬仰所有不断学习的程序员前辈啊!
141楼 ssszs 2012-11-21 17:10发表 [回复]

强力学习了
140楼 ifromearth 2012-11-21 17:03发表 [回复]

楼主强人，估计现在做项目经理了吧？
139楼 lantianyu520 2012-11-21 14:38发表 [回复]

楼主的文笔不错，但是写的东西缺乏深度
138楼 xiaohh208 2012-11-21 14:03发表 [回复]

:-(，对于一个菜鸟来说。蛋疼了。
137楼 oowangoo 2012-11-21 12:35发表 [回复]

mark谢谢分享
136楼 boneheart 2012-11-21 11:35发表 [回复]

我和楼主应该是同一个时代的人。我有19年编程经验，目前也在做程序员。个人感觉楼主还行。就是学的语言和平台过多。我一直只专注于vc和delphi两个平台，只搞这2种语言。最近打算全放弃了专到linux下的gcc和QT,编程功力的提高是件缓慢的事情。但努力的方向很重要。你的经验和理解上来看，你还没有真正进阶到高级阶段。这些经历只对8年到10年的程序员有用。再后面的提高就没有说了。
Re: yansandiego 2012-11-22 08:38发表 [回复]

回复boneheart：本人做程序员多年，有时有瓶颈感觉，希望你能分享一下八，十年后的体会。
Re: boneheart 2012-11-22 10:40发表 [回复]

回复yansandiego：10年以上的程序员已经是非常有经验的程序员了。这个时候回感觉到技术的提高非常有瓶颈。似乎很难提高了。这个时候的程序员应该已经钻通了单机的应用，开始接触驱动程序级的东西了。如果操作系统的9大核心对象已经能熟练操作。ring3级通关，那么就该进阶了。进入协议级吧。把自己的应用从单机上扩展到网络上去。同时关注开源项目，去开源项目中找灵感。协议级通关了就向上进入算法级吧。再向上我自己水平有现，我自己也不知道了。压制自己做一线程序员吧。别去做什么项目经理、产品经理之类的分散精力。程序员这个职业值得做一辈子。老子们这槽70后都还没死，评什么说程序员吃的是青春饭。
Re: linustd 2012-11-30 09:27发表 [回复]

回复boneheart：幼稚, 小农思想.
找你这个说法, 所有程序员都是往底层发展了? 岁数大的程序员都懂驱动开发 ? 都搞协议开发?>

首先, 驱动开发并不难, 难在接触的人少, 需要的人少. 协议开发也不复杂, 也难在没这样的机会.

人家Google, 就从HTML这样表面肤浅的地方开始, 如今造就了一个仅仅依靠简单的HTTP协议的帝国, 人家水平就不行了>

哥们, 你搞VC, Delphi, 可以看出你是搞单机的, 单机的时代已经过去, 集群的时代已经到来.
Re: yansandiego 2012-11-27 01:26发表 [回复]

回复boneheart：多谢高手指路。
Re: tuboxin 2012-11-21 16:59发表 [回复]

山外有山，人外有人！
135楼 csq168 2012-11-21 11:21发表 [回复]

我在大学，基本上相关的课程都有学过，但就是不知道串起来，想想其中的联系！看了楼主的文章，感触挺深的！
134楼 caihongxing198712 2012-11-21 10:33发表 [回复]

受教 受教！！真是冰冻三尺啊
133楼 gugunnon 2012-11-21 09:41发表 [回复]

非常感谢楼主，这对我一个刚准备进入这个行业的菜鸟的帮助太大了！！感谢+
132楼 hlpxm 2012-11-20 23:09发表 [回复]

真的很棒啊！
131楼 hlpxm 2012-11-20 23:08发表 [回复]

哇哦！学习学习！
130楼 FansUnion 2012-11-20 21:18发表 [回复]

加油总结！
129楼 yanguan55 2012-11-20 21:09发表 [回复]

学习了
128楼 ovti_junwu 2012-11-20 16:13发表 [回复]

这帖，盖顶
127楼 Yuko520999 2012-11-20 15:23发表 [回复]

学习了
126楼 davidcao007 2012-11-20 14:16发表 [回复]

学习了，支持下
125楼 kakaxihua 2012-11-20 12:03发表 [回复]

学习，膜拜中
124楼 gschen2010 2012-11-20 10:53发表 [回复]

学习了，谢谢博主无私分享。
123楼 xing301lu 2012-11-20 10:09发表 [回复]

学习了，谢谢楼主和我们分享这些心得
122楼 john19861121 2012-11-20 09:47发表 [回复]

感谢分享
121楼 geniuseoe2012 2012-11-20 09:36发表 [回复]

我的体会是，一本几百页的书，你应该花1,2小时就能过一遍，最好是20分钟到40分钟就能过完
弱弱的问一句，事一目十行的过一遍么？
Re: BinaryTreeEx 2012-11-20 17:05发表 [回复]

回复geniuseoe2012：这个解释全了又要写上一段了，有机会再说吧。但是至少你不会马上用的你可以不看。
Re: go_and_see 2012-11-20 14:52发表 [回复]

引用“geniuseoe2012”的评论：
我的体会是，一本几百页的书，你应该花1,2小时就能过一遍，最好是20分钟到40分钟就能过完
弱弱的问...


估计他说的是工具书吧，如果涉及到原理层次的东西，用的时候再去翻恐怕来不及了。BTW，如果是工具书，依我看根本没必要买，在网上找对应的资源即可。
Re: luozhi3527 2012-11-20 17:57发表 [回复]

回复go_and_see：看目录就可以了，如果有觉得值得看的就过去看一下，完了再回到目录，哈哈。
120楼 yinqunjun 2012-11-20 09:33发表 [回复]

我和楼主差不多 除了foxbase 其他的语言都至少做过一个项目 但是语言单中没有java ，原因很多 有的公司招java 看我没做过就不要，久而久之 我自己也不投java开发了，所以是否要学习java 矛盾中，目前对Go很感兴趣。学习那么多语言，我主要是一个目的，就是能看懂别人的代码，并且转换成自己喜欢的语言。
119楼 蛊惑精灵 2012-11-19 23:55发表 [回复]

学习了，谢谢楼主和我们分享这些心得。
118楼 bigwater101 2012-11-19 23:45发表 [回复]

感觉却是自己的真知灼见，有些人一般是叫人学这学那的，这位有十八年经验的，反而就人少学。估计是贵在经验的观点。不过我个人认为只要有时间，愿意看书的，就应该看。
117楼 returnc 2012-11-19 13:59发表 [回复]

这贴，得顶！
116楼 yjiyjige 2012-11-19 13:56发表 [回复]

受教了！
115楼 huangminqiang_Go 2012-11-19 11:59发表 [回复]

支持楼主，老鸟！
114楼 wtangao1 2012-11-19 08:07发表 [回复]

获益匪浅，感谢博主
113楼 hight789 2012-11-18 18:13发表 [回复]

研究的真实透彻，有心人
112楼 feifei12021 2012-11-18 15:12发表 [回复]

学习牛人的经验，帮助自己，提高自己。
111楼 专注web开发 2012-11-18 09:44发表 [回复]

好文，学习了
110楼 wuxunfeng 2012-11-17 23:54发表 [回复]

18年的老鸟，总结出来的，很像培训机构老师说的。
Re: BinaryTreeEx 2012-11-18 06:57发表 [回复]

回复wuxunfeng：我不是培训机构的，我为这个公司工作：http://www.WideUnion.com。全职的在职程序员，没有兼职任何其他工作。
Re: 淡蓝苍穹 2012-11-19 11:07发表 [回复]

回复BinaryTreeEx：这个公司... ...要是这么说我读完这篇文章觉得你屈才了。
Re: awsqsh 2012-11-19 22:41发表 [回复]

回复leo__lee：人家自己开的公司。。我很看好。。并且支持博主。。

建议优化下数据库 百度“广联科技”，出来的内容，，似乎很难和你公司联系起来。

加油。现在公司的用的软件还基本都是国外的，国人加油啊。
Re: BinaryTreeEx 2012-11-20 17:10发表 [回复]

回复awsqsh：公司不是我的，我是在打工。感谢你的建议，一直在盘算着把这个事情做起来。
Re: 淡蓝苍穹 2012-11-20 10:43发表 [回复]

回复awsqsh：貌似不是吧，博主说的是我为这家公司工作。所以应该不是博主开的。而且这个公司说的最核心程序员项目经验20年应该就是博主把。
Re: BinaryTreeEx 2012-11-19 19:36发表 [回复]

回复leo__lee：这公司怎么了，不好么？
Re: 淡蓝苍穹 2012-11-26 14:15发表 [回复]

回复BinaryTreeEx：请问你文章中提及的其中一本书是：
《用于面向对象的设计和分析方法》Joey George 
吗？
Re: 淡蓝苍穹 2012-11-20 10:43发表 [回复]

回复BinaryTreeEx：不太清楚，我只是觉得你应该去更牛的公司吧... ...
109楼 tdw1991 2012-11-17 18:25发表 [回复]

获益匪浅，感谢博主
108楼 yohida 2012-11-16 17:38发表 [回复]

看着很不错，决定实践一下
107楼 skymojo1 2012-11-16 17:11发表 [回复]

受教了，学无止境，分享经验，无私奉献。
楼主不但技术好，人品也赞，保持上进。
106楼 Legend500 2012-11-16 15:28发表 [回复]

楼主可能很有水平，但是这篇文章很一般
105楼 Kevin_Taylor 2012-11-16 14:41发表 [回复]

听君一席话，少读十本书。
Re: ymnets 2012-12-27 14:39发表 [回复]

回复jiayouxjh：那你阅读后也有10年经验了
Re: heywanglei 2012-11-19 13:22发表 [回复]

回复jiayouxjh：牛
104楼 BeyondVincent 2012-11-15 22:54发表 [回复]

期待后续
103楼 z2357 2012-11-15 21:50发表 [回复]

30岁才摸到键盘，34岁开发开发工作，一个通常认为开发人员退役的年龄。今年第9年了，还在继续开发。
gof的设计模式，两年中看了30遍，不相信看不懂。有一天发现突然都可以理解了，再不看了。
Re: applezhang1987 2012-11-22 13:10发表 [回复]

回复z2357：看了你的话 很有感触 30遍 觉得要学习 自我介绍 今年大学毕业 在一家软件公司做项目实施 但是大学混日子 现在发现什么都不会 都要学过
今天刚申请的账号 表示向你学习
Re: linustd 2012-11-16 18:58发表 [回复]

回复z2357：突然理解的时候，　就是发觉那些模式没有用的时候．

反正别人不知道，　我现在觉得我会的东西越来越少了，　连简历都不知道该写什么了．

设计模式是融汇于平常和细微之处，　高手不是代码里到处都有很好的模式　，而是类似于黄金分割点一样，　用的恰到好处，　学好设计模式不难，　难的是如何该用的时候用，　不该用的时候不用．

另外本人认为软件开发是一个系统工程，　绝不是一两个人自认为自己水平高，在项目里展示自己编程水平的地方．这样的自以为是高手的鸟人，简直是害群之马，　只看到了自己那点小小的井口，缺乏大局观和整体观．

宁可让代码和新手那样简单低级，　也不能让一些没境界的自认为自己高手的人在那里个人表现．
Re: z2357 2012-11-18 12:24发表 [回复]

回复linustd：你的境界更高一层。的确，对于开发人员来说，软件应该容易理解，容易维护。不必要的过多的技巧反而增加了这方面的难度。
102楼 edward_0608 2012-11-15 18:26发表 [回复]

我本科学机械的，研究生本来也是做机械的，但是学校做的东西都比较前沿，都是要编程实现的，于是接触了计算机的一些课程，然后开始写程序，然后一发不可收拾，深深地爱上了些程序，现在找的工作也是写程序相关的，一直都想知道如何才能学好计算机，这篇文章很让我受启发，很感谢博主！！
101楼 xiaoH1314 2012-11-15 18:18发表 [回复]

支持一下
100楼 fang1229 2012-11-15 15:56发表 [回复]

楼主说得好 经验值得学习
99楼 sunzhenhua2012 2012-11-15 13:00发表 [回复]

学习啦，不错，十八年总结。十年磨一剑。
98楼 ronaldo 2012-11-15 11:10发表 [回复]

18年，真是NB
97楼 ha_ha_ha_ha_123 2012-11-15 10:35发表 [回复]

mark
96楼 sdaxiang 2012-11-15 09:43发表 [回复]

学习
95楼 qq329445867 2012-11-15 09:35发表 [回复]

学习了~~~~
94楼 aofengdaxia 2012-11-15 09:07发表 [回复]

很受益
查看更多评论
您还没有登录,请[登录]或[注册]
* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场

个人资料
  
BinaryTreeEx
 
访问：100038次
积分：1389分
排名：第6208名
原创：15篇转载：0篇译文：0篇评论：409条
文章搜索

文章存档
2013年03月(1)
2013年01月(1)
2012年11月(1)
2012年09月(2)
2012年08月(1)
展开
阅读排行
十八年开发经验分享（一）学习篇(39208)
十八年开发经历小结(30966)
十八年开发经验分享（二）问题解决篇（上）(10543)
十八年开发经验分享（三）问题解决篇（中）(7954)
一道解决的非常漂亮的算法题(2042)
一道笔试题(1790)
面向对象的数据库开发--再论ORM(1390)
EntityModelStudio系列教程(1257)
对棋盘完美覆盖问题证明过程的质疑及其解决(807)
与狼共舞(787)
评论排行
十八年开发经历小结(163)
十八年开发经验分享（一）学习篇(159)
十八年开发经验分享（二）问题解决篇（上）(45)
十八年开发经验分享（三）问题解决篇（中）(21)
一道笔试题(14)
一道解决的非常漂亮的算法题(5)
EntityModelStudio系列教程(1)
面向对象的数据库开发--再论ORM(1)
收获极大的一个错误(0)
与狼共舞(0)
推荐文章

最新评论
十八年开发经验分享（三）问题解决篇（中）
piananyiyu_zyq: 学习学习
十八年开发经验分享（三）问题解决篇（中）
BinaryTreeEx: @ziyaziya05:else里面就是一个赋值语句，让状态回到第一个状态，别的不用做了。
十八年开发经验分享（三）问题解决篇（中）
jiang3481: 学习
十八年开发经验分享（三）问题解决篇（中）
ziyaziya05: @BinaryTreeEx:"比如，玩家连续三次点对，但是第四次点击错误的话，那么第五次点击时比较的...
一道笔试题
Mario_Shaiya: @yleek:悲剧，端菜了。
十八年开发经历小结
hgyijianfeitian: @goldenhawking:这个就太牛逼了
十八年开发经验分享（二）问题解决篇（上）
wgq2633: 很受用，感谢！
十八年开发经验分享（三）问题解决篇（中）
xuemingwei: 真的很有用 让我这位新人可以借鉴借鉴
十八年开发经验分享（二）问题解决篇（上）
墨香: 博主用20到40分钟阅读一本书.我却要用20分钟读完博主的一篇博文.读得比较细,如果快点10分钟估计...
十八年开发经验分享（三）问题解决篇（中）
HUSANTAO: 感谢前辈无私分享。
公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告
京 ICP 证 070598 号
北京创新乐知信息技术有限公司 版权所有
世纪乐知(北京)网络技术有限公司 提供技术支持
江苏乐知网络技术有限公司 提供商务支持
 联系邮箱：webmaster(at)csdn.net
Copyright © 1999-2012, CSDN.NET, All Rights Reserved 

