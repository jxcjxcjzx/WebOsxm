您还未登录！|登录|注册|帮助首页业界移动云计算研发论坛博客下载
更多
BinaryTreeEx的专栏
目录视图摘要视图订阅
博客专家信息更新登记表        社区专家谈 12306      CSDN社区程序员回乡见闻活动火爆开始！ 
专访陈勇： 敏捷开发现状及发展之路        “传统商家移动化之路”会议        2013年全国百所高校巡讲讲师招募
 一道笔试题
2007-04-26 11:17 1789人阅读 评论(14) 收藏 举报
算法测试
题目是这样的：判断一个小于1000的正整数是否为素数。

素数的定义就不说了，以下直接分析解法，毕竟是在写与专业相关的东西，是给本专业的人看得，所以看的人应该有点基础吧？！求素数的问题是一个数学上的难题，这是常识，但是本题目限制了最大范围是在1000以内，所以就可以尝试找出一个足够好的解了。首先给出一个最普通的解，就是取需要判断的数的平方根为上限，然后从2开始循环除以这个需要判断的数，如果可以被整除那么就不是素数，否则就是素数。这个解法非常的普通，如果是直接写程序，应该还说得过去，但是作为选拔人才竞争职位的笔试题这样的解法是说不过去的。应该充分利用题目中的限制条件给出一个更好的解。
 
首先考虑的是虑除偶数，这样需要处理的数就少了一半。一开始先判断这个数是否为偶数，如果是那么就是非素数，否则再开始循环按个除。但是这个时候除数不需要偶数了，于是循环的次数可以减半，这是一个能很明显提高效率的办法。然后接着考虑，利用判断偶数去掉了一半，那么能不能利用是否为3整除，再去掉三分之一呢？这个当然是可以的。如此不断的想下去，就可以设法去掉四分之一，五分之一...。但是，显然越往下作效率提高的程度就越不明显了。因为对于被三整除的数来说由于有些数字是可以同时被2整除的，所以实际上减少的循环次数没有达到三分之一。基于同样的理由后面减少的次数会比期望的更少。而且还有一个问题是考虑越多循环递增的控制越不好做。我想到这里认为，好像减半已经是可以达到的足够好的解了。那么事实真的如此么？赫赫，当然不是，否则就不写这篇日志了。通过进一步的考虑我发现还有一个效率更惊人的做法。
 
我是这么想的，如果一个数不能被2整除那么以后任何2的倍数都不能整除这个数（这个非常容易理解，不懂得就请不要看这篇日志了）；不能被3整除那么以后任何3的倍数都不能整除这个数；...。照这个思路想下去，如果一旦这个数能被整除，那么这个除数是一个什么样的数字呢？这个除数显然不能被2，3，4...等等所有比它小的数字整除，这个结果也很显然。好，那么这个事实恰好是素数的定义。也就是说我们只需要用素数来作除数就可以了。下面的问题是这个结论正确么，有没有办法来验证呢？写个程序穷举？显然很愚蠢，这样做的话就一点味道也没有了，简直是在侮辱这道题目。正确的做法是寻求证明，我们应该用证明的办法来保证这个算法是正确的。这个证明其实不难，因为任何一整数都可以被写成2（当为偶数时需要），和其它素数的幂指数连乘的形式（这是中学里的知识，不明白的自己去补课），如果这些因子中的任何一个都不能整除该数时，那么这个数就是素数。赫赫，这个证明简洁吧！好了，算法的正确性得到证明了，接着就可以干了。由于题目限制输入的数小于1000，所以我们需要找出的所有可以当除数的序列是：2，3，5，7，11，13，17，19，23，29，31。那么大于31的素数需要考虑么？当然不用，因为大于31的最小素数已经大于1000的平方根了，我们是不需要除的。
 
下面是源代码，当然还有改进的余地，但是效果已经不明显了，所以放弃了。顺便说一句这些代码我没有测试过阿，有错不管：
// 返回1是素数，否则不是
int IsPrimeNumber(int nNumber)
{
     int nDivide[] = {3,5,7,11,13,17,19,23,29,31};
 
     // 如果这个数不在要求的范围内，或者是一个偶数，那么就不是素数
     if (nNumber <= 0 || nNumber >= 1000 || nNumber mod 2 == 0)
          return 0;
     for (int i = 0; i < 10; i++)
     {
          if (nNumber == nDivide[i])             // 如果恰好等于素数，那么这个数就是素数了
                return 1;
          if (nNumber mod nDivide[i] == 0)    // 如果被整除就不是素数
                return 0;
     }
    
     return 1;                                         // 没有被整除那么就是素数
}
 
就是这样的代码，居然还说我写的不足够好，而得不到职位，那帮人的素质我就不说了。 
分享到： 
下一篇：一道解决的非常漂亮的算法题

查看评论
6楼 yansandiego 2012-11-28 01:06发表 [回复]

能在代码间解释一下为什么只选到31 就好了, //大于31的最小素数已经大于1000的平方根了. 
仅凭此道题不录用你, 只能说那职位不适合你!
5楼 remi362411 2012-11-16 17:23发表 [回复]

楼主在笔试时想太多了，面试官不能理解你高深的思想
Re: BinaryTreeEx 2012-11-16 17:53发表 [回复]

回复remi362411：题目是可以带回去做的，给的时间是两天，所以压力很大的
Re: remi362411 2012-11-16 21:04发表 [回复]

回复BinaryTreeEx：就我自己参加笔试的经验来说，很少有面试官会考虑这么深刻的，一般都只要求写最基本最经典的算法
4楼 litojoe 2012-11-15 11:18发表 [回复]

我有一些疑问，的确您这么做效率很高，不过如果范围变大，那么你不得不维护你的素数数组。根本问题还是没有解决。
Re: BinaryTreeEx 2012-11-16 17:53发表 [回复]

回复litojoe：笔试题就不考虑这么多了，再说是算法类的题目，所这些就不会考虑了
3楼 idreams2 2012-10-01 08:52发表 [回复]

写的不错。这种方法好像叫什么筛选法，比较的经典！
2楼 dumpling617 2012-03-21 14:01发表 [回复]

楼主的算法复杂度在1000以内的素数一次判定来说算比较低的了。估计面试官觉得楼主的代码表意很奇怪吧，特判写的不够精炼，在楼主的表意里，返回值类型也设置的很奇怪。
1楼 sunyuntao 2007-04-26 11:40发表 [回复]

那么2是不是素数?
我没读过几年书.
Re: damingg 2012-09-25 09:31发表 [回复]

回复sunyuntao：犀利，呵呵，不过对于面试题这样的来说，漏掉一个何妨？软件不允许有bug？
Re: archdivil 2013-01-07 09:39发表 [回复]

回复damingg：这个。。。有点牵强了吧，如果是银行系统里有关金额的数值不就悲剧了。。。
Re: damingg 2013-01-09 15:00发表 [回复]

回复archdivil：银行系统，确实有很强的要求，不过人家是靠的牛b的质量保证团队，而不是要求程序员绝对不能忘记一个值。
Re: yleek 2013-01-08 10:20发表 [回复]

回复archdivil：招聘就是这样啊~不可能只招牛人~就像一家饭馆，不可能全是厨师啊~总得花一两千块钱雇点端菜的吧
Re: Mario_Shaiya 昨天 23:44发表 [回复]

回复yleek：悲剧，端菜了。
您还没有登录,请[登录]或[注册]
* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场

个人资料
  
BinaryTreeEx
 
访问：100019次
积分：1389分
排名：第6208名
原创：15篇转载：0篇译文：0篇评论：409条
文章搜索

文章存档
2013年03月(1)
2013年01月(1)
2012年11月(1)
2012年09月(2)
2012年08月(1)
展开
阅读排行
十八年开发经验分享（一）学习篇(39207)
十八年开发经历小结(30964)
十八年开发经验分享（二）问题解决篇（上）(10540)
十八年开发经验分享（三）问题解决篇（中）(7942)
一道解决的非常漂亮的算法题(2042)
一道笔试题(1789)
面向对象的数据库开发--再论ORM(1390)
EntityModelStudio系列教程(1257)
对棋盘完美覆盖问题证明过程的质疑及其解决(807)
与狼共舞(787)
评论排行
十八年开发经历小结(163)
十八年开发经验分享（一）学习篇(159)
十八年开发经验分享（二）问题解决篇（上）(45)
十八年开发经验分享（三）问题解决篇（中）(21)
一道笔试题(14)
一道解决的非常漂亮的算法题(5)
EntityModelStudio系列教程(1)
面向对象的数据库开发--再论ORM(1)
收获极大的一个错误(0)
与狼共舞(0)
推荐文章

最新评论
十八年开发经验分享（三）问题解决篇（中）
piananyiyu_zyq: 学习学习
十八年开发经验分享（三）问题解决篇（中）
BinaryTreeEx: @ziyaziya05:else里面就是一个赋值语句，让状态回到第一个状态，别的不用做了。
十八年开发经验分享（三）问题解决篇（中）
jiang3481: 学习
十八年开发经验分享（三）问题解决篇（中）
ziyaziya05: @BinaryTreeEx:"比如，玩家连续三次点对，但是第四次点击错误的话，那么第五次点击时比较的...
一道笔试题
Mario_Shaiya: @yleek:悲剧，端菜了。
十八年开发经历小结
hgyijianfeitian: @goldenhawking:这个就太牛逼了
十八年开发经验分享（二）问题解决篇（上）
wgq2633: 很受用，感谢！
十八年开发经验分享（三）问题解决篇（中）
xuemingwei: 真的很有用 让我这位新人可以借鉴借鉴
十八年开发经验分享（二）问题解决篇（上）
墨香: 博主用20到40分钟阅读一本书.我却要用20分钟读完博主的一篇博文.读得比较细,如果快点10分钟估计...
十八年开发经验分享（三）问题解决篇（中）
HUSANTAO: 感谢前辈无私分享。
公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告
京 ICP 证 070598 号
北京创新乐知信息技术有限公司 版权所有
世纪乐知(北京)网络技术有限公司 提供技术支持
江苏乐知网络技术有限公司 提供商务支持
 联系邮箱：webmaster(at)csdn.net
Copyright © 1999-2012, CSDN.NET, All Rights Reserved 

