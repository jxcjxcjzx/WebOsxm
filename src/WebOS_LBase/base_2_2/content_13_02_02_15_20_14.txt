
首页资讯精华论坛问答博客专栏群组更多 ▼

 
您还未登录 !登录注册




su1216


博客
微博
相册
收藏
留言
关于我




.




android安全问题（二） 程序锁
博客分类： android
 
 .


 
 
导读：本文介绍如何实现对应用加锁的功能，无须root权限
 
 
 
某些人有时候会有这样一种需求，小A下载了个软件，只是软件中的美女过于诱惑与暴露，所以他不想让别人知道这是个什么软件，起码不想让别人打开浏览。而这款软件又没有锁，任何人都可以打开，肿么办呢？如果打开它的时候需要输入密码，那该多好阿！于是，程序锁这种应用就产生了
 
 
 
程序锁不是最近才有的，很久之前android就有这种apk了
 
这一期我们来苛刻如何实现程序加锁功能
 
 
 
首先，我们先明确一下我们要做的程序具有什么功能
 
1可以选择需要加锁的程序
 
2可以设置密码
 
3可以关闭程序锁
 
 
 
这里作为演示，我们就尽量简化代码
 
我们先说最关键的部分
 
最关键的地方在于：当用户打开一个应用的时候，怎么弹出密码页面？
 
这里没有什么太好的办法，需要扫描task中的topActivity
 
首先，我们先获得运行的task
 


Java代码  
1.mActivityManager = (ActivityManager) context.getSystemService("activity");  
2.//mActivityManager.getRunningTasks(1);//List<RunningTaskInfo>  
 
getRunningTasks方法返回一个List，我们来看看这个List是什么
 
getRunningTasks 写道
 
Return a list of the tasks that are currently running, with the most recent being first and older ones after in order.
…… 
 
返回的List是有序的，第一个是最近的，所以我们取出第一个即可，然后得到此task中的最上层的Activity
 


Java代码  
1.ComponentName topActivity = mActivityManager.getRunningTasks(1).get(0).topActivity;  
 
topActivity居然是ComponentName类型，下面的事情就好办了，获得包名和类名
 


Java代码  
1.ComponentName topActivity = mActivityManager.getRunningTasks(1).get(0).topActivity;  
2.String packageName = topActivity.getPackageName();  
3.String className = topActivity.getClassName();  
4.Log.v(TAG, "packageName" + packageName);  
5.Log.v(TAG, "className" + className);  
6.  
7.if (testPackageName.equals(packageName)  
8.        && testClassName.equals(className)) {  
9.    Intent intent = new Intent();  
10.    intent.setClassName("com.example.locktest", "com.example.locktest.PasswordActivity");  
11.    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);  
12.    mContext.startActivity(intent);  
13.}  
 
 
 
由于我没有选择程序这一步，所以我就固定一个应用做测试，这里选择的是htc的note应用
 


Java代码  
1.String testPackageName = "com.htc.notes";  
2.String testClassName = "com.htc.notes.collection.NotesGridViewActivity";  
 
 
 
下面我们该想，这段代码何时执行了
 
打开一个应用程序，系统不会发送广播，我们无法直接监听，所以这里我们采取定时扫描的策略
 
这里只是一个简单的实现，之后我们再讨论优化
 
我们采取每秒中检查一次task的方式，这里使用Timer吧，用Handler也一样可以实现
 


Java代码  
1.private Timer mTimer;  
2.private void startTimer() {  
3.    if (mTimer == null) {  
4.        mTimer = new Timer();  
5.        LockTask lockTask = new LockTask(this);  
6.        mTimer.schedule(lockTask, 0L, 1000L);  
7.    }  
8.}  
 
到这里，其实我们的关键代码就已经完成了
 
 
 
 
 
下面贴出完整带代码，注意：我们只关注弹出锁界面这部分，其他部分自行实现（比如文章末尾提到的）
 
Task，负责检查task，并在适当的时候弹出密码页面
 
 
 


Java代码  
1.public class LockTask extends TimerTask {  
2.    public static final String TAG = "LockTask";  
3.    private Context mContext;  
4.    String testPackageName = "com.htc.notes";  
5.    String testClassName = "com.htc.notes.collection.NotesGridViewActivity";  
6.  
7.    private ActivityManager mActivityManager;  
8.  
9.    public LockTask(Context context) {  
10.        mContext = context;  
11.        mActivityManager = (ActivityManager) context.getSystemService("activity");  
12.    }  
13.  
14.    @Override  
15.    public void run() {  
16.        ComponentName topActivity = mActivityManager.getRunningTasks(1).get(0).topActivity;  
17.        String packageName = topActivity.getPackageName();  
18.        String className = topActivity.getClassName();  
19.        Log.v(TAG, "packageName" + packageName);  
20.        Log.v(TAG, "className" + className);  
21.  
22.        if (testPackageName.equals(packageName)  
23.                && testClassName.equals(className)) {  
24.            Intent intent = new Intent();  
25.            intent.setClassName("com.example.locktest", "com.example.locktest.PasswordActivity");  
26.            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);  
27.            mContext.startActivity(intent);  
28.        }  
29.    }  
30.}  
 
 
 
LockService，负责执行定时任务，取消任务等
 


Java代码  
1.public class LockService extends Service {  
2.    private Timer mTimer;  
3.    public static final int FOREGROUND_ID = 0;  
4.  
5.    private void startTimer() {  
6.        if (mTimer == null) {  
7.            mTimer = new Timer();  
8.            LockTask lockTask = new LockTask(this);  
9.            mTimer.schedule(lockTask, 0L, 1000L);  
10.        }  
11.    }  
12.  
13.    public IBinder onBind(Intent intent) {  
14.        return null;  
15.    }  
16.  
17.    public void onCreate() {  
18.        super.onCreate();  
19.        startForeground(FOREGROUND_ID, new Notification());  
20.    }  
21.  
22.    public int onStartCommand(Intent intent, int flags, int startId) {  
23.        startTimer();  
24.        return super.onStartCommand(intent, flags, startId);  
25.    }  
26.  
27.    public void onDestroy() {  
28.        stopForeground(true);  
29.        mTimer.cancel();  
30.        mTimer.purge();  
31.        mTimer = null;  
32.        super.onDestroy();  
33.    }  
34.}  
 
 
 
MainActivity，测试用，作为应用入口，启动service（产品中，我们可以在receiver中启动service）。
 


Java代码  
1.public class MainActivity extends Activity {  
2.  
3.    public void onCreate(Bundle savedInstanceState){  
4.        super.onCreate(savedInstanceState);  
5.        startService(new Intent(this, LockService.class));  
6.    }  
7.}  
 
 
 
PasswordActivity，密码页面，很粗糙，没有核对密码逻辑，自行实现
 
记得重写onBackPressed函数，不然按返回键的时候……你懂的
 


Java代码  
1.public class PasswordActivity extends Activity {  
2.  
3.    private static final String TAG = "PasswordActivity";  
4.    Button okButton;  
5.    EditText passwordEditText;  
6.    private boolean mFinish = false;  
7.      
8.    @Override  
9.    protected void onCreate(Bundle savedInstanceState) {  
10.        super.onCreate(savedInstanceState);  
11.        setContentView(R.layout.password);  
12.        passwordEditText = (EditText) findViewById(R.id.password);  
13.         okButton = (Button) findViewById(R.id.ok);  
14.         okButton.setOnClickListener(new View.OnClickListener() {  
15.            public void onClick(View v) {  
16.                String password = passwordEditText.getText().toString();  
17.                Log.v(TAG, "password" + password);  
18.                mFinish = true;  
19.                finish();  
20.            }  
21.        });  
22.    }  
23.  
24.    public void onBackPressed(){}  
25.      
26.    public void onPause(){  
27.        super.onPause();  
28.        if(!mFinish){  
29.            finish();  
30.        }  
31.    }  
32.}  
 
 
 
xml这里就不贴了，记得添加权限
 


Xml代码  
1.<uses-permission android:name="android.permission.GET_TASKS"/>  
 
 
 
 
 
 
 
关于程序的其他部分，这里只做简要说明
 
选择应用对其进行加锁部分
 
1列出系统中所有程序（你也可以自由发挥，比如过滤掉原始应用）
 
2选择，然后存入数据库（当然，最好也有取消功能，记得从数据库中删除数据）
 
程序锁总开关
 
可以使用sharedPreference，设置一个boolean开关
 
 
 
 
 
现在，当我想要打开htc的note应用的时候，就会弹出密码页面当我解锁，按home会回到桌面，长按home，点击note，还是会弹出密码框
 
因为是每秒检查一次，所以可能会有一点点延迟，你可以设置为500毫秒，但是越频繁，占用资源就越多
 
 
 
上面的代码我取得topActivity后检查了其包名行和类名，所以只有当打开指定的页面的时候，才会弹出密码锁
 
比如我对Gallery应用加密了，但是用户正在编辑短信，这时候它想发彩信，于是他通过短信进入到了Gallery……
 
对于某些用户的某些需求来说，这是不能容忍的，这时，我们只需简单修改下判断逻辑即可：只检查包名，包名一致就弹出密码锁，这样就完美了
 
 
 
程序锁我就分析到这里
 
最后一句
 
当使用程序锁的时候，你长按home，发现程序锁也出现在“最近的任务”中，肿么办……给此activity设置android:excludeFromRecents="true"即可
 







android手机root后的安全问题 （一）
 
android手机root后的安全问题 （二）
 
android手机root后的安全问题 （三）
 
android手机root后的安全问题 （四）
 
 
 


android安全问题（一） 静音拍照与被拍
 
android安全问题（二） 程序锁
 
android安全问题（三） 钓鱼程序
 



 
 
 
 
请大家不要用root的手机随意下载软件，更不要以任何借口制造任何病毒！
 
 
 
 
 
转贴请保留以下链接
 
本人blog地址
 
http://su1216.iteye.com/
 
http://blog.csdn.net/su1216/
 


1 
顶

0 
踩.

分享到： 
.

android安全问题（三） 钓鱼程序| android安全问题（一） 静音拍照与被拍

2012-10-16 18:05
浏览 2027
评论(15)
分类:移动开发
相关推荐


评论


15 楼 su1216 2013-01-04   


tjwink 写道

起码思路不错啊，1楼有种你就写个更好的出来

实际读取log也是要轮训的 

14 楼 tjwink 2013-01-04   

起码思路不错啊，1楼有种你就写个更好的出来
 

13 楼 kfc_davy 2012-10-18   


引用

好吧，如果是读取log，那可是要一直操作io的
系统工具类应用应该比这个耗电多了
经常需要刷新的widget也是很耗电的


这些没有深入看过，也不发言了，呵呵。和你讨论的不错，：）
 

12 楼 su1216 2012-10-18   


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。


说实话，测试耗电，我这没有测试仪器和测试机，android提供的耗电信息不是很可靠
至于程序锁软件，正点工具箱就是这么轮训的
腾讯的产品我没有看，但是从我测试结果来看，也有我文中提到的“bug”，或是说用户体验问题，所以我猜测它很可能也是这么轮训的

您是否可以说一下你的了解，我也希望学习下别人的想法
当然，是在手机没有root的情况下，如果需要root，也可以说说

最直观的测试就是使用这软件。系统自带耗电分析可以作为参考。
可以考虑下后台接收logcat的日志信息，分析是否开启了某个应用程序。这样也能保证实时性。

另外有些大公司的软件可能刚推某个功能也不一定最优。记得360最早的网络监控或者内存cpu监控小浮窗，本身就耗资源，耗费电 ，呵呵。个人意见。




我觉得接收log更费电，所以我才没有在这里写出这个方法
接收log你需要保持io操作，我觉得还不如我每秒检查一次
我打算在第四期的时候介绍你说的这种方法，病毒可以利用这个防止卸载，或者应用利用这个在卸载软件的时候弹出反馈意见的对话框


呵呵，没专门比较过，所以也没有话语权。这类应用，后面有程序在跑总是怪怪的，况且安卓手机电池本来就弱。



有几个应用没有后台服务？一般是小的不能再小的应用才不需要后台服务
第三方应用起码都内置广告，还经常有数据传输，系统工具类应用会对手机各个方面监听，更耗电
每秒检查一次根本不算个事情，你考虑的不是没有道理，但是这里似乎显得有些没有必要

我倒不是很赞同，后台服务起着，但并不一定持续的（比如轮训）干一些事。
你说的后台传输，大多是在某个定点触发，并不是长时间不间断的。至于工具类对手机的监听那也要看怎么是实现发，大多数的监听都是事件驱动，完全是省电的行为。

每秒轮训的结果就是对资源的占用，没记错的话Sleep(1000),也是损耗资源的，很多情况下对于定时的一些操作，譬如说上报数据，都是通过用户某个动作触发或者定时上报。


好吧，如果是读取log，那可是要一直操作io的
系统工具类应用应该比这个耗电多了
经常需要刷新的widget也是很耗电的 

11 楼 kfc_davy 2012-10-18   


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。


说实话，测试耗电，我这没有测试仪器和测试机，android提供的耗电信息不是很可靠
至于程序锁软件，正点工具箱就是这么轮训的
腾讯的产品我没有看，但是从我测试结果来看，也有我文中提到的“bug”，或是说用户体验问题，所以我猜测它很可能也是这么轮训的

您是否可以说一下你的了解，我也希望学习下别人的想法
当然，是在手机没有root的情况下，如果需要root，也可以说说

最直观的测试就是使用这软件。系统自带耗电分析可以作为参考。
可以考虑下后台接收logcat的日志信息，分析是否开启了某个应用程序。这样也能保证实时性。

另外有些大公司的软件可能刚推某个功能也不一定最优。记得360最早的网络监控或者内存cpu监控小浮窗，本身就耗资源，耗费电 ，呵呵。个人意见。




我觉得接收log更费电，所以我才没有在这里写出这个方法
接收log你需要保持io操作，我觉得还不如我每秒检查一次
我打算在第四期的时候介绍你说的这种方法，病毒可以利用这个防止卸载，或者应用利用这个在卸载软件的时候弹出反馈意见的对话框


呵呵，没专门比较过，所以也没有话语权。这类应用，后面有程序在跑总是怪怪的，况且安卓手机电池本来就弱。



有几个应用没有后台服务？一般是小的不能再小的应用才不需要后台服务
第三方应用起码都内置广告，还经常有数据传输，系统工具类应用会对手机各个方面监听，更耗电
每秒检查一次根本不算个事情，你考虑的不是没有道理，但是这里似乎显得有些没有必要

我倒不是很赞同，后台服务起着，但并不一定持续的（比如轮训）干一些事。
你说的后台传输，大多是在某个定点触发，并不是长时间不间断的。至于工具类对手机的监听那也要看怎么是实现发，大多数的监听都是事件驱动，完全是省电的行为。

每秒轮训的结果就是对资源的占用，没记错的话Sleep(1000),也是损耗资源的，很多情况下对于定时的一些操作，譬如说上报数据，都是通过用户某个动作触发或者定时上报。
 
10 楼 su1216 2012-10-18   


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。


说实话，测试耗电，我这没有测试仪器和测试机，android提供的耗电信息不是很可靠
至于程序锁软件，正点工具箱就是这么轮训的
腾讯的产品我没有看，但是从我测试结果来看，也有我文中提到的“bug”，或是说用户体验问题，所以我猜测它很可能也是这么轮训的

您是否可以说一下你的了解，我也希望学习下别人的想法
当然，是在手机没有root的情况下，如果需要root，也可以说说

最直观的测试就是使用这软件。系统自带耗电分析可以作为参考。
可以考虑下后台接收logcat的日志信息，分析是否开启了某个应用程序。这样也能保证实时性。

另外有些大公司的软件可能刚推某个功能也不一定最优。记得360最早的网络监控或者内存cpu监控小浮窗，本身就耗资源，耗费电 ，呵呵。个人意见。




我觉得接收log更费电，所以我才没有在这里写出这个方法
接收log你需要保持io操作，我觉得还不如我每秒检查一次
我打算在第四期的时候介绍你说的这种方法，病毒可以利用这个防止卸载，或者应用利用这个在卸载软件的时候弹出反馈意见的对话框


呵呵，没专门比较过，所以也没有话语权。这类应用，后面有程序在跑总是怪怪的，况且安卓手机电池本来就弱。



有几个应用没有后台服务？一般是小的不能再小的应用才不需要后台服务
第三方应用起码都内置广告，还经常有数据传输，系统工具类应用会对手机各个方面监听，更耗电
每秒检查一次根本不算个事情，你考虑的不是没有道理，但是这里似乎显得有些没有必要 

9 楼 kfc_davy 2012-10-18   


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。


说实话，测试耗电，我这没有测试仪器和测试机，android提供的耗电信息不是很可靠
至于程序锁软件，正点工具箱就是这么轮训的
腾讯的产品我没有看，但是从我测试结果来看，也有我文中提到的“bug”，或是说用户体验问题，所以我猜测它很可能也是这么轮训的

您是否可以说一下你的了解，我也希望学习下别人的想法
当然，是在手机没有root的情况下，如果需要root，也可以说说

最直观的测试就是使用这软件。系统自带耗电分析可以作为参考。
可以考虑下后台接收logcat的日志信息，分析是否开启了某个应用程序。这样也能保证实时性。

另外有些大公司的软件可能刚推某个功能也不一定最优。记得360最早的网络监控或者内存cpu监控小浮窗，本身就耗资源，耗费电 ，呵呵。个人意见。




我觉得接收log更费电，所以我才没有在这里写出这个方法
接收log你需要保持io操作，我觉得还不如我每秒检查一次
我打算在第四期的时候介绍你说的这种方法，病毒可以利用这个防止卸载，或者应用利用这个在卸载软件的时候弹出反馈意见的对话框


呵呵，没专门比较过，所以也没有话语权。这类应用，后面有程序在跑总是怪怪的，况且安卓手机电池本来就弱。 

8 楼 su1216 2012-10-18   


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。


说实话，测试耗电，我这没有测试仪器和测试机，android提供的耗电信息不是很可靠
至于程序锁软件，正点工具箱就是这么轮训的
腾讯的产品我没有看，但是从我测试结果来看，也有我文中提到的“bug”，或是说用户体验问题，所以我猜测它很可能也是这么轮训的

您是否可以说一下你的了解，我也希望学习下别人的想法
当然，是在手机没有root的情况下，如果需要root，也可以说说

最直观的测试就是使用这软件。系统自带耗电分析可以作为参考。
可以考虑下后台接收logcat的日志信息，分析是否开启了某个应用程序。这样也能保证实时性。

另外有些大公司的软件可能刚推某个功能也不一定最优。记得360最早的网络监控或者内存cpu监控小浮窗，本身就耗资源，耗费电 ，呵呵。个人意见。




正点工具箱的程序锁功能不是现在才有，至少一年前就有了 

7 楼 su1216 2012-10-18   


kfc_davy 写道


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。


说实话，测试耗电，我这没有测试仪器和测试机，android提供的耗电信息不是很可靠
至于程序锁软件，正点工具箱就是这么轮训的
腾讯的产品我没有看，但是从我测试结果来看，也有我文中提到的“bug”，或是说用户体验问题，所以我猜测它很可能也是这么轮训的

您是否可以说一下你的了解，我也希望学习下别人的想法
当然，是在手机没有root的情况下，如果需要root，也可以说说

最直观的测试就是使用这软件。系统自带耗电分析可以作为参考。
可以考虑下后台接收logcat的日志信息，分析是否开启了某个应用程序。这样也能保证实时性。

另外有些大公司的软件可能刚推某个功能也不一定最优。记得360最早的网络监控或者内存cpu监控小浮窗，本身就耗资源，耗费电 ，呵呵。个人意见。




我觉得接收log更费电，所以我才没有在这里写出这个方法
接收log你需要保持io操作，我觉得还不如我每秒检查一次
我打算在第四期的时候介绍你说的这种方法，病毒可以利用这个防止卸载，或者应用利用这个在卸载软件的时候弹出反馈意见的对话框 

6 楼 kfc_davy 2012-10-18   


su1216 写道


kfc_davy 写道


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。


说实话，测试耗电，我这没有测试仪器和测试机，android提供的耗电信息不是很可靠
至于程序锁软件，正点工具箱就是这么轮训的
腾讯的产品我没有看，但是从我测试结果来看，也有我文中提到的“bug”，或是说用户体验问题，所以我猜测它很可能也是这么轮训的

您是否可以说一下你的了解，我也希望学习下别人的想法
当然，是在手机没有root的情况下，如果需要root，也可以说说

最直观的测试就是使用这软件。系统自带耗电分析可以作为参考。
可以考虑下后台接收logcat的日志信息，分析是否开启了某个应用程序。这样也能保证实时性。

另外有些大公司的软件可能刚推某个功能也不一定最优。记得360最早的网络监控或者内存cpu监控小浮窗，本身就耗资源，耗费电 ，呵呵。个人意见。
 

5 楼 su1216 2012-10-18   


kfc_davy 写道


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。


说实话，测试耗电，我这没有测试仪器和测试机，android提供的耗电信息不是很可靠
至于程序锁软件，正点工具箱就是这么轮训的
腾讯的产品我没有看，但是从我测试结果来看，也有我文中提到的“bug”，或是说用户体验问题，所以我猜测它很可能也是这么轮训的

您是否可以说一下你的了解，我也希望学习下别人的想法
当然，是在手机没有root的情况下，如果需要root，也可以说说 

4 楼 kfc_davy 2012-10-18   


su1216 写道


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情

嘿嘿，先申明我没有恶意啊。

首先一秒轮训一次，你有没有试过？你可以尝试一下测一测耗电，譬如说使用2、3天看看效果。

至于一些关于程序锁的软件，至少就我了解来说，是可以实现程序锁的功能，但是不是你的这种方法。 

3 楼 su1216 2012-10-17   


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。


你可以看看下面两款软件
腾讯手机管家
正点工具箱


我的文章不是没有经过实践瞎想出来的 

2 楼 su1216 2012-10-17   


kfc_davy 写道

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。



市面上有这样的产品
这样写有什么问题吗？完全可以起到保护作用
你是觉得每秒轮训一次耗费资源还是觉得偶尔会闪过原应用界面，然后才显示密码页？
前者：没有必要担心，这点操作不至于消耗多少资源
后者，你可以改为0.5秒轮训一次，但是没有太多必要
我后一篇的钓鱼应用中，使用的是0.5秒轮训，作为病毒，它就不会担心资源这个事情 

1 楼 kfc_davy 2012-10-17   

醒醒。醒醒。这么做考虑过用户感受没，每秒轮训一次。这种方式也就写个Demo罢了。
 

发表评论

 您还没有登录,请您登录后再发表评论 






su1216
 
浏览: 65619 次
性别: 
来自: 北京



最近访客 更多访客>>




rimoer




zht19880706




heavensay




woyaowenzi
.

博客专栏
深入入门正则表达式（jav...
浏览量：6019.android手机的安全问...
浏览量：18362.

文章分类
■全部博客 (93)
■android (37)
■Unix & Linux 大学教程 (22)
■Linux命令行与shell脚本编程大全 (10)
■java (5)
■java多线程 (3)
■虚拟机 (7)
■设计模式 (1)
■正则表达式 (6)
■数据库 (1)
■其他 (1)
■转贴 (1)


社区版块
■我的资讯 (0)
■我的论坛 (70) 
■我的问答 (19)


存档分类
■2013-02 (1)
■2013-01 (5)
■2012-12 (7)
■更多存档...


评论排行榜
■android手机root后的安全问题 （二）
■android安全问题（二） 程序锁
■android安全问题（四） 抢先开机启动 - ...
■android安全问题（三） 钓鱼程序
■android手机root后的安全问题 （一）


最新评论
N_HH： su1216 写道N_HH 写道那个，请问，pm是什么。。不懂 ...
android手机root后的安全问题 （四）
su1216： N_HH 写道那个，请问，pm是什么。。不懂。shell@an ...
android手机root后的安全问题 （四）
N_HH： 那个，请问，pm是什么。。不懂。
android手机root后的安全问题 （四）
su1216： tjwink 写道既然已经知道su的数据库地址，可以直接用DB ...
android手机root后的安全问题 （三）
tjwink： 既然已经知道su的数据库地址，可以直接用DBOpenHelpe ...
android手机root后的安全问题 （三）

.


--------------------------------------------------------------------------------
声明：ITeye文章版权属于作者，受法律保护。没有作者书面许可不得转载。若作者同意转载，必须以超链接形式标明文章原始出处和作者。
© 2003-2012 ITeye.com. All rights reserved. [ 京ICP证110151号 京公网安备110105010620 ] 
.
