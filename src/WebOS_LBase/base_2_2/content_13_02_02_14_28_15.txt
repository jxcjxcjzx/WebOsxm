

首页 | 互联网 | IT动态 | IT培训 | Cisco | Windows | Linux | Java | .Net | Oracle | 软件测试 | C/C++ | 嵌入式开发 | 存储世界 | 服务器 
网络设备 | IDC | 安全 | 求职招聘 | 数字网校 | 笔记本电脑 | 北大青鸟 | 技术专题 | 电子书下载 | 教学视频 | 源码下载 | 搜索 | 博客 | 论坛 





































首页



资讯动态



认证考试



新手入门



核心技术



高级技术



J2EE



J2ME



Java&XML



开源技术



其他技术



RSS订阅



论坛



专题

 






您现在的位置： 中国IT实验室 >> Java >> 开源技术 >> Tomcat >> 正文 

Tomcat+JSP经典配置实例 

央邦0首付，低押金先就业后付款
[上海央邦]学一送一,超值!
50000年薪起，顶级4G手机开发！ 【安博亚威】CCIE考试通过率第一！
Windows高级工程师的培训地
 贺深圳北大青鸟信狮学校学员100%就业 

ChinaItLab 2005-7-7 10:11:00 保存本文 推荐给好友 收藏本页 


欢迎进入Java社区论坛，与200万技术人员互动交流 >>进入

　　经常看到jsp的初学者问tomcat下如何配置jsp、servlet和bean的问题，于是总结了一下如何tomcat下配置jsp、servlet和ben，希望对那些初学者有所帮助。
　　
　　一、开发环境配置
　　
　　第一步：下载j2sdk和tomcat：到sun官方站（http://java.sun.com/j2se/1.5.0/download.jsp）下载j2sdk，注意下载版本为Windows Offline Installation的SDK，同时最好下载J2SE 1.5.0 Documentation，然后到tomcat官方站点（http://jakarta.apache.org/site/downloads/downloads_tomcat-5.cgi）下载tomcat（下载最新5.5.9版本的tomcat）；
　　
　　第二步：安装和配置你的j2sdk和tomcat：执行j2sdk和tomcat的安装程序，然后按默认设置进行安装即可。
　　
　　1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的j2sdk安装在c:\j2sdk1.5.0）：
　　
　　JAVA_HOME=c:\j2sdk1.5.0
　　classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;（.;一定不能少，因为它代表当前路径)
　　path=%JAVA_HOME%\bin
　　
　　接着可以写一个简单的java程序来测试J2SDK是否已安装成功：
　　
　　public class Test{
　　public static void main(String args[]){
　　System.out.println("This is a test program.");
　　}
　　}
　　
　　将上面的这段程序保存为文件名为Test.java的文件。
　　
　　然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令
　　
　　javac Test.java
　　java Test
　　
　　此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。
　　
　　2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c:\tomcat)：
　　
　　CATALINA_HOME=c:\tomcat
　　CATALINA_BASE=c:\tomcat
　　
　　然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的(可以根据实际追加)servlet.jar追加到classpath中去，修改后的classpath如下：
　　
　　classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;
　　
　　接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。
　　
　　第三步：建立自己的jsp app目录
　　
　　1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；
　　2.在webapps目录下新建一个目录，起名叫myapp；
　　3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；
　　4.WEB-INF下新建一个文件web.xml，内容如下：
　　
　　<?xml version="1.0" encoding="ISO-8859-1"?>
　　<!DOCTYPE web-app
　　PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
　　"http://java.sun.com/dtd/web-app_2_3.dtd">
　　<web-app>
　　<display-name>My Web Application</display-name>
　　<description>
　　A application for test.
　　</description>
　　</web-app>
　　
　　5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：
　　<html><body><center>
　　Now time is: <%=new java.util.Date()%>
　　</center></body></html>
　　
　　6.重启Tomcat
　　
　　7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。
　　
　　第四步：建立自己的Servlet：
　　
　　1.用你最熟悉的编辑器（建议使用有语法检查的java ide）新建一个servlet程序，文件名为Test.java，文件内容如下：
　　
　　package test;
　　import java.io.IOException;
　　import java.io.PrintWriter;
　　import javax.servlet.ServletException;
　　import javax.servlet.http.HttpServlet;
　　import javax.servlet.http.HttpServletRequest;
　　import javax.servlet.http.HttpServletResponse;
　　public class Test extends HttpServlet {
　　protected void doGet(HttpServletRequest request, HttpServletResponse response)
　　throws ServletException, IOException {
　　PrintWriter out=response.getWriter();
　　out.println("<html><body><h1>This is a servlet test.</h1></body></html>");
　　out.flush();
　　}
　　}
　　
　　2 .编译
　　将Test.java放在c:\test下，使用如下命令编译：
　　
　　C:\Test>javac Test.java
　　
　　然后在c:\Test下会产生一个编译后的servlet文件：Test.class
　　
　　3 .将结构test\Test.class剪切到%CATALINA_HOME%\webapps\myapp\WEB-INF\classes下，也就是剪切那个test目录到classes目录下，如果classes目录不存在，就新建一个。 现在webapps\myapp\WEB-INF\classes下有test\Test.class的文件目录结构
　　
　　4 .修改webapps\myapp\WEB-INF\web.xml，添加servlet和servlet-mapping
　　
　　编辑后的web.xml如下所示，红色为添加的内容:
　　
　　<?xml version="1.0" encoding="ISO-8859-1"?>
　　<!DOCTYPE web-app
　　PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
　　"http://java.sun.com/dtd/web-app_2_3.dtd">
　　<web-app>
　　<display-name>My Web Application</display-name>
　　<description>
　　A application for test.
　　</description>
　　<servlet>
　　<servlet-name>Test</servlet-name>
　　<display-name>Test</display-name>
　　<description>A test Servlet</description>
　　<servlet-class>test.Test</servlet-class>
　　</servlet>
　　<servlet-mapping>
　　<servlet-name>Test</servlet-name>
　　<url-pattern>/Test</url-pattern>
　　</servlet-mapping>
　　</web-app>
　　
　　这段话中的servlet这一段声明了你要调用的Servlet，而servlet-mapping则是将声明的servlet"映射"到地址/Test上
　　
　　5 .好了，重启动Tomcat，启动浏览器，输入http://localhost:8080/myapp/Test 如果看到输出This is a servlet test.就说明编写的servlet成功了。
　　
　　注意：修改了web.xml以及新加了class，都要重启Tomcat
　　
　　第四步：建立自己的Bean：
　　
　　1.用你最熟悉的编辑器（建议使用有语法检查的java ide）新建一个java程序，文件名为TestBean.java，文件内容如下：
　　
　　package test;
　　public class TestBean{
　　private String name = null;
　　public TestBean(String strName_p){
　　this.name=strName_p;
　　}
　　public void setName(String strName_p){
　　this.name=strName_p;
　　}
　　public String getName(){
　　return this.name;
　　}
　　}
　　
　　2 .编译
　　
　　将TestBean.java放在c:\test下，使用如下命令编译：
　　
　　C:\Test>javac TestBean.java
　　
　　然后在c:\Test下会产生一个编译后的bean文件：TestBean.class
　　
　　3 .将TestBean.class文件剪切到 %CATALINA_HOME%\webapps\myapp\WEB-INF\classes\test下，
　　
　　4 .新建一个TestBean.jsp文件，文件内容为：
　　
　　<%@ page import="test.TestBean" %>
　　<html><body><center>
　　<%
　　TestBean testBean=new TestBean("This is a test java bean.");
　　%>
　　Java bean name is: <%=testBean.getName()%>
　　</center></body></html>
　　
　　5 .好了，重启Tomcat，启动浏览器，输入http://localhost:8080/myapp/TestBean.jsp 如果看到输出Java bean name is: This is a test java bean.就说明编写的Bean成功了。
　　
　　这样就完成了整个Tomcat下的jsp、servlet和javabean的配置。接下来需要做的事情就是多看书、多读别人的好代码，自己多动手写代码以增强自己在这方面开发的能力了。
　　
　　jvm应填写到
　　c:\j2sdk\bin
　　
　　给你一个简单的配置：：：：
　　
　　JSP环境配置心得
　　
　　首先要说的是，使用jdk+tomcat完全可以配置我们的jsp服务器，不再需要其实任何东东，有很多文章介绍了Apache，其实根本用不着，一般的学习调试tomcat完全可以胜任了。
　　
　　安装jdk后，tomcat在安装之前会自动找到jdk的安装路径，一路点击"下一步"，经过一段时间的文件复制，最后"close"，完成comcat的安装。
　　
　　您最好去下载一个版本较高的tomcat，比如4.1以上的，因为它不需要设置太多的系统变量，右击"我的电脑"，选择"属性"->"高级"->"环境变量"->"系统变量"，新建一个TOMCAT_HOME，值设置成你的tomcat所在的路径，比如：D:\Program Files\Apache Group\Tomcat 5.5，配置完成。
　　
　　从开始菜单中找到tomcat选项，一般打开顺序是：开始->程序->Apache Tomcat 5.5，选择"Start Tomcat"，让jsp服务器开始运行，此时会打开一个类似Dos的窗口，会显示一些相关的信息。< 
【责编:admin】 





相关文章

实现在tomcat中跑多个服务器实例
Tomcat内存设置方法
tomcat中部署java项目
Tomcat调整内存所能容纳的最大值
tomcat内存溢出总结
tomcat 监控器和定时器
apache server与tomcat 的区别以及整合
Tomcat JBoss还是WebSphere社区版
Google选择Jetty放弃Tomcat
Tomcat内存溢出的三种情况及解决办法分析



编辑推荐
· [基础入门]利用字符串连接巧妙解决问题
· [高级编程]实现Java调用.net DLL的方法
· [网络编程]Java设置与读取Cookie属性
· [基础入门]和我共同了解Java是什么
· [基础入门]Java语言与C++语言在作用域上的差异
· [基础入门]Java源代码的折行规则
· [基础入门]Java中的静态数组与动态数组
· [基础入门]Java版简易俄罗斯方块
· [基础入门]随机数组合，随机号码产生器
· [网络编程]Java访问WebService返回xml数据






 相关产品和培训 



文章评论 


　友情推荐链接
 

·Asp源码 PHP源码
·CGI源码 JSP源码
·建站书籍教程
·服务器软件 .net源码
·建站工具软件

 
·IDC资讯大全
·机房品质万里行
·IDC托管必备知识
·网站推广优化
·全国IDC报价


 




　认证培训

· “暖冬工程”IT就业培训-先就业后付款！
· 蓝点世纪Java EE工程师培训
· No.1高薪热门职业【网络系统集成】
· Java/C++培训100％名企就业
· “紧缺人才培养计划”上海地区启动
· [上海]交大慧谷CCNP培训特价3990元



　专题推荐

 　·Java EE 6规范中文版
　·Oracle 10g OCP考证秘笈
　·算法分析与设计之五大常用算法
　·开发必备 漫谈Java加密保护
　·嵌入式开发--ARM技术专题
　·C/C++指针，认真了解，灵活运用
　·.NET开发：C#实用基础教程
　·软件测试工具QTP学习专题
　·嵌入式开发单片机解决方案专题
　·Java开发环境 Greenfoot 程序员手册
 



　今日更新

· Java编程语言的另一个替代
· Java垃圾收集器使用小诀窍
· 软件系统开发中的数据交换协议
· ·一分钟掌握Spring中bean的生命周期
· Java认证考试：Java EE开发四大框架之Struts
· Struts2的interceptor实现权限管理
· SimpleFramework 开发企业应用感受
· 双缓冲原理在实现消除闪烁的方法
· struts2文件上传的三种方式解析
· Linux下安装jdk和tomcat



　社区讨论




　博客论点




　频道精选

· 新版CCNA考试大纲 07年8月1日生效
 · 新手学习宝典：Linux常用命令全集
 · 知已知彼，深入了解系统安全知识
 · 从入门到精通 java初学者实践系列教程
 · 共同学习——Oracle入门基础专题
 · ADO.net与PowerBuilder的综合比较
 · 评论：中国互联网“钱”途何在？
 · 中科院：龙芯要成"中国奔腾" 能卖1亿颗



　Java 频道导航

新手入门： 
安装配置 | 开发工具 | JDK | oop面向对象
核心技术： 
SwingAwtApplet | 高级编程 | 网络编程Jvm技术 | JavaMedia
高级技术： 
设计模式 | UML／OO | p2p／Jxta | 多线程 | JavaSecurity
J2EE： 
J2ee核心 | Servlet／Jsp | EJB
| JDBC／JDO | Rmi／Corba／Jini | Mvcwea | 应用服务器
J2ME： 
核心技术 | 嵌入式 | 无线开发
Java&XML： 
XMLBeans | WebServices
开源技术： 
ANT | Struts | Hibernate | Spring
Eclipse | JBoss | Tomcat | JUnit
其他技术

 



