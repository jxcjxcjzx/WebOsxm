 博客首页登录注册十二生肖4月财气运势旺衰 发博文  博文        ×推荐：悦博:张国荣十年祭旅行博客精选
推荐：悦博:张国荣十年祭旅行博客精选此殇丶狠深
http://blog.sina.com.cn/ahchenjie [订阅][手机订阅]首页 博文目录 图片 关于我个人资料 
 此殇丶狠深 
Qing 微博 
加好友 发纸条 

写留言 加关注 


博客等级： 博客积分：96 博客访问：5,548 关注人气：3 
精彩图文 
迪拜世界最大奢侈购物天堂
绍兴醉人夕阳

新浪Qing

柔情似水伊甸园

新浪Qing

沙滩比基尼盛宴

新浪Qing

日本八音盒殿堂

新浪Qing

香港美食攻略

新浪Qing

最美樱花校园

新浪Qing


查看更多>>
相关博文 
初夏如水微微凉隔岸细柳舞柔霜
创世三国
曹操一家为啥都喜欢有夫之妇？
微三国
【Cupcakes】：费列罗
尖果儿厨房
患有心房颤动的患者在饮食上应
王新华
中国留学生在美开车撞死人&n
关凡
澳洲移民：188类大额投资移
海外地产移民专栏
钻石价值与品牌、产地无关，只
戒指也疯狂
竞彩2串一
魔力鸟310足彩
滅心頭火 點佛前燈
海外游女
阿兰《兰色歌姬(黑胶CD)》
zyyy12
让联想C2520音箱把你的耳
Miss米啦
“神药”维生素C易得结石？
百体
更多>>
推荐博文 
重口味壮阳饮料：青蛙汁(图)
趣看天下官博
非洲巨蟒吞下整头牛羚惊人瞬间（
骆玺舟
虱子的基因居然揭示了人类的各种
康斯坦丁
手机其实没有你想象得那么安全！
康斯坦丁
早期人类祖先饮食更像牛(组图)
虎子
世界上七座最惊人的蛇岛(组图)
爱自然
“假货八成”传言让化妆品电商很
张书乐
【纪实】几近绝响的手工艺--兰
尘埃
惠特曼：淘宝最多只能活18个月
魏武挥
三星觊觎低端智能手机市场增长潜
莲子洲


巨蟒PK大鳄鱼


美人鱼


为人类献身的动物


纳粹人寻找圣杯全过程


英国圆鳍鱼嘴唇肥厚


垂死挣扎捕鲸业

查看更多>>
谁看过这篇博文 
加载中…
正文 字体大小：大 中 小 
C++中namespace的使用(2012-07-17 10:31:30)转载▼标签： cnamespaceit  
命名空间(namespace)是一种描述逻辑分组的机制，可以将按某些标准在逻辑上属于同一个任务中的所有类声明放在同一个命名空间中。标准C++库（不包括标准C库）中所包含的所有内容（包括常量、变量、结构、类和函数等）都被定义在命名空间std（standard标准）中了。

定义命名空间

有两种形式的命名空间——有名的和无名的。 
命名空间的定义格式为：（取自C++标准文档）

named-namespace-definition:

       namespace identifier { namespace-body }

unnamed-namespace-definition:

       namespace { namespace-body }

namespace-body:

       declaration-seqopt
--------------------------------------------------


有名的命名空间：

       namespace 命名空间名 {

              声明序列可选

       }

无名的命名空间：

       namespace {

              声明序列可选

       }

-------------------------------------------------

命名空间的成员，是在命名空间定义中的花括号内声明了名称。可以在命名空间的定义内，定义命名空间的成员（内部定义）。也可以只在命名空间的定义内声明成员，而在命名空间的定义之外，定义命名空间的成员（外部定义）。

命名空间成员的外部定义的格式为：

命名空间名::成员名 ……

例如：

// out.h

namespace Outer { // 命名空间Outer的定义

       int i; // 命名空间Outer的成员i的内部定义

       namespace Inner { // 子命名空间Inner的内部定义

              void f() { i++; } // 命名空间Inner的成员f()的内部定义，其中的i为Outer::i

              int i;

              void g() { i++; } // 命名空间Inner的成员g()的内部定义，其中的i为Inner::i

              void h(); // 命名空间Inner的成员h()的声明

       }

       void f(); // 命名空间Outer的成员f()的声明

       // namespace Inner2; // 错误，不能声明子命名空间

}

void Outer::f() {i--;} // 命名空间Outer的成员f()的外部定义

void Outer::Inner::h() {i--;} // 命名空间Inner的成员h()的外部定义

// namespace Outer::Inner2 {} // 错误，不能在外部定义子命名空间

 

注意：

不能在命名空间的定义中声明（另一个嵌套的）子命名空间，只能在命名空间的定义中定义子命名空间。

也不能直接使用“命名空间名::成员名 ……”定义方式，为命名空间添加新成员，而必须先在命名空间的定义中添加新成员的声明。另外，命名空间是开放的，即可以随时把新的成员名称加入到已有的命名空间之中去。方法是，多次声明和 定义同一命名空间，每次添加自己的新成员和名称。例如：

namespace A {

       int i;

       void f();

} // 现在A有成员i和f()

namespace A {

       int j;

       void g();

} // 现在A有成员i、f()、j和g()

还可以用多种方法，来组合现有的命名空间，让它们为我所用。例如：

namespace My_lib {

       using namespace His_string;

       using namespace Her_vector;

       using Your_list::List;

       void my_f(String &, List &);

}

……

using namespace My_lib;

……

Vector<String> vs[5];

List<int> li[10];

my_f(vs[2], li[5]);

使用命名空间

作用域解析运算符（::）

对命名空间中成员的引用，需要使用命名空间的作用域解析运算符::。例如：

// out1.cpp

#include "out.h"

#include <iostream>

int main ( ) {

       Outer::i = 0;

       Outer::f(); // Outer::i = -1;

       Outer::Inner::f(); // Outer::i = 0;

       Outer::Inner::i = 0;

       Outer::Inner::g(); // Inner::i = 1;

       Outer::Inner::h(); // Inner::i = 0;

       std::cout << "Hello, World!" << std::endl;

       std::cout << "Outer::i = " << Outer::i << ", Inner::i = " << Outer::Inner::i << std::endl;

}using指令（using namespace）

为了省去每次调用Inner成员和标准库的函数和对象时，都要添加Outer::Inner::和 sta::的麻烦，可以使用标准C++的using编译指令来简化对命名空间中的名称的使用。格式为：

using namespace 命名空间名[::命名空间名……];

在这条语句之后，就可以直接使用该命名空间中的标识符，而不必写前面的命名空间定位部分。因为 using指令，使所指定的整个命名空间中的所有成员都直接可用。例如：

// out2.cpp

#include "out.h"

#include <iostream>

// using namespace Outer; // 编译错误，因为变量i和函数f()有名称冲突

using namespace Outer::Inner;

using namespace std;

int main ( ) {

       Outer::i = 0;

       Outer::f(); // Outer::i = -1;

       f(); // Inner::f()，Outer::i = 0;

       i = 0; // Inner::i

       g(); // Inner::g()，Inner::i = 1;

       h(); // Inner::h()，Inner::i = 0;

       cout << "Hello, World!" << endl;

       cout << "Outer::i = " << Outer::i << ", Inner::i = " << i << endl;

}

分享： 分享到新浪Qing 3
喜欢

阅读(3594)┊ 评论 (2)┊ 收藏(1) ┊转载(6) ┊ 喜欢▼ ┊打印┊举报 已投稿到：  排行榜 圈子  

转载列表：
转载 
转载是分享博文的一种常用方式...

前一篇：显式构造函数（explicit）后一篇：关于--->#ifndef
评论 重要提示：警惕虚假中奖信息|[商讯]我有明星气势签名[发评论]评论加载中，请稍候...

发评论 [商讯]爱心签名换梦想，天天派奖|[商讯]提高博客人气新方法
  更多>>

登录名： 密码： 找回密码 注册 记住登录状态
昵   称：

 分享到微博    评论并转载此博文

验证码： 请点击后输入验证码 收听验证码 
匿名评论发评论 
以上网友发言只代表其个人观点，不代表新浪网的观点或立场。
< 前一篇
显式构造函数（explicit）后一篇 >
关于--->#ifndef
  新浪BLOG意见反馈留言板　不良信息反馈　电话：4006900000 提示音后按1键（按当地市话标准计费）　欢迎批评指正

新浪简介 | About Sina | 广告服务 | 联系我们 | 招聘信息 | 网站律师 | SINA English | 会员注册 | 产品答疑 

Copyright © 1996 - 2013 SINA Corporation, All Rights Reserved

新浪公司 版权所有


X分享到...选择其他平台 >>
写365
长微博
微语录
九宫格
发照片
发视频
发商品
博文博主音乐视频播主 最近喜欢了的博主：
加载中…Qing博客转载原文采编长微博分享到新浪Qing分享到新浪微博为了您的账号安全，请绑定邮箱
分享到X
腾讯微博一键通新浪微博QQ空间人人网天涯凤凰微博朋友网人民微博豆瓣网搜狐微博新华微博手机网易微博开心网百度空间QQ好友更多平台... (130)bShare幻灯播放关闭





