

首页
开源软件
讨论区






代码分享
博客
翻译
资讯
移动开发




招聘

你好2,您好 我的空间







 |  添加软件 | 投递新闻 | 退出
 

开源中国 
代码分享
 当前位置：代码分享 » C/C++ » Qt 图形界面开发 
搜 索 









做了一个qt版的计算器，并能在ARM6410上运行！

蒯翔 发布于 2012年12月28日 21时, 3评/749阅


 


分享到 

新浪微博腾讯微博


收藏+1

踩顶0
 

加减部分用“内嵌汇编“做的！

标签：<无> 




代码片段(5)


[文件] dialog.h ~ 2KB    下载(39)










01

#ifndef DIALOG_H





02

#define DIALOG_H





03

#include "fw.h"





04

#include <QtGui>





05

 





06

class StandardDialogs : public QDialog





07

{





08

    Q_OBJECT





09

public:





10

    StandardDialogs( QWidget *parent=0, Qt::WindowFlags  f=0 );





11

    ~StandardDialogs();





12

public:





13

    QGridLayout *layout;





14

    QHBoxLayout *firstLayout;





15

    QVBoxLayout *mainLayout;





16

 





17

    QPushButton *zeroPushButton;





18

    QPushButton *onePushButton;





19

    QPushButton *twoPushButton;





20

    QPushButton *threePushButton;





21

    QPushButton *fourPushButton;





22

    QPushButton *fivePushButton;





23

    QPushButton *sixPushButton;





24

    QPushButton *sevnPushButton;





25

    QPushButton *eightPushButton;





26

    QPushButton *ninePushButton;





27

    QPushButton *addPushButton;





28

    QPushButton *subPushButton;





29

    QPushButton *clrPushButton;





30

    QPushButton *srdPushButton;





31

    QPushButton *srdaddPushButton;





32

    QPushButton *srdsubPushButton;





33

 





34

    QLineEdit *fileLineEdit;





35

    QLineEdit *firstOperadata;





36

    QLineEdit *secondOperadata;





37

    //QLineEdit *fontLineEdit;





38

    void createMainwindow();





39

 





40

private slots:





41

    void on_zeroButton();





42

    void on_oneButton();





43

    void on_twoButton();





44

    void on_threeButton();





45

    void on_fourButton();





46

    void on_fiveButton();





47

    void on_sixButton();





48

    void on_sevnButton();





49

    void on_eightButton();





50

    void on_nineButton();





51

    void on_addButton();





52

    void on_subButton();





53

    void on_clrButton();





54

    void on_srdButton();





55

    void on_srdaddButton();





56

    void on_srdsubButton();





57

private:





58

    QString input1;





59

    QString input2;





60

    char operate;





61

    QString add_rust;





62

    QString sub_rust;





63

    int add_result;//这两个数设置成全局变量





64

    int sub_result;//





65

};





66

 





67

 





68

#endif



[文件] dialog.cpp ~ 9KB    下载(31)



view source

print?




001

#include "dialog.h"





002

#include "fw.h"





003

StandardDialogs::StandardDialogs( QWidget *parent, Qt::WindowFlags  f )





004

    : QDialog( parent, f )





005

{





006

    setWindowTitle(tr("计算器"));





007

    createMainwindow();





008

}





009

 





010

void  StandardDialogs::createMainwindow()





011

{   //创建布局；





012

    firstLayout = new QHBoxLayout;





013

    layout = new QGridLayout;





014

    mainLayout = new QVBoxLayout(this);





015

    //创建按钮；





016

    zeroPushButton = new QPushButton();





017

    zeroPushButton->setText(tr("0"));





018

 





019

    onePushButton = new QPushButton();





020

    onePushButton->setText(tr("1"));





021

 





022

    twoPushButton = new QPushButton();





023

    twoPushButton->setText(tr("2"));





024

 





025

    threePushButton = new QPushButton();





026

    threePushButton->setText(tr("3"));





027

 





028

    fourPushButton = new QPushButton();





029

    fourPushButton->setText(tr("4"));





030

 





031

    fivePushButton = new QPushButton();





032

    fivePushButton->setText(tr("5"));





033

 





034

    sixPushButton = new QPushButton();





035

    sixPushButton->setText(tr("6"));





036

 





037

    sevnPushButton = new QPushButton();





038

    sevnPushButton->setText(tr("7"));





039

 





040

    eightPushButton = new QPushButton();





041

    eightPushButton->setText(tr("8"));





042

 





043

    ninePushButton = new QPushButton();





044

    ninePushButton->setText(tr("9"));





045

 





046

    addPushButton = new QPushButton();





047

    addPushButton->setText(tr("+"));





048

 





049

    subPushButton = new QPushButton();





050

    subPushButton->setText(tr("-"));





051

 





052

    clrPushButton = new QPushButton();





053

    clrPushButton->setText(tr("clear          screen"));





054

 





055

    srdPushButton = new QPushButton();





056

    srdPushButton->setText("produce srd_data：");





057

 





058

    firstOperadata = new QLineEdit();  //第一操作数显示框





059

    firstOperadata->setText(tr(" "));





060

 





061

    secondOperadata = new QLineEdit();//第二操作数显示框





062

    secondOperadata->setText(tr(" "));





063

 





064

    srdaddPushButton = new QPushButton();





065

    srdaddPushButton->setText(tr("+"));





066

 





067

    srdsubPushButton = new QPushButton();





068

    srdsubPushButton->setText(tr("-"));





069

    //添加按钮





070

    layout->addWidget(zeroPushButton,1,0);





071

    layout->addWidget(onePushButton,1,1);





072

    layout->addWidget(twoPushButton,1,2);





073

    layout->addWidget(threePushButton,2,0);





074

    layout->addWidget(fourPushButton,2,1);





075

    layout->addWidget(fivePushButton,2,2);





076

    layout->addWidget(srdPushButton,1,3);





077

    layout->addWidget(sixPushButton,3,0);





078

    layout->addWidget(sevnPushButton,3,1);





079

    layout->addWidget(eightPushButton,3,2);





080

    layout->addWidget(firstOperadata,2,3);





081

    layout->addWidget(secondOperadata,3,3);





082

    layout->addWidget(ninePushButton,4,0);





083

    layout->addWidget(addPushButton,4,1);





084

    layout->addWidget(subPushButton,4,2);





085

    layout->addWidget(srdaddPushButton,4,3);





086

    layout->addWidget(srdsubPushButton,4,4);





087

 





088

    layout->setMargin(15);





089

    layout->setSpacing(10);





090

    //按键和槽机制





091

    connect(zeroPushButton,SIGNAL(clicked()),this,SLOT(on_zeroButton()));





092

    connect(onePushButton,SIGNAL(clicked()),this,SLOT(on_oneButton()));





093

    connect(twoPushButton,SIGNAL(clicked()),this,SLOT(on_twoButton()));





094

    connect(threePushButton,SIGNAL(clicked()),this,SLOT(on_threeButton()));





095

    connect(fourPushButton,SIGNAL(clicked()),this,SLOT(on_fourButton()));





096

    connect(fivePushButton,SIGNAL(clicked()),this,SLOT(on_fiveButton()));





097

    connect(sixPushButton,SIGNAL(clicked()),this,SLOT(on_sixButton()));





098

    connect(sevnPushButton,SIGNAL(clicked()),this,SLOT(on_sevnButton()));





099

    connect(eightPushButton,SIGNAL(clicked()),this,SLOT(on_eightButton()));





100

    connect(ninePushButton,SIGNAL(clicked()),this,SLOT(on_nineButton()));





101

    connect(addPushButton,SIGNAL(clicked()),this,SLOT(on_addButton()));





102

    connect(subPushButton,SIGNAL(clicked()),this,SLOT(on_subButton()));





103

    connect(clrPushButton,SIGNAL(clicked()),this,SLOT(on_clrButton()));





104

    connect(srdPushButton,SIGNAL(clicked()),this,SLOT(on_srdButton()));





105

    connect(srdaddPushButton,SIGNAL(clicked()),this,SLOT(on_srdaddButton()));





106

    connect(srdsubPushButton,SIGNAL(clicked()),this,SLOT(on_srdsubButton()));





107

    //将文本框添加到水平布局中





108

    fileLineEdit = new QLineEdit();





109

    fileLineEdit->setText(tr("0"));





110

    firstLayout->addWidget(fileLineEdit);





111

    //垂直布局





112

 





113

    //将水平布局和栅栏布局添加到垂直布局中





114

    mainLayout->addWidget(clrPushButton);





115

    mainLayout->addLayout(firstLayout);





116

    mainLayout->addLayout(layout);





117

 





118

    //对操作数和操作字符初始化





119

    input1 = "0";





120

    input2 = "0";





121

    operate = '0';





122

}





123

 





124

StandardDialogs::~StandardDialogs()





125

{





126

}





127

 





128

//槽函数实现





129

void StandardDialogs::on_zeroButton()





130

{





131

    if(input2 == "0")





132

    {





133

        input2 = "0";





134

    }





135

    else





136

    {





137

        input2 = fileLineEdit->text();





138

        input2.append(tr("0"));





139

    }





140

 





141

    fileLineEdit->setText(input2);





142

}





143

 





144

void StandardDialogs::on_oneButton()





145

{





146

    if(input2 == "0")





147

    {





148

        input2 = "1";





149

    }





150

    else





151

    {





152

        input2 = fileLineEdit->text();





153

        input2.append(tr("1"));





154

    }





155

 





156

    fileLineEdit->setText(input2);





157

}





158

 





159

void StandardDialogs::on_twoButton()





160

{





161

    if(input2 == "0")





162

    {





163

        input2 = "2";





164

    }





165

    else





166

    {





167

        input2 = fileLineEdit->text();





168

        input2.append(tr("2"));





169

    }





170

 





171

    fileLineEdit->setText(input2);





172

}





173

 





174

void StandardDialogs::on_threeButton()





175

{





176

    if(input2 == "0")





177

    {





178

        input2 = "3";





179

    }





180

    else





181

    {





182

        input2 = fileLineEdit->text();





183

        input2.append(tr("3"));





184

    }





185

 





186

    fileLineEdit->setText(input2);





187

}





188

 





189

void StandardDialogs::on_fourButton()





190

{





191

    if(input2 == "0")





192

    {





193

        input2 = "4";





194

    }





195

    else





196

    {





197

        input2 = fileLineEdit->text();





198

        input2.append(tr("4"));





199

    }





200

 





201

    fileLineEdit->setText(input2);





202

}





203

 





204

void StandardDialogs::on_fiveButton()





205

{





206

    if(input2 == "0")





207

    {





208

        input2 = "5";





209

    }





210

    else





211

    {





212

        input2 = fileLineEdit->text();





213

        input2.append(tr("5"));





214

    }





215

 





216

    fileLineEdit->setText(input2);





217

}





218

 





219

void StandardDialogs::on_sixButton()





220

{





221

    if(input2 == "0")





222

    {





223

        input2 = "6";





224

    }





225

    else





226

    {





227

        input2 = fileLineEdit->text();





228

        input2.append(tr("6"));





229

    }





230

 





231

    fileLineEdit->setText(input2);





232

}





233

 





234

void StandardDialogs::on_sevnButton()





235

{





236

    if(input2 == "0")





237

    {





238

        input2 = "7";





239

    }





240

    else





241

    {





242

        input2 = fileLineEdit->text();





243

        input2.append(tr("7"));





244

    }





245

 





246

    fileLineEdit->setText(input2);





247

}





248

 





249

void StandardDialogs::on_eightButton()





250

{





251

    if(input2 == "0")





252

    {





253

        input2 = "8";





254

    }





255

    else





256

    {





257

        input2 = fileLineEdit->text();





258

        input2.append(tr("8"));





259

    }





260

 





261

    fileLineEdit->setText(input2);





262

}





263

 





264

void StandardDialogs::on_nineButton()





265

{





266

    if(input2 == "0")





267

    {





268

        input2 = "9";





269

    }





270

    else





271

    {





272

        input2 = fileLineEdit->text();





273

        input2.append(tr("9"));





274

    }





275

 





276

    fileLineEdit->setText(input2);





277

}





278

 





279

void StandardDialogs::on_addButton()





280

{





281

    float first,second;





282

    input2 = fileLineEdit->text();





283

 





284

    if(operate == '0')





285

    {





286

        input1 = input2;





287

        input2 = "0";





288

        operate = '+';





289

    }





290

    else





291

    {





292

        second = input2.toFloat();





293

        first = input1.toFloat();





294

        switch(operate)





295

        {





296

            case '+':first = first + second;break;





297

            case '-':first = first - second;break;





298

        }





299

        input1 = QString::number(first,'f',10);





300

        input2 = "0";





301

        operate = '+';





302

    }





303

 





304

    fileLineEdit->setText(input1);





305

 





306

}





307

 





308

 





309

void StandardDialogs::on_subButton()





310

{





311

    float first,second;





312

    input2 = fileLineEdit->text();





313

 





314

    if(operate == '0')





315

    {





316

        input1 = input2;





317

        input2 = "0";





318

        operate = '-';





319

    }





320

    else





321

    {





322

        second = input2.toFloat();





323

        first = input1.toFloat();





324

        switch(operate)





325

        {





326

            case '+':first = first + second;break;





327

            case '-':first = first - second;break;





328

        }





329

        input1 = QString::number(first,'f',10);





330

        input2 = "0";





331

        operate = '-';





332

    }





333

 





334

    fileLineEdit->setText(input1);





335

 





336

}





337

 





338

void StandardDialogs::on_clrButton()





339

{





340

    input1 = "0";





341

    input2 = "0";





342

    operate = '0';





343

    QString add_rust = "0";





344

    QString sub_rust = "0";





345

    fileLineEdit->setText(input2);





346

}





347

 





348

void StandardDialogs::on_srdButton()





349

{





350

    int srd[2];





351

    //int add_result;//这两个数设置成全局变量





352

   // int sub_result;//





353

    int x = 1,y = 100;





354

    incr_srand(srd, x, y);//对fw.h调用





355

    QString firstopera;





356

    firstopera.setNum(srd[0]);





357

    firstOperadata->setText(firstopera);





358

 





359

    QString secondopera;





360

    secondopera.setNum(srd[1]);





361

    secondOperadata->setText(secondopera);





362

 





363

    Add_data(&add_result, srd);//对加法的调用





364

    add_rust.setNum(add_result);





365

 





366

    Sub_data(&sub_result, srd);//对减法的调用





367

    sub_rust.setNum(sub_result);





368

}





369

 





370

void StandardDialogs::on_srdaddButton()





371

{





372

    fileLineEdit->setText(add_rust);





373

}





374

 





375

void StandardDialogs::on_srdsubButton()





376

{





377

     if(sub_result < 0)





378

    fileLineEdit->setText(tr("Divide Overflow"));





379

     else





380

        fileLineEdit->setText(sub_rust);





381

}



[文件] fw.cpp ~ 2KB    下载(31)










01

#include"stdio.h"





02

#include"stdlib.h"





03

#include"fw.h"





04

#include"time.h"





05

//进制转换





06

void D_X(int a)





07

{





08

   int j,k;





09

   int p[30];





10

   for(j=0;a!=0;j++)





11

   {





12

      p[j]=a%16;





13

      a=a/16;





14

 





15

      if(p[j]<10)





16

         p[j]+=48;





17

      else





18

      {





19

         switch(p[j])





20

            {





21

           case 10: p[j]='A';





22

              break;





23

           case 11: p[j]='B';





24

              break;





25

           case 12:    p[j]='C';





26

              break;





27

           case 13:    p[j]='D';





28

              break;





29

           case 14:    p[j]='E';





30

              break;





31

 





32

           case 15:    p[j]='F';





33

              break;





34

           }





35

       }





36

    }





37

   printf("\n转换后的十六进制数为：\n");





38

   printf("0x");





39

 





40

   for(k=j-1;k>=0;k--)





41

   {





42

     printf("%c",p[k]);





43

   }





44

 





45

   printf("\n");





46

}





47

 





48

//随机数的产生





49

void incr_srand(int *a, int x, int y)





50

{





51

    int i;





52

    srand((unsigned)time(NULL));





53

    for(i = 0; i < MAX; i++)





54

    {





55

        a[i] = rand()%y+x;





56

        printf("\n十进制：\n");





57

        printf("a[%d] = %d\n",i,a[i]);





58

    }





59

}





60

 





61

//加法操作





62

void Add_data(int *add_result, int *data)





63

{





64

    __asm ("add %0, %1,%2":"=r"(*add_result):"r"(data[0]),"r"(data[1]));





65

}





66

 





67

//减法操作





68

void Sub_data(int *sub_result, int *data)





69

{





70

    __asm ("sub %0, %1,%2":"=r"(*sub_result):"r"(data[0]),"r"(data[1]));





71

}





72

 





73

//保存数据





74

void Save_data(int *save, int *data, int num)





75

{





76

    int i;





77

    for(i = 0; i < num; i++)





78

    {





79

        save[i] = data[i];





80

    }





81

}





82

 





83

//恢复数据





84

void Recovery_data(int *save, int *data, int num)





85

{





86

    int i;





87

    for(i = 0; i < MAX; i++)





88

    {





89

        data[i] = save[i];





90

    }





91

}



[文件] fw.h ~ 424B    下载(29)










01

#ifndef _FW_H





02

#define _FW_H





03

 





04

#define MAX 2





05

 





06

#include"stdio.h"





07

#include"stdlib.h"





08

//获取随机数的函数





09

void incr_srand(int *a ,int x, int y);





10

 





11

//转换成十六进制的函数





12

void D_X(int a);





13

 





14

//加法操作





15

void Add_data(int *add_result, int *data);





16

 





17

//减法操作





18

void Sub_data(int *sub_result, int *data);





19

 





20

void Save_data(int *save, int *data, int num);





21

 





22

void Recovery_data(int *save, int *data, int num);





23

 





24

#endif



[文件] main.cpp ~ 657B    下载(31)










01

#include "dialog.h"





02

#include <QApplication>





03

#include "fw.h"





04

 





05

int main( int argc, char **argv )





06

{





07

    QFont font("ZYSong18030",12);





08

    QApplication::setFont(font);





09

 





10

    QApplication a( argc, argv );





11

    QTranslator translator(0);





12

    translator.load("standarddialogs_zh",".");





13

    a.installTranslator(&translator);





14

    //中文支持





15

    QTextCodec::setCodecForLocale(QTextCodec::codecForName("UTF-8"));





16

    QTextCodec::setCodecForTr(QTextCodec::codecForName("UTF-8"));





17

    QTextCodec::setCodecForCStrings(QTextCodec::codecForName("UTF-8"));





18

 





19

    StandardDialogs *standarddialogs = new StandardDialogs();





20

    standarddialogs->show();





21

    return a.exec();





22

}



举报



开源中国-程序员在线工具：API文档大全(120+) JS在线编辑演示 二维码更多»

 


相关的代码(83)
1回/353阅[C/C++]GUI电子表格3天前 By Bephax*
0回/206阅[C/C++]硬盘文件备份工具2.03天前 By pingdan32
0回/112阅[C/C++]将一个源目录下的所有文件备份到目的目录下，只备份目标目录中不存在的文件。6天前 By pingdan32
0回/82阅[C/C++]正则表达式简易测试8天前 By 稀饭桶子
1回/674阅[C/C++]Qt显示网络图片23天前 By 无脸程序员
1回/740阅[C/C++]贪吃蛇游戏1个月前 By cool609
6回/384阅[C/C++]linux下的图形化串口调试工具1个月前 By 飞扬青云
0回/674阅[C/C++]QT获取网页内容1个月前 By solookin
10回/2011阅[C/C++]蛇年中小企业用抽奖程序2个月前 By 龍禳
显示所有 »

发表评论回到顶部网友评论(3)







 1楼：zhcosin 发表于 2012-12-29 08:54 回复此评论

只支持加减乘除？

 







2楼：zhcosin 发表于 2012-12-29 09:01 回复此评论

我也写了一个计算器，不过是没有界面的，支持四则混合运算和数学函数，并即将添加用户定义函数的功能，如果有兴趣的话，欢迎讨论，呵呵。 
http://www.oschina.net/code/snippet_736932_13725

 







3楼：蒯翔 发表于 2013-01-02 11:12 回复此评论

恩啊，因为我们是ARM汇编的课程设计，要求只实现加减，所以只写了加减！最近还有个课程设计，有时间讨论！

 























回到顶部   回到评论列表

开源从代码分享开始 分享代码



蒯翔的其他代码linux c与 qt之间的混编，tcp网络编程(0评/791阅,3个月前)
udp发送字符和发送文件(2评/430阅,3个月前)
SDL之计算器，并在ARM上运行！(0评/359阅,3个月前)
做了一个qt版的计算器，并能在ARM6410上运行！(3评/749阅,3个月前)
计算机操作系统之银行家算法模拟(0评/227阅,3个月前)
全部(5)...
 





















© 开源中国(OsChina.NET) | 关于我们 | 广告联系 | @新浪微博 | 开源中国手机版 | 粤ICP备12009483号-3
 
开源中国手机客户端：AndroidiPhoneWP7 




















2条新留言，查看留言»




