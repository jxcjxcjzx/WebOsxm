

首页
开源软件
讨论区






代码分享
博客
翻译
资讯
移动开发




招聘

你好2,您好 我的空间







 |  添加软件 | 投递新闻 | 退出
 

开源中国 
代码分享
 当前位置：代码分享 » C/C++ » 常规C/C++编程 » 常用工具方法 
搜 索 









二叉树的前中后遍历 （有详细注释 呵呵 ）

904380861 发布于 2013年04月15日 18时, 0评/196阅


 


分享到 

新浪微博腾讯微博


收藏+3

踩顶0
 

<无详细内容>

标签：<无> 




代码片段(2)


[图片] 4PXVGRG8K%LRAZ%2UI34P{4.jpg




[代码] [C/C++]代码



view source

print?




001

         





002

//课堂练习   2013-4-15 17:53:54 





003

 





004

     





005

#include<iostream>





006

#include<stack>





007

using namespace std;





008

                         





009

typedef  char ElemType ;





010

 





011

struct BiTreeNode





012

{





013

    ElemType data ;





014

    BiTreeNode * lchild ,*rchild;





015

    BiTreeNode ():lchild (0),rchild (0),data(0){}   //  构造函数 初始化 bitreeNode;





016

};





017

 





018

typedef BiTreeNode * BiTree;





019

 





020

void CreateBiTree(BiTree &);





021

void PreOrderTraverse(BiTree T);





022

void InOrderTraverse(BiTree T);





023

void PostOrderTraverse(BiTree T);





024

 





025

int main()





026

{





027

    BiTree T ;                  //-+a00*b00-c00d00/e00f00 将此串输入 enter看结果





028

    CreateBiTree (T);





029

 





030

    PreOrderTraverse(T);





031

    cout<<endl;





032

 





033

    InOrderTraverse(T);





034

    cout<<endl;





035

     





036

    PostOrderTraverse(T);





037

    cout<<endl;





038

 





039

    system ("pause");





040

 





041

    return 0;





042

}





043

 





044

void CreateBiTree (BiTree &T)





045

{





046

    ElemType ch;





047

    cin>>ch;





048

    if (ch=='0')





049

        return ;





050

    T = new BiTreeNode ;





051

    T->data = ch ;





052

    CreateBiTree (T->lchild );





053

    CreateBiTree (T->rchild );





054

         





055

}





056

 





057

void PreOrderTraverse (BiTree T)





058

{





059

    stack<BiTree> s ;





060

    BiTree p = T;





061

    while (s.empty ()==false || p )// 栈不为空 或者 不为空树 循环





062

    {





063

        if(p)                    // 树 不为空





064

        {





065

            while (p)





066

            {





067

                cout<<p->data ;





068

                s.push (p);





069

                p=p->lchild ;    // 若 p 不为空 则 继续while 循环





070

            }





071

        }





072

        else                    // 树为空 栈不为空执行 else 





073

        {





074

            p = s.top()->rchild ; // 此时改变第一个中的 while p 





075

            s.pop();                // 随着 pop 栈会变空 





076

        }                       //  最后 栈 为空 P 树 为空则 终止循环





077

    }





078

 





079

}





080

 





081

void InOrderTraverse (BiTree  T)





082

{





083

    stack <BiTree > s;





084

    BiTree p=T;





085

    while (s.empty ()==false || p)





086

    {





087

        if(p)





088

        {





089

            while (p)





090

            {





091

                s.push(p);





092

                p=p->lchild ;        // p进栈 不输出 p 这是开始指向左孩子





093

            }





094

 





095

        }





096

        else





097

        {





098

            cout<<s.top()->data;   // 既 左 孩子的 数据





099

            p = s.top()->rchild ; // 既 将 p 变为空   下次 在 进入 else 里面 执行 ：





100

            s.pop();                //  此 题 必须 动手画图 以便于 理解    二叉树  和 栈 图 





101

        }





102

    }





103

}





104

 





105

void PostOrderTraverse (BiTree T )





106

{





107

    stack<BiTree> s; 





108

    stack<bool> bs;





109

    BiTree p = T ;





110

    while (s.empty()==false || p )





111

    {





112

        if (p)





113

        {





114

            while(p)





115

            {





116

                s.push(p);





117

                bs.push(false);





118

                p=p->lchild ;         // 当lchild 为空 时  p为空 那么跳出循环 p为空





119

            }                        //  下次大while 是以 栈 s 来判断循环的  直接进入下面 else 





120

        }





121

        else





122

        {





123

            if(bs.top())                // 此时 bs.top 的值 为false   故 直接 进入else 执行 





124

                                     





125

            {                       //  最好动笔 画出图形 便于理解





126

                cout<<s.top()->data ;





127

                s.pop();





128

                bs.pop();





129

 





130

            }





131

            else





132

                bs.top()=true,p=s.top()->rchild ;  





133

 





134

        }





135

    }





136

}



举报



开源中国-程序员在线工具：API文档大全(120+) JS在线编辑演示 二维码更多»

 


相关的代码(452)
0回/70阅[C/C++]向系统服务进程注入DLL13小时前 By DDT
0回/57阅[C/C++]IOS计算某个日期和当前时间的天数差3天前 By 南宁小怪
2回/255阅[C/C++]c语言实现unicode到UTF-8的编码5天前 By yangyanjun
0回/119阅[C/C++]远程创建Windows Shell服务6天前 By DDT
0回/118阅[C/C++]远程安装卸载服务9天前 By DDT
0回/293阅[C/C++]简单的bitmap实现10天前 By sundaqing
1回/142阅[C/C++]远程重启IIS或添加系统账号10天前 By DDT
2回/597阅[C/C++] C/C++连接查询MYSQL17天前 By mickelfeng
1回/162阅[C/C++]制作语音压缩算法MELP的dll动态链接库17天前 By bubifengyun
显示所有 »

发表评论回到顶部网友评论(0)


暂无网友评论














 







回到顶部   回到评论列表

开源从代码分享开始 分享代码



904380861的其他代码二叉树的前中后遍历 （有详细注释 呵呵 ）(0评/196阅,2天前)
全部(1)...
 





















© 开源中国(OsChina.NET) | 关于我们 | 广告联系 | @新浪微博 | 开源中国手机版 | 粤ICP备12009483号-3
 
开源中国手机客户端：AndroidiPhoneWP7 




















2条新留言，查看留言»




