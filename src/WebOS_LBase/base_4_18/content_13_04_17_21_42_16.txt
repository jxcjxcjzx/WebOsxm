

首页
开源软件
讨论区






代码分享
博客
翻译
资讯
移动开发




招聘

你好2,您好 我的空间







 |  添加软件 | 投递新闻 | 退出
 

开源中国 
代码分享
 当前位置：代码分享 » C/C++ » Qt 图形界面开发 
搜 索 









Qt键盘驱动处理类的实现

水海云 发布于 2012年04月02日 22时, 4评/758阅


 


分享到 

新浪微博腾讯微博


收藏+8

踩顶0
 

Qt键盘驱动处理类的实现，通过Qt的插件机制实现嵌入式开发中的自定义键盘处理。

标签：<无> 




代码片段(4)


[文件] MyKeyDriverPlugin.h ~ 387B    下载(49)



view source

print?




01

﻿//键盘插件的实现





02

//MyKeyDriverPlugin.h文件 





03

class MyKeyDriverPlugin : public QKbdDriverPlugin 





04

{ 





05

    Q_OBJECT 





06

public: 





07

    MyKeyDriverPlugin(QObject *parent = 0); 





08

    ~MyKeyDriverPlugin(); 





09

 





10

    QWSKeyboardHandler *create(const QString &driver, const QString &device); 





11

    QWSKeyboardHandler *create(const QString &driver); 





12

    QStringList keys() const; 





13

};



[文件] MyKeyDriverPlugin.cpp ~ 1001B    下载(35)










01

﻿//插件类的实现文件 





02

MyKeyDriverPlugin::MyKeyDriverPlugin(QObject *parent) 





03

{ 





04

     





05

} 





06

 





07

MyKeyDriverPlugin::~MyKeyDriverPlugin() 





08

{ 





09

} 





10

 





11

QStringList MyKeyDriverPlugin::keys() const





12

{ 





13

    return QStringList() << "i2c"; 





14

} 





15

// 





16

// The create() functions are responsible for returning an instance of 





17

// the keypad driver. We do this only if the driver parameter matches our key. 





18

// 





19

QWSKeyboardHandler *MyKeyDriverPlugin::create(const QString &driver, const QString &device) 





20

{ 





21

    qDebug("MyKeyDriverPlugin::create###: %s\n",driver.toLocal8Bit().constData()); 





22

    if (driver.toLower() == "i2c") 





23

    { 





24

        qDebug("Before creating MyKeyHandler\n"); 





25

        return new MyKeyHandler(device); 





26

    } 





27

 





28

    return 0; 





29

} 





30

 





31

QWSKeyboardHandler *MyKeyDriverPlugin::create(const QString &driver) 





32

{ 





33

    if (driver.toLower() == "i2c") 





34

    { 





35

        qDebug("Before creating MyKeyHandler"); 





36

        return new MyKeyHandler(); 





37

    } 





38

 





39

    return 0; 





40

}



[文件] MyKeyHandler.h ~ 350B    下载(33)










01

﻿//键盘驱动的实现





02

//MyKeyHandler.h文件 





03

class MyKeyHandler : public QObject, public QWSKeyboardHandler 





04

{ 





05

    Q_OBJECT 





06

public: 





07

    MyKeyHandler(const QString &device = QString("/dev/i2c-1")); 





08

    ~MyKeyHandler(); 





09

 





10

private: 





11

    QSocketNotifier *m_notifier; 





12

    int kbdFd; 





13

 





14

private slots: 





15

    void readKpdData(); 





16

};



[文件] MyKeyHandler.cpp ~ 3KB    下载(32)










01

﻿//类的实现文件 





02

struct InputData 





03

{ 





04

    unsigned int dummy1; 





05

    unsigned short type; 





06

    unsigned short code; 





07

    unsigned int value; 





08

    unsigned int dummy2; 





09

}; 





10

 





11

MyKeyHandler::MyKeyHandler(const QString &device) 





12

{ 





13

    setObjectName("I2C Keypad Handler"); 





14

    this->kbdFd = ::open(device.toLocal8Bit().constData(), O_RDONLY, 0); 





15

 





16

    if (kbdFd > 0) 





17

    { 





18

        qDebug("%s opened as keyboard input.\n", device.toLocal8Bit().constData()); 





19

        //g_Log.Debugf(LOG_DETAIL_TRACE, 0, L"%s opened as keyboard input.", device.toLocal8Bit().constData()); 





20

        this->m_notifier = new QSocketNotifier(kbdFd, QSocketNotifier::Read, this); 





21

        connect(this->m_notifier, SIGNAL(activated(int)), this, SLOT(readKpdData())); 





22

    } 





23

    else





24

    { 





25

        qDebug("Cannot open %s for keyboard input. (%s)", 





26

                     device.toLocal8Bit().constData(), strerror(errno)); 





27

        //g_Log.Errorf(LOG_DETAIL_IMPORTANT, 0, L"Cannot open %s for keyboard input. (%s)", 





28

        //             device.toLocal8Bit().constData(), strerror(errno)); 





29

        return; 





30

    } 





31

} 





32

 





33

MyKeyHandler::~MyKeyHandler() 





34

{ 





35

    if (kbdFd > 0) 





36

        ::close(kbdFd); 





37

} 





38

 





39

// Key function 





40

void MyKeyHandler::readKpdData() 





41

{ 





42

    InputData event; 





43

 





44

    int n = read(kbdFd, &event, sizeof(InputData)); 





45

    if (n != sizeof(InputData)) 





46

    { 





47

        qDebug("key pressed: n=%d\n", n); 





48

        //g_Log.Debugf(LOG_DETAIL_TRACE, 0, L"key pressed: n=%d", n); 





49

        return; 





50

    } 





51

 





52

    qDebug("key pressed: type=%d, code=0x%x, value=%d, %s\n", 





53

                 event.type, event.code, event.value, (event.value != 0)? "(Down)" : "(Up)"); 





54

    //g_Log.Debugf(LOG_DETAIL_TRACE, 0, L"key pressed: type=%d, code=%d, value=%d, %s", 





55

    //             event.type, event.code, event.value, (event.value != 0)? "(Down)" : "(Up)"); 





56

 





57

    Qt::KeyboardModifiers modifiers = Qt::NoModifier; 





58

    int unicode = 0xffff; 





59

    int key_code = 0; 





60

 





61

    // 可以根据自己特定的硬件值来设定。 





62

    switch (event.code) 





63

    { 





64

        case 0x2: 





65

            key_code = Qt::Key_1; 





66

            unicode = '1'; 





67

            break; 





68

        case 0x110: 





69

            key_code = Qt::Key_Context1; 





70

            unicode = 0xffff; 





71

            break; 





72

        case 0x100: 





73

            key_code = Qt::Key_Back; 





74

            unicode = 0xffff; 





75

            break; 





76

        default: 





77

 





78

            break; 





79

    } 





80

    this->processKeyEvent(unicode, key_code, modifiers, event.value != 0, false); 





81

}



举报



开源中国-程序员在线工具：API文档大全(120+) JS在线编辑演示 二维码更多»

 


相关的代码(83)
1回/353阅[C/C++]GUI电子表格3天前 By Bephax*
0回/206阅[C/C++]硬盘文件备份工具2.03天前 By pingdan32
0回/112阅[C/C++]将一个源目录下的所有文件备份到目的目录下，只备份目标目录中不存在的文件。6天前 By pingdan32
0回/82阅[C/C++]正则表达式简易测试8天前 By 稀饭桶子
1回/674阅[C/C++]Qt显示网络图片23天前 By 无脸程序员
1回/740阅[C/C++]贪吃蛇游戏1个月前 By cool609
6回/384阅[C/C++]linux下的图形化串口调试工具1个月前 By 飞扬青云
0回/674阅[C/C++]QT获取网页内容1个月前 By solookin
10回/2011阅[C/C++]蛇年中小企业用抽奖程序2个月前 By 龍禳
3回/749阅[C/C++]做了一个qt版的计算器，并能在ARM6410上运行！3个月前 By 蒯翔
显示所有 »

发表评论回到顶部网友评论(4)







 1楼：angle1202 发表于 2012-04-22 11:30 回复此评论


程序虽然不长，有些看不懂，我学了一段时间Qt了，但是还是学到的是皮毛，我需要做个有键盘输入的Qt程序，希望能向你请教下，我的QQ2374881702

 







2楼：水海云 发表于 2012-04-22 16:59 回复此评论



引用来自“angle1202”的评论


程序虽然不长，有些看不懂，我学了一段时间Qt了，但是还是学到的是皮毛，我需要做个有键盘输入的Qt程序，希望能向你请教下，我的QQ2374881702
上面的键盘插件代码主要是在嵌入式QT开发中才会用到的，一般的桌面qt开发只需要重载keypressevent事件函数就可以了
 







3楼：angle1202 发表于 2012-05-16 14:27 回复此评论

 你在调试程序的时候有没有遇到这样的问题，程序下到板子上之后运行的时候串口终端显示这个QWSLock::up(): Invalid argument 
我是Qt进程中用process调用另外Qt编写的程序的时候出现的错误 










4楼：remme 发表于 2012-09-25 15:53 回复此评论



引用来自“angle1202”的评论


程序虽然不长，有些看不懂，我学了一段时间Qt了，但是还是学到的是皮毛，我需要做个有键盘输入的Qt程序，希望能向你请教下，我的QQ2374881702
要实现屏幕键盘的话需要实现inputmethod，跟这篇文章不一样。
 























回到顶部   回到评论列表

开源从代码分享开始 分享代码



水海云的其他代码sed替换文件中的空格或tab键为指定的单分隔符(0评/160阅,28天前)
ASCII 8*16和16*24字模集及显示方法(2评/179阅,1个月前)
从日志文件中提取不同线程的日志(0评/135阅,2个月前)
统计linux不同运行状态的进程个数及进程名(0评/285阅,2个月前)
Qt中streamreader方式实现xml文件的读写(0评/577阅,1年前)
全部(7)...
 





















© 开源中国(OsChina.NET) | 关于我们 | 广告联系 | @新浪微博 | 开源中国手机版 | 粤ICP备12009483号-3
 
开源中国手机客户端：AndroidiPhoneWP7 




















2条新留言，查看留言»




