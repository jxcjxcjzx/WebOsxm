
您还未登录！|登录|注册|帮助
 首页
 业界
 移动
 云计算
 研发
 论坛
 博客
 下载
 
更多
 









陈勇的博客 - Scrum 敏捷开发培训咨询，绩效管理，团队管理，《火星人敏捷开发手册》

敏捷开发培训咨询 敏捷开发免费工具 免费培训教材《火星人敏捷开发手册》 IIOM咨询总监 火星人首席架构师


 


目录视图
摘要视图
订阅
 . 



【免费】全新海外营销策论分享        CSDN社区4月技术大分享活动火爆开始      写“书评”赢下载分！ 
公告：CSDN新版首页上线      欢迎关注CSDN产品客服微博      专访熊攀峰：HTML5时代 Flash仍是座宝藏 



敏捷开发一千零一问系列之三十三：每天编码多少行？ 
.
 分类： 敏捷开发敏捷开发一千零一问系列2013-04-11 10:442820人阅读评论(18)收藏举报



目录(?)[+]








 

这是敏捷开发一千零一问系列的第三十三篇。（在这里提问，之一，之二，之三，问题总目录）


原问题来自http://blog.csdn.net/cheny_com/article/details/6594507#comments六楼，经读者同意，摘录如下：




“一般而言，大致每天高手能编写100多行有效代码（按分号计数），新手会多一些但也不超过200（他们编写代码比较费）。” 从整年平均来说，这个数据是不是有点大？记得在你的哪篇博客里有提到，你说过你工作的4-5年间，仅写了2万行代码而已——平均一天不到20行啊。我以前一直认为日均100行大概是一个主流行情，我所经历的项目大概是这个水平，那是因为我们项目是从零做起，而且界面较多，编码难度不大（但业务难度较大）。最近我们的项目要产品化，修修补补了一年多，突然发现，即使对我们的软件，也肯定不到日均100行啊。大部分时间在调试；改BUG；因需求调整，而做一些修改（修改人可能和开发者不是同一个人了），这时对原来代码有一个重新学习的过程（就是捋一遍）。------- 这其实是代码质量差的表现之一。所以我越来越想在项目中引入结对编程，以此提高质量，减少返工和重新学习代码所需要的时间。

（结对编程）你觉得可行吗？


答（原答案有扩充）




原问题实际上分为两个部分，但都与编码速度有关。分别回答。

关于编码速度




大致的编码速度




“高手每天100行”是编码阶段的速度，也就是如果今天这个人在编码，那么差不多能出来100行。平均到全生命周期，比如每年，大约是40～50行（这个也偏高，等等说）。我个人在之前说的那个团队的工作中只有一半时间在编程，还有很多时间做别的。一个是数字电视的安全协议构建+IC卡外协之类的工作，另外一个是穿插到别的子团队帮别人做设计（这个可以说是松结对的来源）。

补充：我在2002年左右精确计数了一个项目的开发过程，是一个小瀑布模型，编码期27天日均编码108行，整个周期日均编码46行。两年前开始的火星人项目，编码时的日均编码速度也是100行左右。不过后来有了L型代码结构，编码速度明显下降了，一周可能只编写100～200行代码，多数时间用在界面设计上。这不是说“设计时间长了，编码时间短了”，而是说L型代码结构主要是代码装配过程，效率极高，因此“不太需要长时间编码”。

为何精简的代码速度更高




国外业界有一个说法：无论采用何种语言，编码的速度基本相同。比如如果用汇编，一天100行，那么用C++，也差不多是100行。因此，越高级的语言，越能节省代码。

另外一个则是：越精简的语言，越能节省代码，包括同一种语言。神奇的是，高手用精简的语言编写代码也能一天编写100行；而新手乍看能用1000行烂代码实现相同功能，而且时间也是一天。差别到底是什么呢？

首先，高手和而不同，新手同而不和。

如果10个高手看另外一个高手的100行代码，会说：“恩，差不多，让我做也差不多这个样子”。错误实现的路径很多，正确实现的路径相当有限。即使存在少量多个最佳实现，多数高手在采纳其中一个的同时，也曾经思考过别的方法。10个新手看另外一个新手的1000行代码，就不那么容易了。我们想象中的“冗长但容易理解的代码”，其实是对编写者而言的，旁观者其实很难看懂。我见过一个有44个return总长度550行的函数，最后总算变成110行，只有不到10个return了（多数都在函数开头）；另外一个则是4000行代码65个函数，被改成2个函数，加在一起不到55行。这些情况下，无论高手或新手都会认同后者更容易阅读和理解，实际上连原编写者写完后也有同感。而冗长代码别说新手能不能看懂，高手也得看一阵子才明白。

其次，精简的代码中有正代码，冗长的代码中有负代码。

为了精简代码，难免会用到类、函数、泛型这类封装。这些封装不但现在会用到，未来也会重用，从而大大节省未来的编码量——或者说未来编码速度不会有提高，甚至有下降，但功能产生的速度反而提高了（这正是之前提到的“火星人”中L型代码结构的现状）。除了重用产生的编程速度之外，由于重用的质量高于新代码（有前提但可实现），所以还节省了测试时间。

而冗长代码则有“负代码”。在围棋里边有个术语叫做“负目”，就是如果有一块孤棋，对方可能通过攻击而得利，那么在计算其所围面积的时候，要保守一些甚至减掉一些。冗长代码也是如此。无论是测试、尝试复用、修改需求、修改设计、修改其中的缺陷、转交给他人维护，冗长代码都会在未来产生额外的工作量。

再次，邀请新手向高手靠拢是一种正能量，而要求高手向新手妥协是一种负能量。

这也是本人为何极力推崇松结对编程和139团队的原因，一个团队的最佳状态显然是：编写高质量代码 + 高手帮助新手理解和编写高质量代码。我们当年那个25个人的团队在短短半年左右就差不多做到了这一点，而团队的多数人工作经验都小于4年（本人当时6年，是长的）。

所以不需要也不应该对中间状态有任何幻想和耐心。


关于编码的质量要求与编码速度的关系



感觉结对编程可行（不过推荐松结对），不过重构后的产品的函数、类一定要短、小，嵌套层数可以多一些。这样的好处是以后如果又要重构，多数情况下都不需要动每个函数，只要重构某些即可。
对质量而言，应该高到不会有明显在“改Bug”的时期，应该每个人回忆起来，除了干别的就是编码，很少能记起某段时间在调试Bug。这样编码速度和编码占整个时间的比例就会更高。反正你统计一下就可能发现：高手可以一天100行，平均到一年是50行；而新手可能一天1000行，平均到一年却不是100行，而是更少，因为有很多时间在改Bug。这种状态下，不如让他们跟着高手先精心写好一些代码，再继续前进，否则累死。

 
分享到： 

上一篇：敏捷开发般若敏捷系列之十三：传播敏捷十戒（一）
 .
顶25踩0. 


查看评论
 
18楼 a812872970 3小时前发表[回复] 学习了17楼 chongzi777 4小时前发表[回复] 可惜很多公司没多少所谓的高手了。。。16楼 java597302241 5小时前发表[回复] 学习了15楼 u010263681 6小时前发表[回复] 厉害14楼 longshaohe49 7小时前发表[回复] 讲得很好，不错不错！13楼 huchunhua001 7小时前发表[回复] 不错，不错12楼 zhchg634360230 8小时前发表[回复] 不错，受教11楼 lhtry 10小时前发表[回复] 学习了10楼 分割线忧伤 10小时前发表[回复] Mark9楼 qq8618 12小时前发表[回复] 受教8楼 zly5468381 12小时前发表[回复] 学习了7楼 刘正权 13小时前发表[回复] 感谢分享。6楼 xmayyang 13小时前发表[回复] 日均80行。5楼 junz081207 昨天 23:12发表[回复] 往100行奋斗4楼 六块腹肌的小牛犊 昨天 19:41发表[回复] 受教3楼 u010258533 昨天 18:53发表[回复] 不错啊，，2楼 KingViker 昨天 18:17发表[回复] 受教了1楼 woods2001 昨天 18:00发表[回复] 受教了
 


您还没有登录,请[登录]或[注册]
 
* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场
 








个人资料

cheny_com
 





访问：1635564次
积分：22974分
排名：第58名
.原创：318篇
转载：16篇
译文：3篇
评论：2310条
. 
文章搜索

. 
博客专栏




敏捷开发日常跟进系列
文章：7篇
阅读：35535 





敏捷开发一千零一问系列
文章：33篇
阅读：226892 





敏捷开发团队管理系列
文章：7篇
阅读：47533 





敏捷开发般若敏捷系列
文章：12篇
阅读：55657 





敏捷开发智慧敏捷系列
文章：6篇
阅读：24827 





敏捷开发产品管理系列
文章：8篇
阅读：35043 





敏捷开发外包工程系列
文章：8篇
阅读：30217 





敏捷开发生态系统系列
文章：5篇
阅读：9263 





敏捷开发用户故事系列
文章：27篇
阅读：156148 





IT职场人生系列
文章：25篇
阅读：317849 





敏捷开发松结对编程系列
文章：18篇
阅读：99793 





敏捷开发绩效管理系列
文章：10篇
阅读：44208 

最新评论 敏捷开发一千零一问系列之三十三：每天编码多少行？
a812872970: 学习了 

敏捷开发“松结对编程”系列之十二：L型代码结构（质量篇之一）
快乐小左: @ynwso:sorry,上面发错了，是回复2楼的 

敏捷开发“松结对编程”系列之十二：L型代码结构（质量篇之一）
快乐小左: @gengchenhui:“将任务分解到3个小时以内、是否可TDD用代码执行”，这是讲起来容易实践起... 

敏捷开发一千零一问系列之三十三：每天编码多少行？
chongzi777: 可惜很多公司没多少所谓的高手了。。。 

IT职场人生系列之十七：入职（高手篇）
scuwangfeng: 闲下来发现这一系列的博文，择其善者而从之吧。谢一个 

敏捷开发一千零一问系列之十九：提问帖
cheny_com: @u010269344:这个敏捷开发里边没有提到过。因为敏捷开发的发明者都不是关心这个职位的人。不过... 

敏捷开发一千零一问系列之三十三：每天编码多少行？
java597302241: 学习了 

敏捷开发一千零一问系列之三十三：每天编码多少行？
u010263681: 厉害 

敏捷开发一千零一问系列之十九：提问帖
u010269344: 请教关于敏捷立项的问题，敏捷项目在立项时目标和整体规划都不是特别明确，怎么编写立项申请书？有没有可以... 

敏捷开发一千零一问系列之三十三：每天编码多少行？
longshaohe49: 讲得很好，不错不错！ 


文章分类火星人(53)
敏捷开发一千零一问系列(33)
敏捷开发团队管理系列(6)
敏捷开发般若敏捷系列(13)
敏捷开发智慧敏捷系列(6)
敏捷开发用户故事系列(31)
敏捷开发产品管理系列(12)
敏捷开发外包工程系列(4)
敏捷开发绩效管理系列(10)
敏捷开发松结对编程系列(19)
敏捷开发与CMMI系列(3)
敏捷开发生态系统系列(5)
IT职场人生系列(21)
火星人谚语系列(8)
项目经理的商务指南系列(4)
度量分析(4)
Subversion, TortoieseSVN(0)
敏捷开发(188)
软件外包(5)
ASP.net：MVC/LINQ/SQL/Web(50)
绩效管理(27)
产品管理(9)
培训扩展阅读(16)
Subversion(1)
TortoieseSVN(2)
团队管理(32)
SSE(SQL Server Express)(5)
企业管理(34)
企业文化(33)
职场人生(45)
IT解局(9)
CMMI(5)
图书推荐(3)
SSCE (SQL Server CE)(3)
Web: WebMatrix MojoPortal SQLCE(3)
生活大爆炸(0)
生活大爆炸系列(2)
敏捷开发日常跟进系列(4)
敏捷开发一千零一夜(3)
 
文章存档
2013年04月(1).
2013年03月(5).
2013年02月(4).
2013年01月(5).
2012年12月(10).
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

展开.
 
阅读排行IT职场人生系列之十八：危险职业（上）(41798)
【正式发布】火星人敏捷开发手册2012-12-25（基于Scrum的敏捷开发免费培训教材及公司内部宣传材料）(31206)
IT职场人生系列之二十三：知识体系（专家与杂家）(23888)
腾讯副总裁吴军答腾讯的“抄袭与创新”（互联网行业的商业智慧）(19532)
IT职场人生系列之二十：危险职业（续1）(19494)
IT职场人生系列之十九：危险职业（中）(19309)
IT职场人生系列之二十：危险职业（下）(18356)
“实践软件工程”：未来40年软件工程趋势预测（一）(17374)
IT职场人生系列之十：创业观(16602)
企业实施单元测试现状调查（浙江大学管理学院 李云）(15886)
 
推荐文章 
评论排行腾讯副总裁吴军答腾讯的“抄袭与创新”（互联网行业的商业智慧）(161)
【正式发布】火星人敏捷开发手册2012-12-25（基于Scrum的敏捷开发免费培训教材及公司内部宣传材料）(108)
IT职场人生系列之十八：危险职业（上）(103)
IT职场人生系列之二十三：知识体系（专家与杂家）(95)
IT职场人生系列之二十四：程序员如何增加收入(72)
IT职场人生系列之十二：语言与技术I(58)
IT职场人生系列之二十：危险职业（下）(50)
程序与书法(48)
IT职场人生系列之十：创业观(43)
敏捷开发一千零一问系列之十九：提问帖(39)
 

. 
公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告QQ客服 微博客服 论坛反馈 联系邮箱：webmaster@csdn.net 服务热线：400-600-2320京 ICP 证 070598 号北京创新乐知信息技术有限公司 版权所有世纪乐知(北京)网络技术有限公司 提供技术支持江苏乐知网络技术有限公司 提供商务支持Copyright © 1999-2012, CSDN.NET, All Rights Reserved  
