

首页
开源软件
讨论区






代码分享
博客
翻译
资讯
移动开发




招聘

你好2,您好 我的空间







 |  添加软件 | 投递新闻 | 退出
 

开源中国 
代码分享
 当前位置：代码分享 » C/C++ » 常规C/C++编程 » 常用工具方法 
搜 索 









简单的bitmap实现

sundaqing 发布于 2013年04月07日 21时, 0评/293阅


 


分享到 

新浪微博腾讯微博


收藏+2

踩顶0
 

实现bitmap的创建，设置和获取指定位置的bit的值以及遍历bitmap。

标签：<无> 




代码片段(4)


[代码] [C/C++]代码



view source

print?




01

#include <sys/types.h>





02

#include <stdio.h>





03

#include <stdlib.h>





04

#include <unistd.h>





05

#include <string.h>





06

#include "bitmap.h"





07

 





08

static size_t bitmap_size = 0;





09

 





10

/*





11

 * create a bitmap





12

 * arg:max_size: maxmum bits the bitmap have





13

 * arg:bits_array:bitmap handle.





14

 */





15

bitmap_status init_bitmap(uint_32 max_size,bitmap_t *bits_array)





16

{





17

    bitmap_t bits = (bitmap_t) malloc(max_size/bit_num_byte + 1);





18

    if(!bits)





19

    {





20

        return bitmap_error_no_memory;





21

    }





22

 





23

    bzero(bits, max_size /bit_num_byte + 1);





24

    bitmap_size = max_size;





25

    *bits_array = bits;





26

 





27

    return bitmap_suceess;





28

}





29

 





30

bitmap_status deinit_bitmap(bitmap_t bitmap)





31

{





32

    bitmap_size = 0;





33

    free(bitmap);





34

    return bitmap_suceess;





35

}





36

 





37

bitmap_status set_value_true(bitmap_t bitmap, uint_32 pos)





38

{





39

    unsigned int base = 1;





40

 





41

    if(pos>=bitmap_size)





42

    {





43

        return bitmap_error_out_of_range;





44

    }





45

 





46

    uint_32 index = pos / bit_num_byte;//get the index in array





47

    uint_32 pos_offset = bit_num_byte - pos % bit_num_byte - 1;//get the offset in word





48

    bitmap[index] |= (base << pos_offset);





49

 





50

    return bitmap_suceess;





51

}





52

 





53

bitmap_status set_value_false(bitmap_t bitmap, uint_32 pos)





54

{





55

    if(pos>=bitmap_size)





56

    {





57

        return bitmap_error_out_of_range;





58

    }





59

 





60

    uint_32 index = pos;//get the index in array





61

    uint_32 pos_offset = bit_num_byte - pos%bit_num_byte - 1;//get the offset in word





62

    bitmap[index] &= ~(1 << pos_offset);





63

 





64

    return bitmap_suceess;





65

}





66

 





67

int get_value_bitmap(bitmap_t bitmap, uint_32 pos)





68

{





69

    if(pos>=bitmap_size)





70

    {





71

        return bitmap_error_out_of_range;





72

    }





73

 





74

    uint_32 index = pos / bit_num_byte;//get the index in array





75

    uint_32 pos_offset = bit_num_byte - pos % bit_num_byte - 1;//get the offset in word





76

    return bitmap[index] & (1 << pos_offset);





77

}





78

 





79

bitmap_status traverse_bipmap(bitmap_t bitmap, callback traverse_call,void *userdata)





80

{





81

    int i = 0;





82

    for (i = 0; i < bitmap_size; i++)





83

    {





84

        traverse_call(i, get_value_bitmap(bitmap, i),userdata);





85

    }





86

    return bitmap_suceess;





87

}



[代码] [C/C++]代码










01

#include <sys/types.h>





02

#include <stdio.h>





03

#include <stdlib.h>





04

#include <unistd.h>





05

#include <string.h>





06

#include "bitmap.h"





07

 





08

void mycall(uint_32 pos, bool value,void *userdata)





09

{





10

    if (value)





11

    {





12

        printf("%d\n", pos);





13

    }





14

 





15

    return;





16

}





17

 





18

int main(int argc, char const *argv[])





19

{





20

    uint_32 a[] ={2, 3, 45, 64, 23, 53, 46, 7, 8, 11, 99, 0};





21

    uint_32 i = 0;





22

 





23

    bitmap_t bitmap_100 = init_bitmap(100);





24

    for (i = 0; i < sizeof(a) / sizeof(uint_32); i++)





25

    {





26

        set_value_true(bitmap_100, a[i]);





27

    }





28

 





29

    traverse_bipmap(bitmap_100, mycall);





30

    printf("\n");





31

    return 0;





32

}



[文件] bitmap.c ~ 2KB    下载(1)










001

#include <sys/types.h>





002

#include <stdio.h>





003

#include <stdlib.h>





004

#include <unistd.h>





005

#include <string.h>





006

#include "bitmap.h"





007

 





008

static size_t bitmap_size = 0;





009

 





010

/*





011

 * create a bitmap





012

 * arg:max_size: maxmum bits the bitmap have





013

 * arg:bits_array:bitmap handle.





014

 */





015

bitmap_status init_bitmap(uint_32 max_size,bitmap_t *bits_array)





016

{





017

    bitmap_t bits = (bitmap_t) malloc(max_size/bit_num_byte + 1);





018

    if(!bits)





019

    {





020

        return bitmap_error_no_memory;





021

    }





022

 





023

    bzero(bits, max_size /bit_num_byte + 1);





024

    bitmap_size = max_size;





025

    *bits_array = bits;





026

 





027

    return bitmap_suceess;





028

}





029

 





030

bitmap_status deinit_bitmap(bitmap_t bitmap)





031

{





032

    bitmap_size = 0;





033

    free(bitmap);





034

    return bitmap_suceess;





035

}





036

 





037

bitmap_status set_value_true(bitmap_t bitmap, uint_32 pos)





038

{





039

    unsigned int base = 1;





040

 





041

    if(pos>=bitmap_size)





042

    {





043

        return bitmap_error_out_of_range;





044

    }





045

 





046

    uint_32 index = pos / bit_num_byte;//get the index in array





047

    uint_32 pos_offset = bit_num_byte - pos % bit_num_byte - 1;//get the offset in word





048

    bitmap[index] |= (base << pos_offset);





049

 





050

    return bitmap_suceess;





051

}





052

 





053

bitmap_status set_value_false(bitmap_t bitmap, uint_32 pos)





054

{





055

    if(pos>=bitmap_size)





056

    {





057

        return bitmap_error_out_of_range;





058

    }





059

 





060

    uint_32 index = pos;//get the index in array





061

    uint_32 pos_offset = bit_num_byte - pos%bit_num_byte - 1;//get the offset in word





062

    bitmap[index] &= ~(1 << pos_offset);





063

 





064

    return bitmap_suceess;





065

}





066

 





067

int get_value_bitmap(bitmap_t bitmap, uint_32 pos)





068

{





069

    if(pos>=bitmap_size)





070

    {





071

        return bitmap_error_out_of_range;





072

    }





073

 





074

    uint_32 index = pos / bit_num_byte;//get the index in array





075

    uint_32 pos_offset = bit_num_byte - pos % bit_num_byte - 1;//get the offset in word





076

    return bitmap[index] & (1 << pos_offset);





077

}





078

 





079

bitmap_status traverse_bipmap(bitmap_t bitmap, callback traverse_call,void *userdata)





080

{





081

    int i = 0;





082

    for (i = 0; i < bitmap_size; i++)





083

    {





084

        traverse_call(i, get_value_bitmap(bitmap, i),userdata);





085

    }





086

    return bitmap_suceess;





087

}





088

 





089

 





090

 





091

#if 0





092

int main(int argc, char const *argv[])





093

{





094

    uint_32 a[] ={2, 3, 45, 64, 23, 53, 46, 7, 8, 11, 99, 0};





095

    uint_32 i = 0;





096

 





097

    bitmap_t bitmap_100 = init_bitmap(100);





098

    for (i = 0; i < sizeof(a) / sizeof(uint_32); i++)





099

    {





100

        set_value_true(bitmap_100, a[i]);





101

    }





102

 





103

    traverse_bipmap(bitmap_100, mycall);





104

    printf("\n");





105

    return 0;





106

}





107

#endif



[文件] bitmap.h ~ 849B    下载(1)










01

/*





02

 * bitmap.h





03

 *





04

 *  Created on: Apr 4, 2013





05

 *      Author: sundq





06

 */





07

 





08

#ifndef BITMAP_H_





09

#define BITMAP_H_





10

 





11

#define bit_num_byte sizeof(char)





12

 





13

typedef enum





14

{





15

    false,





16

    true





17

} bool;





18

 





19

typedef enum





20

{





21

    bitmap_suceess,





22

    bitmap_error_out_of_range = 2,





23

    bitmap_error_no_memory,





24

    bitmap_error_repetition





25

}bitmap_status;;





26

 





27

typedef unsigned char * bitmap_t;





28

typedef unsigned int uint_32;





29

typedef void (*callback)(uint_32 bit_index, bool value,void *userdata);





30

 





31

 





32

 





33

bitmap_status init_bitmap(uint_32 max_size,bitmap_t *bits_array);





34

bitmap_status deinit_bitmap(bitmap_t bitmap);





35

bitmap_status set_value_true(bitmap_t bitmap, uint_32 pos);





36

bitmap_status set_value_false(bitmap_t bitmap, uint_32 pos);





37

int get_value_bitmap(bitmap_t bitmap, uint_32 pos);





38

bitmap_status traverse_bipmap(bitmap_t bitmap, callback traverse_call,void *userdata);





39

#endif /* BITMAP_H_ */



举报



开源中国-程序员在线工具：API文档大全(120+) JS在线编辑演示 二维码更多»

 


相关的代码(452)
0回/70阅[C/C++]向系统服务进程注入DLL13小时前 By DDT
0回/196阅[C/C++]二叉树的前中后遍历 （有详细注释 呵呵 ）2天前 By 904380861
0回/57阅[C/C++]IOS计算某个日期和当前时间的天数差3天前 By 南宁小怪
2回/255阅[C/C++]c语言实现unicode到UTF-8的编码5天前 By yangyanjun
0回/119阅[C/C++]远程创建Windows Shell服务6天前 By DDT
0回/118阅[C/C++]远程安装卸载服务9天前 By DDT
1回/142阅[C/C++]远程重启IIS或添加系统账号10天前 By DDT
2回/597阅[C/C++] C/C++连接查询MYSQL17天前 By mickelfeng
1回/162阅[C/C++]制作语音压缩算法MELP的dll动态链接库17天前 By bubifengyun
显示所有 »

发表评论回到顶部网友评论(0)


暂无网友评论














 







回到顶部   回到评论列表

开源从代码分享开始 分享代码



sundaqing的其他代码简单的bitmap实现(0评/293阅,10天前)
linux下ipv4 ipv6无关性的socket编程(2评/147阅,17天前)
linux c代码批量宏展开(2评/111阅,20天前)
全部(3)...
 





















© 开源中国(OsChina.NET) | 关于我们 | 广告联系 | @新浪微博 | 开源中国手机版 | 粤ICP备12009483号-3
 
开源中国手机客户端：AndroidiPhoneWP7 




















2条新留言，查看留言»




