您还未登录！|登录|注册|帮助首页业界移动云计算研发论坛博客下载
更多

业界移动开发云计算软件研发专题程序员杂志极客头条
编程语言开放平台HTML5前端开发智能算法架构开源数据库


订阅软件研发RSS CSDN首页> 软件研发
如何激励同事编写单元测试？
发表于2013-03-18 16:47| 6846次阅读| 来源CSDN| 115 条评论| 作者夏梦竹
单元测试StackExchangeTDD
摘要：从管理人员到开发者，每个人都在说单元测试，但是却很少有人执行。Lurkerbelow深知单元测试带来的好处，也积极提倡单元测试，但公司同仁却对此毫无兴趣。无奈之下，Lurkerbelow在Stack Exchange发出上“求救”，抛出《如何激励同事进行单元测试？》的话题。
从管理人员到开发者，每个人都在说单元测试，但是却很少有人执行。有关单元测试的好处相信大家也能例举出一二，但很多时候，开发者面对自己的项目代码却无从下手。



Lurkerbelow在公司里是唯一执行单元测试的一名开发者，他深知单元测试带来的好处，也积极提倡单元测试。他甚至与公司的管理层人员、开发者都讨论过单元测试，但却无人对此感兴趣。 为了与开发人员形成一条战线，Lurkerbelow甚至“被迫“提交了代码审查（ Gerrit）和持续集成开发（ Jenkins）。

无奈之下，Lurkerbelow在 Stack Exchange发出上“求救”，抛出《如何激励同事进行单元测试？》的话题，引发了众多开发者的关注，纷纷献策。

对此， CSDN研发频道从中摘译了几个较为重要的观点与大家分享，希望能引起大家的共鸣。

实质的文档或许有帮助

jimmy_keen：我注意到几乎很少有公司在谈论TDD。人们更乐意看到最终结果。人人都说“编写单元测试将缩短开发时间”，这是似乎是真的，但这并不足以让人们相信。

我与你处在相同的位置（但不像你这么糟糕），开发者在代码问题上都能够自行解决（这里的代码是指单元测试）。某个项目停止更新时，本地的调查自然就会更进，进而找出问题所在。

然后，当我们进行单元测试时，如果测试被通过了，大多数问题会出现在最新的、未测试的代码中。如果不是，测试通常能够发现问题（至少找出了正确的方向）。我们修复Bug，再进行测试。

一句话，如果发生类似这样的情况，将会有超过2名开发者变成可TDD 测试爱好者（我们希望更多人参与）。

建议，你可以选择TDDkata将使用测试作为首选方法。

根据任务的复杂程度，非测试方法进程通常较为缓慢，尤其是当增量编码器需求发生更改时。

Roy's string calculator
Bank OCR
找出问题所在，“对症下药”

HLGEM：首先，要弄清楚为什么他们不喜欢写单元测试。 通常严格的时间进程表是导致其最大的原因。

其次，现有的大型未测试的代码基，编写单元测试工作量巨大。因此，开发者本能认为：“这太麻烦了，我得跳过去。”

另一个原因可能是，他们骨子里认为测试是个好方法，但他们在如何写测试上没有信心，尤其是他们从未接触过。究其根本原因，是开发者根本不会写单元测试！

还有一大原因是，他们没有看到这项额外的工作所带来的好处（利润）故放弃，即便是他们想提供这样的服务。

那么，对于以上这些情况该如何处理呢？

Reason 1：向开发者展示案例，如何节省开发时间。

Reason 2：告诉开发者在一年内能编写多少测试，代码基覆盖了多少比例。

算算这一年里他们写了多少测试，明年他们依然愿意这么做。一旦他们发觉每天都会进步一点点，思想上就会潜移默化了，从而产生质的变化。

如果可以的话，把系统数据拉出来，让他们知道在未经测试的代码中有多少重复Bug？进行单元测试的代码中又有多少重复bug？

Reason 3：培训，让开发者在培训班中编写测试。

Reason 4：这是问题的关键所在，首先，选择一个痛点，比如在某个项目中这些Bug被多次返回。在上述过程中，向管理部门提出建议，如果他们在这个项目中进行单元测试，那就不会出现不想见而又偏又见到的代码。

当然，作为开发人员，我们首先要学会自我管理。

写好单元测试，学会重构很重要

ElYusubov：我想先说说TDD的好处。

从正常人类的角度思考，开发者都是以利益为主，因为他们不想进行工作意外的事情。单元测试意味着更少的工作；意味着与朋友相处的时间更多；意味着有更多的乐趣，因为你无须每个夜晚编码工作到11点；也就意味着可以舒心的度过假期。

想要写好单元测试，学会重构是很重要的。这里补充几点：

1.编写测试代码建立基本的防护网；2.在单元测试和功能测试之间要有取舍，如果单元测试实施成本很高，可以先加功能测试；3.通过增加中间层来打破依赖，不是为了去掉依赖，而是为了后续的修改以及测试的便利；4.将第一步中编写的功能测试换成单元测试。

TDD最大的好处之一是，你可以重构程序获得更好的设计或者只需改变某个项目的名称……只要这种设计没有破坏测试，前提是你有100%的信心保证你的改变没有破坏任何东西。

TDD为遗留代码创建单元测试，这将出现重构。从长远的来说，这将有有助于改善你的代码基础知识，了解其优缺点以及代码中现有的的硬编码业务模块，为你提供一个良好的开端，为提高产品质量向前迈进。

更多精彩回答点击查看： Programmers.stackexchange 

英文出自： Arstechnica

 

什么是单元测试(Unit Testing)？

在计算机编程中，单元测试（又称为模块测试）是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。在过程化编程中，一个单元就是单个程序、函数、过程等；对于面向对象编程，最小单元就是方法，包括基类（超类）、抽象类、或者派生类（子类）中的方法。

为什么要做单元测试？

单元测试的目的，是将应用程序的所有源代码，隔离成最小的可测试的单元，保证每个单元的正确性。理想情况下，如果每个单元都能保证正确，就能保证应用程序整体相当程度的正确性。

另一方面，单元测试也是一种特殊类型的文档，相对于书面的文档，测试脚本本身往往就是对被测试代码的实际的使用代码，对于帮助开发人员理解被测试单元的使用是相当有帮助。

    
顶
27
 
踩
0
 
推荐阅读相关主题： 工作 编程 文档 border testing
相关文章最新报道
研发周报：王淮给技术创业团队的十点建议为什么程序员一天到晚都想说 FUCK！解读TDD的五大误区我的神呀，测试驱动开发真的有效！为什么函数式编程很重要：不一样的白板图iOS/Android训练营：我们只谈移动开发技术
已有115条评论

还可以再输入500个字


您还没有登录! 请 登录 或 注册
最新评论最热评论

oreak 2013-04-03 08:58
所谓单元测试 无非一个名字而已，长久以来就是这样的
1票，来自oreak+1 回复

稻草狗DavidGuo 2013-04-02 11:37 来自 新浪微博
不熟悉业务，怎么UT也是白搭~
+1 回复

陈小狗的风景与目光 2013-04-02 09:22 来自 新浪微博
回复@瑟颜瑟语: 呵呵，实际操作中，哪有这么简单的事情呀。真这么搞，那不成了六几年互相批斗了~~ [汗]
+1 回复

瑟颜瑟语 2013-04-02 09:11 来自 新浪微博
呵呵 自我批评远不如相互批评好玩 再来个人员抽奖匿名互换测试，测试出最多BUG的有肉吃。
+1 回复

Zodiac 2013-03-27 16:53 来自 新浪微博
回复@Harrie:是啊~
+1 回复

Zodiac 2013-03-27 16:53 来自 新浪微博
回复@Harrie:是啊~
+1 回复

Harrie 2013-03-27 10:06 来自 新浪微博
文字太长不利于转发，我刚才转发没成功，所以删除了两个字
+1 回复

Harrie 2013-03-27 10:05 来自 新浪微博
//@Zodiac: 我们一般总会以缺人、没时间或是这是测试人员写的这类来搪塞该问题。但说实话，的确存在@__wangqi__ 说的，测试代码很可能自己会绕过坑，所以应该互相写对方的测试CASE。当然，我也觉得凭着开发人者的懒惰心理。Code Review和持续集成的确是还算大家能接受的折中方法@蔡文渊Hypers @Harrie
+1 回复

Harrie 2013-03-27 10:05 来自 新浪微博
//@Zodiac: 我们一般总会以缺人、没时间或是这是测试人员写的这类来搪塞该问题。但说实话，的确存在@__wangqi__ 说的，测试代码很可能自己会绕过坑，所以应该互相写对方的测试CASE。当然，我也觉得凭着开发人者的懒惰心理。Code Review和持续集成的确是还算大家能接受的折中方法@蔡文渊Hypers @Harrie
+1 回复

Zodiac 2013-03-27 01:44 来自 新浪微博
我们一般总会以缺人、没时间或是这是测试人员写的这类来搪塞该问题。但说实话，的确存在@__wangqi__ 说的，测试代码很可能自己会绕过坑，所以应该互相写对方的测试CASE。当然，我也觉得凭着开发人者的懒惰心理。Code Review和持续集成的确是个还算是大家能接受的折中方法~@蔡文渊Hypers @Harrie
+1 回复

__wangqi__ 2013-03-27 01:34 来自 新浪微博
回复@朱少民:这样似乎就失去测试的意义了，因为谁写的代码谁最知道坑可能在哪，自己测自己的代码才有针对性。有自我保护心理的程序员是王八蛋程序员
+1 回复

liangjz 2013-03-27 00:41 来自 新浪微博
利益驱动，数据说话
+1 回复

caipeiming 2013-03-21 14:20
学习
+1 回复

清晨i阳光 2013-03-20 22:39 来自 新浪微博
回复@Wallace華萊士:测试先行如何？
+1 回复

杜子在这儿 2013-03-20 22:09 来自 新浪微博
加油我们都加油。
+1 回复

Wallace華萊士 2013-03-20 22:09 来自 新浪微博
見過為做UT把所有method 都弄成public了。所以反感。有解決辦法嗎？
+1 回复

清晨i阳光 2013-03-20 22:05 来自 新浪微博
PP有帮助吗？ //@朱少民:回复@CSDN付江: 单元测试（UT）需要耐心设想各种可能发生的场景来构造测试脚本，不像写代码主动性强，也容易见到成果。在UT中，如果测试自己代码，有保护自己的潜在心理因素影响。如果让程序员测试他人代码，兴趣可能会有较大改善。
+1 回复

清晨i阳光 2013-03-20 22:05 来自 新浪微博
PP有帮助吗？ //@朱少民:回复@CSDN付江: 单元测试（UT）需要耐心设想各种可能发生的场景来构造测试脚本，不像写代码主动性强，也容易见到成果。在UT中，如果测试自己代码，有保护自己的潜在心理因素影响。如果让程序员测试他人代码，兴趣可能会有较大改善。
+1 回复

tianjueyixian 2013-03-20 18:38
单元测试很重要，希望咱们国家的程序员能够一直做，，提高地位
+1 回复

analyst 2013-03-20 15:24
程序员自己给自己做测试本来就不靠谱，因为测试质量本身就无法保证，就算你强制规定测试覆盖率，草率的程序员一样可以写测试把代码都执行到，但不进行有效的验证。就算是负责的程序员，他所能考虑到的潜在BUG坑，他写代码的时候就会注意到，而那些他想不到的坑，测试代码也不会测试到。所以说单元测试并没有多大用处，他不过给人制造了一种代码通过了测试的幻觉而已。
1票，来自xiguayipian+1 回复

xiguayipian 2013-03-20 16:06
极端一点说，UT经常测出一些低级“笔误”，而非逻辑、设计缺陷，后者还得依赖有效的代码走查与多线程场景推演来发现。而且，覆盖率保证的仅仅是作者考虑到的异常分支。
+1 回复

回龙观东大街东沿路 2013-03-20 14:21 来自 新浪微博
关注一下我的微博吧 多转发评论
+1 回复

野人王在此 2013-03-20 13:47 来自 新浪微博
所以将一部分精力放在代码审核，作用更好啊
1票，来自xiguayipian+1 回复

野人王在此 2013-03-20 13:47 来自 新浪微博
所以将一部分精力放在代码审核，作用更好啊
+1 回复

写下来走过来 2013-03-20 13:36 来自 新浪微博
从这个角度，我真觉得自己发现错误比被别人发现舒服 //@朱少民: 回复@CSDN付江: 单元测试（UT）需要耐心设想各种可能发生的场景来构造测试脚本，不像写代码主动性强，也容易见到成果。在UT中，如果测试自己代码，有保护自己的潜在心理因素影响。如果让程序员测试他人代码，兴趣可能会有较大改善。
+1 回复

写下来走过来 2013-03-20 13:36 来自 新浪微博
从这个角度，我真觉得自己发现错误比被别人发现舒服 //@朱少民: 回复@CSDN付江: 单元测试（UT）需要耐心设想各种可能发生的场景来构造测试脚本，不像写代码主动性强，也容易见到成果。在UT中，如果测试自己代码，有保护自己的潜在心理因素影响。如果让程序员测试他人代码，兴趣可能会有较大改善。
+1 回复

胡争辉 2013-03-20 13:32 来自 新浪微博
多谢叶老板支持
+1 回复

胡争辉 2013-03-20 13:32 来自 新浪微博
多谢叶老板支持
+1 回复

Guolisen 2013-03-20 13:30 来自 新浪微博
又不是我的代码凭什么让我测试？这个也不现实
+1 回复

Guolisen 2013-03-20 13:30 来自 新浪微博
又不是我的代码凭什么让我测试？这个也不现实
+1 回复

华图叶炜 2013-03-20 13:30 来自 新浪微博
老大说得极对！因地制宜，因时制宜，因人制宜，本本主义者哪里懂得:D
+1 回复

华图叶炜 2013-03-20 13:30 来自 新浪微博
老大说得极对！因地制宜，因时制宜，因人制宜，本本主义者哪里懂得:D
+1 回复

华图叶炜 2013-03-20 13:30 来自 新浪微博
老大说得极对！因地制宜，因时制宜，因人制宜，本本主义者哪里懂得:D
+1 回复

杨毅之 2013-03-20 13:24 来自 新浪微博
//@CSDN://@朱少民: 回复@CSDN付江: 单元测试（UT）需要耐心设想各种可能发生的场景来构造测试脚本，不像写代码主动性强，也容易见到成果。在UT中，如果测试自己代码，有保护自己的潜在心理因素影响。如果让程序员测试他人代码，兴趣可能会有较大改善。
+1 回复

杨毅之 2013-03-20 13:24 来自 新浪微博
//@CSDN://@朱少民: 回复@CSDN付江: 单元测试（UT）需要耐心设想各种可能发生的场景来构造测试脚本，不像写代码主动性强，也容易见到成果。在UT中，如果测试自己代码，有保护自己的潜在心理因素影响。如果让程序员测试他人代码，兴趣可能会有较大改善。
+1 回复

Delia2011新生活 2013-03-20 13:24 来自 新浪微博
在学校做毕设连专人测试都没有呢，更牛不？[嘻嘻]
+1 回复

Delia2011新生活 2013-03-20 13:24 来自 新浪微博
在学校做毕设连专人测试都没有呢，更牛不？[嘻嘻]
+1 回复

CSDN付江 2013-03-20 13:00 来自 新浪微博
[赞]//@朱少民: 回复@CSDN付江: 单元测试（UT）需要耐心设想各种可能发生的场景来构造测试脚本，不像写代码主动性强，也容易见到成果。在UT中，如果测试自己代码，有保护自己的潜在心理因素影响。如果让程序员测试他人代码，兴趣可能会有较大改善。
+1 回复

胡争辉 2013-03-20 12:55 来自 新浪微博
回复@朱少民:谢谢关注
+1 回复

jguiz 2013-03-20 12:54 来自 新浪微博
一阵子测一次？
+1 回复

jguiz 2013-03-20 12:54 来自 新浪微博
难道像小学生一样那种测试？
+1 回复

朱少民 2013-03-20 12:51 来自 新浪微博
回复@胡争辉: 每次都能听到不一样的观点[呵呵]
+1 回复

jguiz 2013-03-20 12:23 来自 新浪微博
什么是单元测试啊？
+1 回复

jguiz 2013-03-20 12:23 来自 新浪微博
什么是单元测试啊？
+1 回复

勾月 2013-03-20 12:23 来自 新浪微博
回复@周国屏的空间:谢谢！欢迎常来。[咖啡]
+1 回复

勾月 2013-03-20 12:23 来自 新浪微博
回复@周国屏的空间:谢谢！欢迎常来。[咖啡]
+1 回复

胡争辉 2013-03-20 12:06 来自 新浪微博
问题从头就错了，不该问“程序员为什么不喜欢做单元测试”，而要问项目管理者为什么只能机械的重复自己和别人的经验，而不能实事求是、因地制宜的选择方法？目前的软件工程方法严重陷入机械论和还原论不能自拔，大量程序员的时间浪费在不合时宜的方法上//@CSDN付江: 【程序员为什么不喜欢做单元测试】
1票，来自xiguayipian+1 回复

胡争辉 2013-03-20 12:06 来自 新浪微博
问题从头就错了，不该问“程序员为什么不喜欢做单元测试”，而要问项目管理者为什么只能机械的重复自己和别人的经验，而不能实事求是、因地制宜的选择方法？目前的软件工程方法严重陷入机械论和还原论不能自拔，大量程序员的时间浪费在不合时宜的方法上//@CSDN付江: 【程序员为什么不喜欢做单元测试】
1票，来自xiguayipian+1 回复

justin_2000 2013-03-20 10:47 来自 新浪微博
实际上，基站的代码经常有一半的文件UT覆盖率可以到100%，绝大部分文件覆盖率可以达到90%以上，UT在整个开发过程都必须是可以自动Regression, 华为和大部分国内通讯公司都是这么做的，所以测试人很少，不像朗讯，测了一遍又一遍
+1 回复

justin_2000 2013-03-20 10:47 来自 新浪微博
实际上，基站的代码经常有一半的文件UT覆盖率可以到100%，绝大部分文件覆盖率可以达到90%以上，UT在整个开发过程都必须是可以自动Regression, 华为和大部分国内通讯公司都是这么做的，所以测试人很少，不像朗讯，测了一遍又一遍
+1 回复

justin_2000 2013-03-20 10:47 来自 新浪微博
实际上，基站的代码经常有一半的文件UT覆盖率可以到100%，绝大部分文件覆盖率可以达到90%以上，UT在整个开发过程都必须是可以自动Regression, 华为和大部分国内通讯公司都是这么做的，所以测试人很少，不像朗讯，测了一遍又一遍
+1 回复
共3页 首页  上一页 123 下一页  末页
请您注意
·自觉遵守：爱国、守法、自律、真实、文明的原则
·尊重网上道德，遵守《全国人大常委会关于维护互联网安全的决定》及中华人民共和国其他各项有关法律法规
·严禁发表危害国家安全，破坏民族团结、国家宗教政策和社会稳定，含侮辱、诽谤、教唆、淫秽等内容的作品
·承担一切因您的行为而直接或间接导致的民事或刑事法律责任
·您在CSDN新闻评论发表的作品，CSDN有权在网站内保留、转载、引用或者删除
·参与本评论即表明您已经阅读并接受上述条款

CSDN官方微信
扫描二维码,向CSDN吐槽
微信号：CSDNnews

程序员杂志for iPad 免费下载
每日资讯快速浏览
微博关注


相关热门文章

拒绝使用现有Web组件的6个愚蠢理由
用于响应式设计的9个CSS技巧
[高校俱乐部] Milanoo首席技术官肖江：从大学生走到CTO
Github宣布支持SVN方式访问
携程开放平台发力 将实现旗下产品全流程API支持
微软Surface Pro正式登陆中国市场 售价6588元起
IT峰会上李彦宏、马化腾、马云“互侃”移动互联网
微软“Imagine cup 2013”中国区CSDN高校俱乐部校区选拔赛（重大站）上演精彩一幕...
[高校俱乐部] 成都普创技术总监方锋：从校园人到职业人
加速软件交付 企业级模拟测试服务CA LISA受追捧
活动

06-05	2013年CSDN年度技术大会套票（CCCC、SDCC、HBTC、MDCC）	
04-20	火狐移动操作系统应用开发日深圳站	
04-20	2013年Unity亚洲开发者大会（付费）	
04-16	开源力量公开课第十四期：移动互联网研发团队的技术管理实践探讨	
04-13	Google Code Jam & Share	
04-09	开源力量公开课第十三期-beyond the web	
热门专区


win8开发马拉松

2012微软技术大会

数据库构架师专区

IBM AIX学院

异构编程专区

公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告
QQ客服 微博客服 论坛反馈 联系邮箱：webmaster@csdn.net 服务热线：400-600-2320
京 ICP 证 070598 号
北京创新乐知信息技术有限公司 版权所有
世纪乐知(北京)网络技术有限公司 提供技术支持
江苏乐知网络技术有限公司 提供商务支持
Copyright © 1999-2012, CSDN.NET, All Rights Reserved 
