您还未登录！|登录|注册|帮助首页业界移动云计算研发论坛博客下载
更多

首页论坛帮助论坛牛人论坛地图

 
CSDN > CSDN论坛 > 硬件/嵌入开发 > 驱动开发/核心开发
管理菜单 结帖发帖回复
  收藏 Linux下静态库和动态库的制作与使用 [问题点数：40分]

whhqluck
whhqluck
等级：
结帖率：0%
楼主 发表于： 2012-10-08 15:32:36
Linux下静态库和动态库（共享库）的制作与使用
 
    Linux操作系统支持的函数库分为静态库和动态库，动态库又称共享库。linux系统有几个重要的目录存放相应的函数库，如/lib /usr/lib。 
 
静态函数库： 
　　这类库的名字一般是libxxx.a；利用静态函数库编译成的文件比较大，因为整个函数库的所有数据都会被整合进目标代码中，他的优点就显而易见了，即编译后的执行程序不需要外部的函数库支持，因为所有使用的函数都已经被编译进可执行文件了。当然这也会成为他的缺点，因为如果静态函数库改变了，那么你的程序必须重新编译，而且体积也较大。 
 
动态函数库： 
　　这类库的名字一般是libxxx.so，动态库又称共享库;相对于静态函数库，动态函数库在编译的时候并没有被编译进目标代码中，你的程序执行到相关函数时才调用该函数库里的相应函数，因此动态函数库所产生的可执行文件比较小。由于函数库没有被整合进你的程序，而是程序运行时动态的申请并调用，所以程序的运行环境中必须提供相应的库。动态函数库的改变并不影响你的程序，所以动态函数库的升级比较方便。而且如果多个应用程序都要使用同一函数库，动态库就非常适合，可以减小应用程序的体积。
 
下面来介绍linux静态函数库的创建和使用： 
 
　　例程add.h add.c sub.h  sub.c  main.c: 
 
　　add.h 
 
　　#ifndef ADD_H 
　　#define ADD_H 
　　int add(int x,int y); 
　　#endif 
 
　　add.c 
 
　　#include <stdio.h>
　　#include "add.h" 
 
int add(int x,int y)
{ 
　　    return (x+y);
} 
--------------------------------------------------------------------
    sub.h 
 
　　#ifndef SUB_H 
　　#define SUB_H 
　　int sub(int x,int y); 
　　#endif 
 
　　sub.c 
 
　　#include <stdio.h>
　　#include "sub.h" 
int sub(int x,int y)
{ 
　　   return (x-y);
　　} 
-----------------------------------------------------------------------
main.c 
 
#include <stdio.h>
　　#include "sub.h" 
#include "add.h"
 
　　int main() 
{ 
    int  a,b;
    a = add(1,2);
    b = sub(10,5);
    
    printf(“a=%d,b=%d\n”,a,b);
　　　　return 0; 
　　} 
-----------------------------------------------------------------------
　　不管是静态函数库还是动态函数库，都是由*.o目标文件生成。 
 
所以先 gcc -c add.c 
       gcc -c sub.c 
生成add.o  sub.o
 
　　静态函数库由ar命令创建 
 
　　本例：ar -cr libaddsub.a add.o sub.o
 
　　-c create的意思 
 
　　-r replace的意思，表示当插入的模块名已经在库中存在，则替换同名的模块。如果若干模块中有一个模块在库中不存在，ar显示一个错误消息，并不替换其他同名模块。默认的情况下，新的成员增加在库的结尾处，可以使用其他任选项来改变增加的位置。 
　　到此静态函数库创建完毕。 
 
　　使用方法：通过gcc -o main main.c -L. -laddsub编译main.c就会把静态函数库整合进main。 
 
　　其中 
 
　　-L指定静态函数库的位置供查找，注意L后面还有'.'，表示静态函数库在本目录下查找。 
 
　　-l则指定了静态函数库名，由于静态函数库的命名方式是lib***.a，其中的lib和.a忽略。 
 
　　根据静态函数库的特性，此处删除libaddsub.a后main依然可以运行，因为静态库的内容已经整合进去了。 
 
　　动态函数库的创建和使用 
 
gcc -shared -fpic -o libaddsub.so  add.c sub.c 
 
-fpic：产生位置无关代码
-shared：生成共享库
 
用上述命令生成libaddsub.so 动态函数库。
 
　　gcc -o out main.c -L. -laddsub 
 
　　此时还不能立即./out，因为在动态函数库使用时，会查找/usr/lib /lib目录下的动态函数库，而此时我们生成的库不在里边。 
 
　　这个时候有好几种方法可以让他成功运行： 
 
　　最直接最简单的方法就是把libaddsub.so拉到/usr/lib 或/lib中去。 
    
还有一种方法,假设libaddsub.so在/home/linux/addsub
 export LD_LIBRARY_PATH=/home/linux/addsub：$LD_LIBRARY_PATH
 
　　另外还可以在/etc/ld.so.conf文件里加入我们生成的库的目录，然后/sbin/ldconfig。 
/etc/ld.so.conf是非常重要的一个目录，里面存放的是链接器和加载器搜索共享库时要检查的目录，默认是从/usr/lib /lib中读取的，所以想要顺利运行，我们也可以把我们库的目录加入到这个文件中并执行/sbin/ldconfig。


对我有用[0] 丢个板砖[0] 引用 | 举报 | 管理 回复次数：2

zyl987
余独爱莲
等级：
#1 得分：0 回复于： 2012-10-08 18:15:05
兄弟在科普吗
2013年4月当选微软MVP的CSDN会员名单揭晓对我有用[0] 丢个板砖[0] 引用 | 举报 | 管理

chen_2611
chen_2611
等级：
#2 得分：0 回复于： 2012-10-09 11:23:59
gcc -o out main.c -L. -laddsub 
一直报错 说是#include "sub.h"  
          #include "add.h"  不存在 
请问怎么解决呢
专访关东升：将人文融入到科技产品中对我有用[0] 丢个板砖[0] 引用 | 举报 | 管理
管理菜单 结帖发帖回复
【招】应届生,入职年薪5-10万
下载《从有限资源到无限发展潜力》
IBM 以高效设计为灵魂
首届携程大赛开始报名啦
台湾程序员游戏开发经历
陈勇- 敏捷开发现状及发展之路
分享你的发现 赢下载积分

微软MVP申请
CSDN与微软合作，长期为用户提供申请“微软最有价值专家”的平台，希望大家积极参与。
回复内容 匿名用户不能发表回复！登录|注册
编辑预览
粗体
斜体
下划线
---------------
字体大小
字体颜色
---------------
图片
链接
---------------
左对齐
居中对齐
右对齐
---------------
引用
代码
---------------
QQ
monkey
onion
---------------
押宝
---------------
清除格式

每天回帖即可获得10分可用分！小技巧：教您如何更快获得可用分 你还可以输入10000个字符(Ctrl+Enter)
这里发言，表示您接受了CSDN论坛的用户行为准则。
请对您的言行负责，并遵守中华人民共和国有关法律法规,尊重网上道德。
转载文章请注明出自“CSDN（www.csdn.net）”。如是商业用途请联系原作者。
[关闭][关闭]
公司简介|招贤纳士|广告服务|银行汇款帐号|联系方式|版权声明|法律顾问|问题报告
QQ客服 微博客服 论坛反馈 联系邮箱：webmaster@csdn.net 服务热线：400-600-2320
京 ICP 证 070598 号
北京创新乐知信息技术有限公司 版权所有
世纪乐知(北京)网络技术有限公司 提供技术支持
江苏乐知网络技术有限公司 提供商务支持
Copyright © 1999-2012, CSDN.NET, All Rights Reserved 

