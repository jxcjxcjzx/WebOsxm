

首页
开源软件
讨论区






代码分享
博客
翻译
资讯
移动开发




招聘

你好2,您好 我的空间







 |  添加软件 | 投递新闻 | 退出
 

开源中国 
代码分享
 当前位置：代码分享 » C/C++ » 常规C/C++编程 » C/C++语言基础 
搜 索 









c语言socket编程

ny5168 发布于 2013年04月15日 17时, 3评/479阅


 


分享到 

新浪微博腾讯微博


收藏+5

踩顶0
 

在xcode下的c语言编程

标签：<无> 




代码片段(1)


[代码] [C/C++]代码



view source

print?




001

服务端:





002

//





003

//  main.m





004

//  server





005

//





006

//  Created by mac on 13-4-15.





007

//  Copyright (c) 2013年 mac. All rights reserved.





008

//





009

 





010

#import <Foundation/Foundation.h>





011

#import <sys/types.h>





012

#import <sys/socket.h>





013

#import <netinet/in.h>





014

#import <arpa/inet.h>





015

 





016

int CreateServerSocket(short port)





017

{





018

    int socket_server=0;





019

    socket_server=socket(AF_INET,SOCK_STREAM,0);





020

    //填充IP与端口





021

    /*





022

     struct sockaddr_in {





023

     __uint8_t  sin_len;





024

     sa_family_t    sin_family;





025

     in_port_t  sin_port;





026

     struct in_addr sin_addr;





027

     char       sin_zero[8];





028

     };





029

     */





030

    struct sockaddr_in sAddr = {0};





031

    sAddr.sin_len=sizeof(sAddr);





032

    sAddr.sin_family=AF_INET;





033

    sAddr.sin_port= htons(port); //本机字节序转网络字节序





034

    sAddr.sin_addr.s_addr=INADDR_ANY;





035

    //绑定  //(struct sockaddr *)&sAddr强转





036

    if (bind(socket_server, (struct sockaddr *)&sAddr, sizeof(sAddr)) != 0) {





037

        return 0;





038

    }





039

    //监听





040

    if(listen(socket_server, 100) != 0){





041

        return 0;





042

    }





043

    return socket_server;





044

}





045

//接收连接并返回客户端的scoket





046

int AcceptClientSocket(int ServerSocket)





047

{





048

    int ClinetSocket=0;





049

    struct sockaddr_in cAddr = {0};





050

    socklen_t len=sizeof(cAddr);





051

    ClinetSocket = accept(ServerSocket, (struct sockaddr *)&cAddr, &len);





052

    char * ipaddress=inet_ntoa(cAddr.sin_addr);





053

    printf("accept--->%s,%d",ipaddress,cAddr.sin_port);





054

    return ClinetSocket;





055

}





056

void Message(int socket)





057

{





058

    char send_Message[1024]="hello\n";





059

    char recv_Message[1024]={0};





060

    send(socket, send_Message, strlen(send_Message)+1, 0);





061

    while (1) {





062

        recv(socket, recv_Message, sizeof(recv_Message), 0);





063

        printf("<-----%s",recv_Message);





064

        printf("----->");





065

        fgets(send_Message, sizeof(send_Message), stdin);





066

        send(socket,send_Message,strlen(send_Message)+1,0);





067

    }





068

}





069

 





070

int main(int argc, const char * argv[])





071

{





072

    short port=9898;





073

    if (argc>1) {





074

        port=(short)atoi(argv[1]);





075

    }





076

    int ServerSocket = CreateServerSocket(port);





077

    if (ServerSocket == 0) {





078

        printf("Cerate scoket error\n");





079

        return 0;





080

    }





081

    printf("Cerate scoket ok!\n");





082

     





083

    while (true)





084

    {





085

        int ClinetScoket=AcceptClientSocket(ServerSocket);





086

        if (ClinetScoket == 0)





087

        {





088

            printf("Client connect error\n");





089

            return 0;





090

        }





091

        printf("Client connect ok.....\n");





092

        Message(ClinetScoket);





093

        return 0;





094

    }





095

         





096

//    //接收连接





097

////    accept(<#int#>, <#struct sockaddr *restrict#>, <#socklen_t *restrict#>)





098

//    struct sockaddr sAdd2={0};





099

//    socklen_t len=sizeof(struct sockaddr);





100

//    accept(ServerSocket, &sAdd2, &len);





101

     





102

    return 0;





103

}





104

 





105

 





106

 





107

客户端:





108

//





109

//  main.m





110

//  client





111

//





112

//  Created by mac on 13-4-15.





113

//  Copyright (c) 2013年 mac. All rights reserved.





114

//





115

 





116

#import <Foundation/Foundation.h>





117

#import <sys/types.h>





118

#import <sys/socket.h>





119

#import <netinet/in.h>





120

#import <arpa/inet.h>





121

 





122

int CreateClinetSocket()





123

{





124

    int ClinetSocket = 0;





125

    ClinetSocket = socket(AF_INET, SOCK_STREAM, 0);





126

    return ClinetSocket;





127

}





128

int ConnectionToServer(int client_socket,const char * server_ip,unsigned short port)





129

{





130

    struct sockaddr_in sAddr={0};





131

    sAddr.sin_len=sizeof(sAddr);





132

    sAddr.sin_family=AF_INET;





133

    inet_aton(server_ip, &sAddr.sin_addr);





134

    sAddr.sin_port=htons(port);





135

    if (connect(client_socket, (struct sockaddr *)&sAddr, sizeof(sAddr))==0) {





136

        return client_socket;





137

    }





138

    return 0;





139

}





140

//client





141

void Message(int socket)





142

{





143

    char send_Message[1024]="0";





144

    char recv_Message[1024]={0};





145

    while (1) {





146

        recv(socket, recv_Message, sizeof(recv_Message), 0);





147

        printf("<-----%s",recv_Message);





148

        printf("----->");





149

        fgets(send_Message, sizeof(send_Message), stdin);





150

        send(socket,send_Message,strlen(send_Message)+1,0);





151

    }





152

}





153

int main(int argc, const char * argv[])





154

{





155

    const char * server_ip="127.0.0.1";





156

    short server_port=9898;





157

    if (argc>1) {





158

        server_ip = argv[1];





159

    }





160

    if (argc>2) {





161

        server_port=(short)atoi(argv[2]);





162

    }





163

     





164

    int client_socket= CreateClinetSocket();





165

    if (ConnectionToServer(client_socket,server_ip, server_port)==0) {





166

        printf("Connect to server error\n");





167

        return 0;





168

    }





169

    printf("Connect to server ok\n");





170

    Message(client_socket);





171

     





172

    return 0;





173

}



举报



开源中国-程序员在线工具：API文档大全(120+) JS在线编辑演示 二维码更多»

 


相关的代码(1339)
0回/0阅[C/C++]有关矩阵的各种计算21分钟前 By 波仔糕
0回/151阅[C/C++]c++实现二叉搜索树10小时前 By 寒酸人
0回/108阅[C/C++]状态机模板类13小时前 By 李_尹
0回/117阅[C/C++]将一个数分解我连续的数相加昨天(12:29) By 波仔糕
0回/33阅[C/C++]将n个不相等的随机数排序并逐个分解为质因数昨天(12:25) By 波仔糕
0回/213阅[C/C++]石头剪刀布游戏昨天(12:21) By 波仔糕
0回/49阅[C/C++]随机数猜测游戏昨天(12:12) By 波仔糕
14回/279阅[C/C++]c++ 实现哈希表2天前 By BAIING
2回/80阅[C/C++]检查整数型数组，看是否满足以下条件，相临数字之差的绝对值，刚好可以组成 1,2,...,n-13天前 By 黃偉達
显示所有 »

发表评论回到顶部网友评论(3)







 1楼：星期八的游戏 发表于 2013-04-15 18:14 回复此评论

竟然没协议的处理

 







2楼：ny5168 发表于 2013-04-15 18:37 回复此评论

不好意思,刚学完c语言,还有好多不完善和不懂的地方,见谅啊

 







3楼：东方皓 发表于 2013-04-17 09:45 回复此评论



引用来自“ny5168”的评论

不好意思,刚学完c语言,还有好多不完善和不懂的地方,见谅啊
这个gcc编译通过吗？
 























回到顶部   回到评论列表

开源从代码分享开始 分享代码



ny5168的其他代码c语言socket编程(3评/479阅,2天前)
全部(1)...
 





















© 开源中国(OsChina.NET) | 关于我们 | 广告联系 | @新浪微博 | 开源中国手机版 | 粤ICP备12009483号-3
 
开源中国手机客户端：AndroidiPhoneWP7 




















2条新留言，查看留言»




