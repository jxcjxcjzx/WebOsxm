



争气
 
静心方能尽力...

 
首页
 博问
 闪存
 
联系
 订阅 
管理
 
随笔-26  文章-0  评论-39  






华为机试第一篇




备注，本人博客上与找工作有关的文章的doc以及答案均已上传至本人网络硬盘，并持续更新，需要共享的点这里，给我留言【留言形式为你的邮箱】
 
1. 手机号码合法性判断（20分）
问题描述：
我国大陆运营商的手机号码标准格式为：国家码+手机号码，例如：8613912345678。特点如下：
1、 长度13位；
2、 以86的国家码打头；
3、 手机号码的每一位都是数字。
请实现手机号码合法性判断的函数（注：考生无需关注手机号码的真实性，也就是说诸如86123123456789这样的手机号码，我们也认为是合法的），要求：
1） 如果手机号码合法，返回0；
2） 如果手机号码长度不合法，返回1
3） 如果手机号码中包含非数字的字符，返回2；
4） 如果手机号码不是以86打头的，返回3；
注除成功的情况外，以上其他合法性判断的优先级依次降低。也就是说，如果判断出长度不合法，直接返回1即可，不需要再做其他合法性判断。
int verifyMsinsdn(char *inMsisdn)
 



?




1

2

3

4

5

6

7

8

9

10

11 



int verifyMsinsdn(char *inMsisdn)

{

    if(strlen(inMsisdn)!=13)

        return 1;

    for(int i=0;i<13;i++)

        if(inMsisdn[i]<'0'||inMsisdn[i]>'9')

            return 2;

    if(inMsisdn[0]!='8'||inMsisdn[1]!='6')

        return 3;

    return 0;

} 


 2. 将一个字符串的元音字母复制到另一个字符串，并排序（30分）
 
问题描述：
有一字符串，里面可能包含英文字母（大写、小写）、数字、特殊字符，现在需要实现一函数，将此字符串中的元音字母挑选出来，存入另一个字符串中，并对字符串中的字母进行从小到大的排序（小写的元音字母在前，大写的元音字母在后，依次有序）。
说明：
1:元音字母是a,e,i,o,u,A,E,I,O,U。
2:筛选出来的元音字母，不需要剔重；
3:最终输出的字符串，小写元音字母排在前面，大写元音字母排在后面，依次有序。
void sortVowel (char* input, char* output);
 



?




1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19 



#include<iostream>

#include<cstring>

#include<algorithm>

using namespace std;

void sortVowel (char* input, char* output)

{

    string tmpLow,tmpUpper;

    for(char *p=input; *p!='\0';++p)

    {

        if('a'==*p||'e'==*p||'i'==*p||'o'==*p||'u'==*p)

            tmpLow+=*p;

        else if('A'==*p||'E'==*p||'I'==*p||'O'==*p||'U'==*p)

            tmpUpper+=*p;

    }

    sort(tmpLow.begin(),tmpLow.end());

    sort(tmpUpper.begin(),tmpUpper.end());

    tmpLow+=tmpUpper;

    strcpy(output,tmpLow.c_str());

} 


　　
 
3. 身份证号码合法性判断
问题描述：
 我国公民的身份证号码特点如下： 
1:长度为18位；
2:第1～17位只能为数字；
3:第18位可以是数字或者小写英文字母x。
4:身份证号码的第7~14位表示持有人生日的年、月、日信息。
例如：511002198808080111或51100219880808011x。
请实现身份证号码合法性判断的函数。除满足以上要求外，需要对持有人生日的年、月、日信息进行校验。年份大于等于1900年，小于等于2100年。需要考虑闰年、大小月的情况。所谓闰年，能被4整除且不能被100整除 或 能被400整除的年份，闰年的2月份为29天，非闰年的2月份为28天。其他情况的合法性校验，考生不用考虑。
函数返回值：
1） 如果身份证号合法，返回0；
2） 如果身份证号长度不合法，返回1；
3） 如果身份证号第1~17位含有非数字的字符，返回2；
4） 如果身份证号第18位既不是数字也不是英文小写字母x，返回3；
5） 如果身份证号的年信息非法，返回4；
6） 如果身份证号的月信息非法，返回5；
7） 如果身份证号的日信息非法，返回6（请注意闰年的情况）；
【注】除成功的情况外，以上其他合法性判断的优先级依次降低。也就是说，如果判断出长度不合法，直接返回1即可，不需要再做其他合法性判断。
要求实现函数：
int verifyIDCard(char* input)
【输入】 char* input，表示输入的身份证号码字符串
【输出】 无
【返回】 判断的结果，类型为int
 示例
1） 输入：”511002111222”，函数返回值：1；
2） 输入：”511002abc123456789”，函数返回值：2；
3） 输入：”51100219880808123a”，函数返回值：3；
4） 输入：”511002188808081234”，函数返回值：4；
5） 输入：”511002198813081234”，函数返回值：5；
6） 输入：”511002198808321234”，函数返回值：6；
7） 输入：”511002198808081234”，函数返回值：0；
 



?




1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

23

24

25

26

27

28

29

30

31

32

33

34

35

36

37

38

39

40

41

42

43 



#include<iostream>

#include<memory>

using namespace std;

int verifyIDCard(char* input)

{

    if(strlen(input)!=18)

        return 1;

    for(char *p=input; p!=input+17;++p)

        if(!isdigit(*p))

            return 2;

    if(!isdigit(input[17])&&input[17]!='x')

        return 3;

    char year[5]="",mon[3]="",date[3]="";

    memcpy(year,input+6,4);

    memcpy(mon,input+10,2);

    memcpy(date,input+12,2);

    if(atoi(year)<1900||atoi(year)>2100)

        return 4;

    if(atoi(mon)<1||atoi(mon)>12)

        return 5;

    if(4==atoi(mon)||6==atoi(mon)||9==atoi(mon)){

        if(atoi(date)<1||atoi(date)>30)

            return 6;

    }

    else

    {

        if(atoi(mon)==2)

        {

            if(atoi(year)%400==0)

            {

                if(atoi(date)<1||atoi(date)>29)

                    return 6;

            }

            else

            if(atoi(date)<1||atoi(date)>28)

                return 6;

        }

        else

            if(atoi(date)<1||atoi(date)>31)

                return 6;

    }

    return 0;

} 



   

  
 
 

 



分类: 找工作--华为篇
 

绿色通道： 好文要顶 关注我 收藏该文与我联系 




星空雾雨
 关注 - 1
 粉丝 - 39 



+加关注 


4

1


 (请您对文章做出评价) 


« 博主上一篇：Linux源码之进程终止函数
» 博主下一篇：华为机试第二篇
« 首页上一篇：准备购买的Dell服务器的硬件配置
» 首页下一篇：经典网页设计：20个精美的国外单页网站作品

 
posted @ 2012-10-23 08:56 星空雾雨 阅读(3417) 评论(1) 编辑 收藏
 


评论列表
 



  
#1楼[楼主]2012-11-07 20:48 星空雾雨  

支持，很好

支持(0)反对(0)

 


刷新评论刷新页面返回顶部
 

注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。

找优秀程序员，就在博客园

 
博客园首页博问新闻闪存程序员招聘知识库
 





最新IT新闻:
 · 英活动家呼吁政府颁布杀手机器人研发禁令
 · 能看漫画的日本智能眼镜 要抢在谷歌前面上市！
 · 787客机即将重返蓝天 波音交出漂亮财报
 · 复盘互联网巨头打通寻人平台过程：大灾面前泯恩仇
 · 江民发生人事动荡：多名创业元老离职
» 更多新闻...

最新知识库文章:

 · 谈谈对BPM的理解
 · 遗留系统的技术栈迁移
 · 架构 － 业务流程管理介绍（BPM）
 · 中文女和程序员的爱情奇遇
 · HTTP负载测试

» 更多知识库文章... 







公告


昵称：星空雾雨
园龄：1年1个月
粉丝：39
关注：1
+加关注
 





随笔分类(26)
AndRoid 
C/C++(3) 
JAVA(1) 
Visaul C++ 
Wince程序以及感悟(2) 
嵌入式编程与开发(8) 
软件设计模式(1) 
数据结构与算法 
找工作--谷歌篇(1) 
找工作--华为篇(6) 
找工作--混杂篇(1) 
找工作--中兴篇(3) 


积分与排名
 积分 - 15933 
排名 - 7736 


阅读排行榜

1. 华为机试第一篇(3417)
2. 谷歌笔试第一篇(2480)
3. 华为机试第三篇(1957)
4. Linux源码printf函数实现(1711)
5. 华为机试第四篇(1601)
6. 将Ubuntu打包成实时操作系统(RTAI)(1432)
7. WinCE下的计算器实现源码(1116)
8. Linux驱动程序第二篇(1049)
9. Linux源码之进程终止函数(920)
10. Linux驱动编程第三篇(837)
11. getchar的缓存机制(789)
12. 华为机试第二篇(729)
13. assert的源码分析以及用法(677)
14. 设计模式总结(646)
15. 华为机试第六篇(320)
16. SD卡烧写WinCE启动过程解析(298)
17. Linux驱动编程第四篇(268)
18. Linux源码之sleep_on【不可中断休眠】(229)
19. 小米网站批量修改密码软件(172)
20. 笔试杂汇(137)
21. Linux驱动程序第一篇【笔记】(127)
22. 华为机试第五篇(99)
23. 中兴Java面试汇总三(33)
24. 中兴Java面试汇总一(25)
25. 中兴Java面试汇总二(23)
26. 操作符重载(19)
 

评论排行榜

1. 华为机试第三篇(13)
2. 华为机试第四篇(11)
3. getchar的缓存机制(8)
4. 华为机试第六篇(1)
5. 设计模式总结(1)
6. 谷歌笔试第一篇(1)
7. 笔试杂汇(1)
8. 小米网站批量修改密码软件(1)
9. 华为机试第一篇(1)
10. Linux源码之进程终止函数(0)
11. Linux源码之sleep_on【不可中断休眠】(0)
12. Linux驱动编程第三篇(0)
13. 华为机试第五篇(0)
14. Linux驱动程序第二篇(0)
15. Linux驱动程序第一篇【笔记】(0)
16. 将Ubuntu打包成实时操作系统(RTAI)(0)
17. SD卡烧写WinCE启动过程解析(0)
18. assert的源码分析以及用法(0)
19. Linux源码printf函数实现(0)
20. 华为机试第二篇(0)
21. 中兴Java面试汇总三(0)
22. 中兴Java面试汇总二(0)
23. 中兴Java面试汇总一(0)
24. 操作符重载(0)
25. WinCE下的计算器实现源码(0)
26. Linux驱动编程第四篇(0)
 

推荐排行榜
 
1. 华为机试第六篇(6)
2. 华为机试第一篇(4)
3. 华为机试第三篇(4)
4. 华为机试第四篇(2)
5. assert的源码分析以及用法(2)
6. 谷歌笔试第一篇(1)
7. Linux驱动编程第三篇(1)
8. Linux驱动程序第二篇(1)
9. Linux源码printf函数实现(1)
10. 华为机试第二篇(1)
11. getchar的缓存机制(1)
12. Linux驱动编程第四篇(1)
13. 设计模式总结(1)
14. WinCE下的计算器实现源码(1)
 


Copyright ©2013 星空雾雨 

