



争气
 
静心方能尽力...

 
首页
 博问
 闪存
 
联系
 订阅 
管理
 
随笔-26  文章-0  评论-39  






华为机试第四篇




备注，本人博客上与找工作有关的文章的doc以及答案均已上传至本人网络硬盘，并持续更新，需要共享的点这里，给我留言【留言形式为你的邮箱】
 
一：通过键盘输入任意一个字符串序列，字符串可能包含多个子串，子串以空格分隔，请编写一个程序，自动分离出各个子串，并使用’,’将其分隔，并且在最后也补充一个’,’，并将子串存储。
如果输入”abc def ghi d”,结果将是abc,def,gh,i,d
要求实现函数
Void DivideString(const char *pInputStr,long IinputLen,char *pOutputStr);
输入：pInputStr:输入字符串
IinputLen:输入字符串的长度
输出：pOutputStr:输出字符串，字符串已开辟好，与输入字符串等长
注意：只需要完成该函数功能算法，中间不需要有任何IO的输入输出
 



?




1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22 



void DivideString(const char *pInputStr,long IinputLen, char *OutputStr)

{

    int cnt=0,i=0;//计数

    bool flag=false;

    while(pInputStr[i]==' ')//去掉前面的空格

        i++;

    for(;i<IinputLen;i++)

    {

        if(pInputStr[i]==' ')

        {

            flag=true;

            continue;

        }

        if(flag)

        {

            flag=!flag;

            OutputStr[cnt++]=',';

        }

        OutputStr[cnt++]=pInputStr[i];

    }

    OutputStr[cnt]='\0';

} 


　　
 
二：将输入的一个单向链表，逆序后输出链表中的值，链表定义如下： Typdef struct tagListNode {
 Int value;
 Struct tagListNode *next;
}ListNode;
要求实现函数
Void converse(ListNode **head);
输入:head:链表头结点，空间已经开僻好
输出:head:逆序后的链表头节点
 



?




1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

23

24

25

26

27

28

29

30

31

32

33 



//题目要求的函数（还可以精简）

//精简方法首先将s=null,p=head，不需要判断只要一个while循环即可实现，思想一样

/*

While(p)

{

    Q=p->next;

    p->next=s;

    p=q;

    s=p;

}

*head=p;即可

*/

void converse(ListNode **head)

{

    if(!*head|!((*head)->next))

        return ;

    ListNode *p=*head,*q=(*head)->next,*s;

    p->next=NULL;

    if(!(q->next)){

        q->next=p;

        *head=q;

        return;

    }

    s=q->next;

    while(s){

        q->next=p;

        p=q;

        q=s;

        s=s->next;

    }

    q->next=p;//最后一个要处理

    *head=q;

} 


　　
 
三：将一个字符串中出现次数最少的字符删掉，并保证删除后的字符顺序不变，如果出现次数最少的字符有多种，则这几种字符都要删除，该字符串长度不会超过20个字符。 例如：源字符串为“abcdd”，删除后为“dd”
 



?




1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17 



char *deleteMin(char *InputSrc,int ILen)

{

    int sz[26]={0};

    int min=20,i;//最小出现次数

    for(i=0;i<ILen;i++)

        ++sz[InputSrc[i]-'a'];

    for(i=0;i<26;i++)

        if(sz[i]<min&&sz[i]!=0)

            min=sz[i];

    for(int t=0;*(InputSrc+t);++t)

        if(sz[InputSrc[t]-'a']==min)

        {

            memcpy(InputSrc+t,InputSrc+t+1,ILen-t);

            --t;//因为跳过了一位

        }

    return InputSrc;

} 


 

 



分类: 找工作--华为篇
 

绿色通道： 好文要顶 关注我 收藏该文与我联系 




星空雾雨
 关注 - 1
 粉丝 - 39 



+加关注 


2

0


 (请您对文章做出评价) 


« 博主上一篇：华为机试第三篇
» 博主下一篇：将Ubuntu打包成实时操作系统(RTAI)
« 首页上一篇：深入ASP.NET MVC之三：Controller的激活
» 首页下一篇：新手必读：Oracle入门教程

 
posted @ 2012-11-06 08:37 星空雾雨 阅读(1601) 评论(11) 编辑 收藏
 


评论列表
 



  
#1楼2012-11-06 08:45 眼子沙  

可以出书了，《面试奇遇记》

支持(0)反对(0)



   
#2楼2012-11-06 09:41 胖子黎  

if(pInputStr[i]==' ')
 {
 flag=true;
 continue;
 }
 if(flag)
 {
 flag=!flag;
 OutputStr[cnt++]=',';
 }
 OutputStr[cnt++]=pInputStr[i];

这里有点不明白 ，为什么不在true 里面就处理了呢，还要continue一次再处理，我觉得这样看起代码有点恼火啊，好像你的意思是这样写代码，如果中间有几个空格，只会有一个空格是吧。

支持(0)反对(0)



   
#3楼[楼主] 2012-11-06 09:45 星空雾雨  

@胖子黎
可以有多个空格，遇到多个空格，只处理一个，要continue跳过后面的空格~

支持(0)反对(0)



   
#4楼2012-11-06 09:51 byfei  

这个 你去华为面试过几次丫

支持(0)反对(0)



   
#5楼2012-11-06 10:22 就爱懒蛇  

华为不是已经关闭社招了么？？

楼主是猎头推荐去面试的？？

支持(0)反对(0)



   
#6楼[楼主] 2012-11-06 10:25 星空雾雨  

与面试无关，只是总结与分享学习~~~

支持(0)反对(0)



   
#7楼2012-11-06 11:11 byfei  

void ReverseList(Node** pHead)
{
 Node* p1 = *pHead;
 Node* p2 = NULL;
 while(p1)
 {
 Node * pTemp = p1->pNext;
 p1->pNext = p2;
 p2 = p1; 
p1 = pTemp; 
}
 *pHead = p2;
}

支持(0)反对(0)



   
#8楼2012-11-06 11:35 byfei  

@星空雾雨
第三题你的意思字符串只是字母？
如果字符串中有数字，有符号呢？
这个方法就不行了

支持(0)反对(0)



   
#9楼2012-11-06 11:42 天鹰  

顶！如果能对代码做详细分析就更好了，期待中...

支持(0)反对(0)



   
#10楼2012-11-06 12:24 byfei  

@
char *DeleteMin(char *InputSrc,int ILen)
{
 map <char,int> MapChar;
 char OutPutSrc [100] = {0};
 int nMin = 20;
 for(int i = 0;i<ILen;i++)
 {
 if(MapChar.find(InputSrc[i] ==MapChar.end())
 {
 MapChar[InputSrc[i]] = 1;
 continue;
 }
 MapChar[InputSrc[i]]++;
 }
 map <char,int>::iterator itr = MapChar.begin();
 for(itr;itr!=MapChar.end();itr++)
 {
 int nCount = itr->second;
 if( nCount < nMin)
 nMin = nCount;
 }
 int j = 0;
 for(int i = 0;i<ILen;i++)
 {
 char data = InputSrc[i];
 if(MapChar[data] == nMin)
 continue;
 OutPutSrc[j] = InputSrc[i];
 j++;
 }
 strcpy(InputSrc,OutPutSrc);
 return InputSrc;
}

时间复杂度还是有待优化

支持(0)反对(0)



   
#11楼2012-11-07 17:08 毒龙的程序人生  

凑个热闹，不用C语言，来个3行的Haskell实现：
space ' ' = ','
space x = x
divideString inputStr = [space c|c<-inputStr]

支持(0)反对(0)

 


刷新评论刷新页面返回顶部
 

注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。

找优秀程序员，就在博客园

 
博客园首页博问新闻闪存程序员招聘知识库
 





最新IT新闻:
 · 英活动家呼吁政府颁布杀手机器人研发禁令
 · 能看漫画的日本智能眼镜 要抢在谷歌前面上市！
 · 787客机即将重返蓝天 波音交出漂亮财报
 · 复盘互联网巨头打通寻人平台过程：大灾面前泯恩仇
 · 江民发生人事动荡：多名创业元老离职
» 更多新闻...

最新知识库文章:

 · 谈谈对BPM的理解
 · 遗留系统的技术栈迁移
 · 架构 － 业务流程管理介绍（BPM）
 · 中文女和程序员的爱情奇遇
 · HTTP负载测试

» 更多知识库文章... 







公告


昵称：星空雾雨
园龄：1年1个月
粉丝：39
关注：1
+加关注
 





随笔分类(26)
AndRoid 
C/C++(3) 
JAVA(1) 
Visaul C++ 
Wince程序以及感悟(2) 
嵌入式编程与开发(8) 
软件设计模式(1) 
数据结构与算法 
找工作--谷歌篇(1) 
找工作--华为篇(6) 
找工作--混杂篇(1) 
找工作--中兴篇(3) 


积分与排名
 积分 - 15933 
排名 - 7736 


阅读排行榜

1. 华为机试第一篇(3417)
2. 谷歌笔试第一篇(2480)
3. 华为机试第三篇(1957)
4. Linux源码printf函数实现(1711)
5. 华为机试第四篇(1601)
6. 将Ubuntu打包成实时操作系统(RTAI)(1432)
7. WinCE下的计算器实现源码(1116)
8. Linux驱动程序第二篇(1049)
9. Linux源码之进程终止函数(920)
10. Linux驱动编程第三篇(837)
11. getchar的缓存机制(789)
12. 华为机试第二篇(729)
13. assert的源码分析以及用法(677)
14. 设计模式总结(646)
15. 华为机试第六篇(320)
16. SD卡烧写WinCE启动过程解析(298)
17. Linux驱动编程第四篇(268)
18. Linux源码之sleep_on【不可中断休眠】(229)
19. 小米网站批量修改密码软件(172)
20. 笔试杂汇(137)
21. Linux驱动程序第一篇【笔记】(127)
22. 华为机试第五篇(99)
23. 中兴Java面试汇总三(33)
24. 中兴Java面试汇总一(25)
25. 中兴Java面试汇总二(23)
26. 操作符重载(19)
 

评论排行榜

1. 华为机试第三篇(13)
2. 华为机试第四篇(11)
3. getchar的缓存机制(8)
4. 华为机试第六篇(1)
5. 设计模式总结(1)
6. 谷歌笔试第一篇(1)
7. 笔试杂汇(1)
8. 小米网站批量修改密码软件(1)
9. 华为机试第一篇(1)
10. Linux源码之进程终止函数(0)
11. Linux源码之sleep_on【不可中断休眠】(0)
12. Linux驱动编程第三篇(0)
13. 华为机试第五篇(0)
14. Linux驱动程序第二篇(0)
15. Linux驱动程序第一篇【笔记】(0)
16. 将Ubuntu打包成实时操作系统(RTAI)(0)
17. SD卡烧写WinCE启动过程解析(0)
18. assert的源码分析以及用法(0)
19. Linux源码printf函数实现(0)
20. 华为机试第二篇(0)
21. 中兴Java面试汇总三(0)
22. 中兴Java面试汇总二(0)
23. 中兴Java面试汇总一(0)
24. 操作符重载(0)
25. WinCE下的计算器实现源码(0)
26. Linux驱动编程第四篇(0)
 

推荐排行榜
 
1. 华为机试第六篇(6)
2. 华为机试第一篇(4)
3. 华为机试第三篇(4)
4. 华为机试第四篇(2)
5. assert的源码分析以及用法(2)
6. 谷歌笔试第一篇(1)
7. Linux驱动编程第三篇(1)
8. Linux驱动程序第二篇(1)
9. Linux源码printf函数实现(1)
10. 华为机试第二篇(1)
11. getchar的缓存机制(1)
12. Linux驱动编程第四篇(1)
13. 设计模式总结(1)
14. WinCE下的计算器实现源码(1)
 


Copyright ©2013 星空雾雨 

