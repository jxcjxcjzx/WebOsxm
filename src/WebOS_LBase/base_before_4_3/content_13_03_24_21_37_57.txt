



kernel@hcy
 
不抛弃，不放弃，不哭泣。

 
首页
 博问
 闪存
 新随笔
 联系
 订阅 
管理
 
随笔-38  文章-1  评论-38  






Linux下有趣的命令




 •yes：输出一串y，有时可以用来对付很多y/n选择的应用 。输出很多。。。
 •banner：打印字符标题，就是用字符拼出大字来 ,最好把窗口最大化，否则可能显示不全。
 •ddate：把日历转成什么其他历，Today is Sweetmorn, the 63rd day of Discord in the YOLD 3173
 •fortune：输出一句话，内容有很多种，据说有唐诗宋词（有唐诗宋词的是fortune-zh，安装完之后，fortune会随机的输出唐诗宋词或英文名言。）
 •cal 9 1752：打印日历，不过那一个月的有问题，原因如下：
 
ppop 写道 "sniper在其BLOG中写道：今天偶然在一个博客上看到关于Linux中日期隐含一段历史的介绍，很好奇，按照别人介绍的方法试验了下。 CODE: cal 9 1752 就可以看到： September 1752 S M Tu W Th F S 1 2 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 发现1752年9月2日的后面竟然是14日，原因如下： 1582年2月，罗马教廷要求从1582 年10月中减去10天，因此1852 年10月4日后面紧跟着就是15日。 在意大利、西班牙等国家都这样处理了。其他天主教国家也很快跟着这么做了，但是新教国家不愿意修改，而且希腊等东正教国家直到20世纪初才修改，所以这个 改革在英国及其殖民地（包括美国）在1752年9月才被执行。这样1752 年9月2日后面跟着的就是1752 年9月14日。 但在Windows下，由于电脑的日期无法调回那个时候（1980再往前就是2099），于是调用VC的月历控件写个万年历，1752 年9月却很正常，看来这是个一段要靠Linux才能了解的历史。"
 •tac：concatenate and print files in reverse，把文件的行反过来打印（cat 反过来写的。。试试就知道）
 •ptx - produce a permuted index of file contents，生成索引？不知道
 •xev：打印即时的X事件
 •xeyes：出眼睛那个，进X第一都要玩玩吧
 •cowsay/cowthink：打印一个小牛（或其他动物）说话或想像，内容可自定
 •factor：分解因数
 •shred：覆盖文件让它不能再读 (传说中的文件粉碎机。。)
 
这两个搞笑：
 •apt-get moo
 
(__)
 (oo)
 /------\/
 / |    ||
 *  /\---/\
 ~~   ~~
 ...."Have you mooed today?"...
 •apt-build moo
 
(__)    ~
 (oo)   /
 _____\/___/
 /  /\ / /
 ~  /  * /
 / ___/
 *----/\
 /  \
 /   /
 ~    ~
 ..."Have you danced today? Discow!"...
 试试下面的一串：
 aptitude moo
 aptitude -v moo
 aptitude -vv moo
 aptitude -vvv moo
 aptitude -vvvv moo
 aptitude -vvvvv moo
 aptitude -vvvvvv moo
 aptitude -vvvvvvv moo
 aptitude -vvvvvvvvvvvvvvvvvvvv moo
 
还有make love，翻成中文倒不好玩了
 
还有人说who am i，不够有意思 。可以试试who is sb。
 其实who am后面跟任何东西都是一样的。。。
 
有人说 rm -fr /，还有dd if=/dev/zero of=/dev/mem，这就太坏了，没事别试，尤其是root敢死队不要试 这个危险
 




分类: Linux/Unix
 

绿色通道： 好文要顶 关注我 收藏该文与我联系 




kernel@hcy
 关注 - 3
 粉丝 - 13 



+加关注 


6

0


 (请您对文章做出评价) 


« 博主上一篇：Lighttpd1.4.20源码分析之状态机（3）返回response
» 博主下一篇：Lighttpd1.4.20源码分析之状态机（4） 错误处理和连接关闭
« 首页上一篇：现代软件工程 10 绩效管理
» 首页下一篇：.NET中的委托和事件(续)

 
posted @ 2011-05-01 16:09 kernel@hcy 阅读(14116) 评论(6) 编辑 收藏
 


评论列表
 



  
#1楼2011-05-01 17:15 huyong  

很不错。

支持(0)反对(0)



   
#2楼2011-05-01 18:43 SkyHacker  

有趣，哈哈

支持(0)反对(0)



   
#3楼2011-05-02 10:25 迷世书童  

呵呵，挺好玩的

支持(0)反对(0)



   
#4楼2011-05-02 19:48 killkill  

还有一个 wc 

支持(0)反对(0)



   
#5楼2011-05-05 18:22 test1111111111111111111111111[未注册用户]

我靠，我被yes搞死了。。。



  
#6楼2011-05-27 09:50 白开水易拉罐  

很好，有意思，学习了！

支持(0)反对(0)

 


刷新评论刷新页面返回顶部
 

注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。

找优秀程序员，就在博客园

 
博客园首页博问新闻闪存程序员招聘知识库
 





最新IT新闻:
 · 王垠：无题
 · Windows 8 应用数量突破五万
 · 细数 Android 2013年的挑战者们
 · 马化腾：我们恐惧的是移动互联网商业模式不清晰
 · ICANN公布新gTLD域名获胜者名单
» 更多新闻...

最新知识库文章:

 · 我眼中的技术高手
 · 开发者需要了解的WebKit
 · 设计沟通的七条经验
 · 处理 JavaScript 异常的一个想法
 · SQL Server表分区详解

» 更多知识库文章... 













<

2011年5月

>

 


日

一

二

三

四

五

六



24

25

26

27

28

29

30



1

2

3

4

5

6

7



8

9

10

11

12

13

14



15

16

17

18

19

20

21



22

23

24

25

26

27

28



29

30

31

1

2

3

4

 



搜索
 
 

 
我的标签
 

随笔分类(39)
C_CPP(5) 
Java 
Lighttpd源码分析(16) 
Linux/Unix(6) 
Python(1) 
redis源码分析(2) 
设计模式 
算法(3) 
随笔(1) 
杂类(5) 


随笔档案(38)
2011年7月 (1) 
2011年6月 (1) 
2011年5月 (4) 
2011年4月 (1) 
2010年9月 (1) 
2010年8月 (1) 
2010年5月 (1) 
2010年4月 (1) 
2010年3月 (9) 
2010年2月 (1) 
2010年1月 (2) 
2009年11月 (4) 
2009年10月 (1) 
2009年8月 (10) 


积分与排名
 积分 - 45837 
排名 - 2688 


最新评论

1. Re:简述动态存储分配及malloc(),free()函数
写得如此详尽的文章，居然没人发现？--dartagnan
2. Re:伸展树
好像有问题，第二个，zig-zag的情况，明显应该是现绕着p转再绕着g转。你的伪代码里用p绕着g转，转完了x还在那一层。--欲三更
3. Re:redis源码分析（1）内存管理
分析得不出，赞一个。--westfly
4. Re:伸展树
上面的第二条不是zag-zig吗？先左旋再右旋--ITX351
5. Re:redis源码分析（2）dict哈希词典
@whzncutoffice--kernel@hcy
 

阅读排行榜

1. Linux下有趣的命令(14116)
2. zz from newsmth e进制是信息表示的最优解(5571)
3. redis源码分析（1）内存管理(3993)
4. lighttpd1.4.20源码分析 -----工作模型(3710)
5. Lighttpd1.4.20源码分析之状态机（1）---状态机总览(3095)
 

评论排行榜

1. redis源码分析（2）dict哈希词典(6)
2. Linux下有趣的命令(6)
3. 伸展树(4)
4. Lighttpd1.4.20源码分析之插件系统（2）---插件的加载和初始化(3)
5. [转载]一封尘封了八年的信(3)
 

推荐排行榜
 
1. Linux下有趣的命令(6)
2. Lighttpd1.4.20源码分析之状态机（1）---状态机总览(2)
3. [转载]一封尘封了八年的信(2)
4. Lighttpd1.4.20源码分析之array.c(h) -----通用数组(2)
5. [zz]主要C++流派，看看你是哪一流(1)
 


Copyright ©2013 kernel@hcy 

