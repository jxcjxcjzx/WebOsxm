










分享到...




复制网址邮件QQ空间新浪微博腾讯微博微信人人网开心网网易微博搜狐微博QQ好友淘江湖飞信豆瓣一键分享查看更多(124)


这是什么工具?

JiaThis
 

























Spiga Posts - 79, Articles - 0, Comments - 3693 
Cnblogs
Dashboard
Login

Home
Contact
Gallery
RSS


CodingLabs个人博客已迁移至codinglabs.org，欢迎访问




从一道面试题谈linux下fork的运行机制
2009-12-11 23:05 by T2噬菌体, 6124 阅读, 13评论, 收藏, 编辑


      今天一位朋友去一个不错的外企面试linux开发职位，面试官出了一个如下的题目：
 
      给出如下C程序，在linux下使用gcc编译：
 
#include "stdio.h"
#include "sys/types.h"
#include "unistd.h"

int main()
{
    pid_t pid1;
    pid_t pid2;

    pid1 = fork();
    pid2 = fork();

    printf("pid1:%d, pid2:%d\n", pid1, pid2);
}
 
      要求如下：
 
      已知从这个程序执行到这个程序的所有进程结束这个时间段内，没有其它新进程执行。
 
      1、请说出执行这个程序后，将一共运行几个进程。
 
      2、如果其中一个进程的输出结果是“pid1:1001, pid2:1002”，写出其他进程的输出结果（不考虑进程执行顺序）。
 
      明显这道题的目的是考察linux下fork的执行机制。下面我们通过分析这个题目，谈谈linux下fork的运行机制。
 
预备知识
 
      这里先列出一些必要的预备知识，对linux下进程机制比较熟悉的朋友可以略过。
 
      1、进程可以看做程序的一次执行过程。在linux下，每个进程有唯一的PID标识进程。PID是一个从1到32768的正整数，其中1一般是特殊进程init，其它进程从2开始依次编号。当用完32768后，从2重新开始。
 
      2、linux中有一个叫进程表的结构用来存储当前正在运行的进程。可以使用“ps aux”命令查看所有正在运行的进程。
 
      3、进程在linux中呈树状结构，init为根节点，其它进程均有父进程，某进程的父进程就是启动这个进程的进程，这个进程叫做父进程的子进程。
 
      4、fork的作用是复制一个与当前进程一样的进程。新进程的所有数据（变量、环境变量、程序计数器等）数值都和原进程一致，但是是一个全新的进程，并作为原进程的子进程。
 
解题的关键
 
      有了上面的预备知识，我们再来看看解题的关键。我认为，解题的关键就是要认识到fork将程序切成两段。看下图：
 


      上图表示一个含有fork的程序，而fork语句可以看成将程序切为A、B两个部分。然后整个程序会如下运行：
 
      step1、设由shell直接执行程序，生成了进程P。P执行完Part. A的所有代码。
 
      step2、当执行到pid = fork();时，P启动一个进程Q，Q是P的子进程，和P是同一个程序的进程。Q继承P的所有变量、环境变量、程序计数器的当前值。
 
      step3、在P进程中，fork()将Q的PID返回给变量pid，并继续执行Part. B的代码。
 
      step4、在进程Q中，将0赋给pid，并继续执行Part. B的代码。
 
      这里有三个点非常关键:
 
      1、P执行了所有程序，而Q只执行了Part. B，即fork()后面的程序。（这是因为Q继承了P的PC-程序计数器）
 
      2、Q继承了fork()语句执行时当前的环境，而不是程序的初始环境。
 
      3、P中fork()语句启动子进程Q，并将Q的PID返回，而Q中的fork()语句不启动新进程，仅将0返回。
 
解题
 
      下面利用上文阐述的知识进行解题。这里我把两个问题放在一起进行分析。
 
      1、从shell中执行此程序，启动了一个进程，我们设这个进程为P0，设其PID为XXX（解题过程不需知道其PID）。
 
      2、当执行到pid1 = fork();时，P0启动一个子进程P1，由题目知P1的PID为1001。我们暂且不管P1。
 
      3、P0中的fork返回1001给pid1，继续执行到pid2 = fork();，此时启动另一个新进程，设为P2，由题目知P2的PID为1002。同样暂且不管P2。
 
      4、P0中的第二个fork返回1002给pid2，继续执行完后续程序，结束。所以，P0的结果为“pid1:1001, pid2:1002”。
 
      5、再看P2，P2生成时，P0中pid1=1001，所以P2中pid1继承P0的1001，而作为子进程pid2=0。P2从第二个fork后开始执行，结束后输出“pid1:1001, pid2:0”。
 
      6、接着看P1，P1中第一条fork返回0给pid1，然后接着执行后面的语句。而后面接着的语句是pid2 = fork();执行到这里，P1又产生了一个新进程，设为P3。先不管P3。
 
      7、P1中第二条fork将P3的PID返回给pid2，由预备知识知P3的PID为1003，所以P1的pid2=1003。P1继续执行后续程序，结束，输出“pid1:0, pid2:1003”。
 
      8、P3作为P1的子进程，继承P1中pid1=0，并且第二条fork将0返回给pid2，所以P3最后输出“pid1:0, pid2:0”。
 
      9、至此，整个执行过程完毕。
 
      所得答案：
 
      1、一共执行了四个进程。（P0, P1, P2, P3）
 
      2、另外几个进程的输出分别为：
 
      pid1:1001, pid2:0
 
      pid1:0, pid2:1003
 
      pid1:0, pid2:0
 
      进一步可以给出一个以P0为根的进程树：
 


验证
 
      下面我们去linux下实际执行这个程序，来验证我们的答案。
 
      程序如下图：
 


      用gcc编译、执行后结果如下：
 


      由于我们不太可能刚巧碰上PID分配到1001的情况，所以具体数值可能和答案有所差别。不过将这里的2710看做基数的话，结果和我们上面的解答是一致的。
 
总结
 
      应该说这不是一道特别难或特别刁钻的题目，但是由于fork函数运行机制的复杂性，造就了当两个fork并排时，问题就变得很复杂。解这个题的关键，一是要对linux下进程的机制有一定认识，二是抓住上文提到的几个关于fork的关键点。朋友说，这个题给的时间是5分钟，应该说时间还算充裕，但是在面试的场合下，还是很考验一个人对进程、fork的掌握程度和现场推理能力。
 
      希望本文能帮助朋友们对fork的执行机制有一个明晰的认识。


本文基于署名-非商业性使用 3.0许可协议发布，欢迎转载，演绎，但是必须保留本文的署名张洋（包含链接），且不得用于商业目的。如您有任何疑问或者授权方面的协商，请与我联系。
 



分类: [06]unix&linux
 
标签: linux, fork, process, 进程
 
绿色通道： 好文要顶 关注我 收藏该文与我联系 




T2噬菌体
 关注 - 14
 粉丝 - 1065 


荣誉：推荐博客
 
+加关注 


6

0


 (请您对文章做出评价) 


« 博主上一篇：细说业务逻辑（后篇）
» 博主下一篇：单元测试之道（使用NUnit）
« 首页上一篇：WF4 Workflow Service:SendParameters和ReceiveParameters
» 首页下一篇：ASP.NET:就是喜欢Web Form，就是喜欢拖控件（二）

 Categories: [06]unix&linux
Tags: linux, fork, process, 进程
 

Add your comment 


#1楼 Old   2009-12-12 08:59

前天刚看了Linux 下 fock 的源代码。5分钟内解答正确。
;-)

支持(0)反对(0)




#2楼 陛下   2009-12-12 09:03

多研究研究（学习、学习），能找到乐趣最好，呵呵。

支持(0)反对(0)




#3楼 功力不错！[未注册用户] 2009-12-12 09:29


引用Old：
前天刚看了Linux 下 fock 的源代码。5分钟内解答正确。
;-)





#4楼 陛下：我这辈子是学不会了......[未注册用户] 2009-12-12 09:33


引用陛下：多研究研究（学习、学习），能找到乐趣最好，呵呵。

也就找不到乐趣了。

呜呜...





#5楼 kwjlk   2009-12-12 09:42

T2是不是那个生化危机里的病毒？

支持(0)反对(0)




#6楼 不登录[未注册用户] 2009-12-12 11:48

对Linux下的编程不是很了解，
不过好文要顶！




#7楼 Jake Lin   2009-12-12 19:01

good。现在用fork不多了，都用threading。

支持(0)反对(0)




#8楼 快乐八哥   2009-12-12 21:47

这个在操作系统中，老师应该仔细讲过这个。我们写过相似的程序。进程和线程是相辅相成的，两个都用武之地。共同学习

支持(0)反对(0)




#9楼 〃無訫〃   2009-12-31 23:58

ASP.NET+AJAX+WCF+DIV+JAVA+JSP+C# 不搞技术的勿进。
群号：14615476

支持(0)反对(0)




#10楼 zhuizhuziwo   2011-10-07 11:29

其实这个问题画一个图就明白了。不过还是很容易出错的题目。

支持(0)反对(0)




#11楼 weedge   2011-10-10 00:02

不错呀，在看《深入理解计算机系统》中也提到过，再次加深印象。~！~

支持(0)反对(0)




#12楼 lchpeng[未注册用户] 2011-10-17 19:51

讲的非常好！




#13楼 渔牧   2011-12-20 15:01

理解了。不过还有一点没搞明白。p0进程是fork()了p1之后，计算机仍然执行p0？还是执行p1？还是计算机的进程调度随机选择？

支持(0)反对(0)




 


刷新评论刷新页面返回顶部
 

注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。

找优秀程序员，就在博客园

 
博客园首页博问新闻闪存程序员招聘知识库
 





最新IT新闻:
 · 地球在燃烧，恐龙遭灭绝
 · 去年全球PC游戏销售额200亿美元 中国独占68亿
 · 构建和谐团队的秘诀：讲故事
 · 王垠：谈编译器
 · 王垠：Lisp 已死，Lisp 万岁！
» 更多新闻...

最新知识库文章:

 · 命令行是你的至交好友
 · 经典论文翻译导读之《Google File System》
 · 解密Facebook产品的开发流程
 · 我眼中的技术高手
 · 开发者需要了解的WebKit

» 更多知识库文章... 







About 





姓名：张洋
 
花名：夜沨
 
英文名：Eric Zhang
 
------------------------------------------------------------
 
2008年毕业于烟台大学计算机学院，获计算机科学与技术学士学位
 
2011年毕业于北京航空航天大学计算机学院，获计算机软件与理论硕士学位
 
------------------------------------------------------------
 
目前供职于淘宝（北京）数据平台与产品部量子统计，主要从事淘宝量子数据产品研发工作，关注并研究PHP、Lua、Python、Erlang、Nginx、MySQL、NoSQL、Web前端开发、分布式、云计算及数据可视化等技术。
 
另外，个人爱好算法和数据挖掘方面的知识，也是Linux、脚本语言和函数式语言的爱好者。十分关注开源社区和产品。
 
KISS原则的狂热崇拜者和实践者。
 
除计算机外对数学、经济学、历史和哲学也颇有兴趣。
 
业余爱好踢足球与打网球，是红魔曼联的fans。另外看电影、听音乐、旅游和吃零食也是生活中不可或缺的元素。
 
------------------------------------------------------------
 
您是第位访客，欢迎您！！！
 
------------------------------------------------------------
 Google Drive 
------------------------------------------------------------
 


------------------------------------------------------------
         
         
         
         
         
         
 

昵称：T2噬菌体
园龄：4年11个月
荣誉：推荐博客
粉丝：1065
关注：14
+加关注
 





最新评论
Re:使用SeaJS实现模块化JavaScript开发
 好东西，看了一半，先收藏着了 -- forbetter 
Re:你真的了解分层架构吗？——写给被PetShop&quot;毒害&quot;的朋友们
 作为一个看了PetShop，在数次面试中总是听到分层就三层架构的我，表示看过这篇文章之后有所得。 -- kwjlk 
Re:发布一个查看PHP opcode的扩展模块及Web服务
 很喜欢博主的文章，刚刚用豆约翰博客备份专家备份了您的全部博文。 -- learningLinux 
Re:算法杂货铺——分类算法之决策树(Decision tree)
博主，正在看您的ID3代码，请问输入是怎么控制的？ -- gxiaob 
Re:依赖注入那些事儿
 楼主好文，值得拜读！ -- 晖洒自如 



随笔档案
 2012年5月(1)
2011年11月(2)
2011年10月(1)
2011年8月(1)
2011年7月(2)
2011年6月(1)
2011年4月(1)
2011年3月(1)
2011年2月(1)
2011年1月(2)
2010年12月(4)
2010年11月(1)
更多...



















 







随笔分类
 Rss[01].NET(14) 
Rss[02]ASP.NET AJAX(7) 
Rss[03]ASP.NET MVC(8) 
Rss[04]PHP(5) 
Rss[05]UML(2) 
Rss[06]unix&linux(2) 
Rss[07]面向对象技术(11) 
Rss[08]软件过程及软件项目管理(3) 
Rss[09]软件架构(7) 
Rss[10]设计模式(1) 
Rss[11]数据挖掘(4) 
Rss[12]算法分析与设计(6) 
Rss[13]工具发布(1) 
Rss[14]Web前端(5) 
Rss[15]数据库(1) 
Rss[16]Nginx&Apache(1) 


推荐排行榜

1. 依赖注入那些事儿(57)
2. MySQL索引背后的数据结构及算法原理(51)
3. 细说业务逻辑（前篇）(46)
4. ASP.NET MVC案例教程（基于ASP.NET MVC beta）——第一篇：准备工作(31)
5. 哈希(Hash)与加密(Encrypt)的基本原理、区别及工程应用(26)
 

阅读排行榜

1. ASP.NET MVC案例教程（基于ASP.NET MVC beta）——第一篇：准备工作(93257)
2. ASP.NET MVC案例教程（基于ASP.NET MVC beta）——第二篇：第一个页面(61217)
3. MySQL索引背后的数据结构及算法原理(53182)
4. ASP.NET MVC案例教程（基于ASP.NET MVC beta）——第三篇：ASP.NET MVC全局观(49421)
5. ASP.NET MVC案例教程（基于ASP.NET MVC beta）——第四篇：传递表单数据(49125)
 


www.spiga.com.mx 


Copyright ©2013 T2噬菌体 

博客园 



