Please note: This wiki is currently running in test mode after an attack on January 5 2013. All passwords were reset, so you will have to use the password recovery function to get a new password. To edit wiki pages, please log in first. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list. 







BeginnersGuide
Programmers
SimpleExamples
 BeginnersGuide/Download
BeginnersGuideChinese
SimpleExamples
 



FrontPage
RecentChanges
FindPage
HelpContents
SimpleExamples
 

Page
 Immutable Page

Info
Attachments
 

More Actions:Raw Text Print View Delete Cache ------------------------ Check Spelling Like Pages Local Site Map ------------------------ Rename Page Delete Page ------------------------ ------------------------ Remove Spam Revert to this revision ------------------------ SlideShow
 


User
 Login
 


Here are some samples to help get a better idea of Python's syntax: 

Hello World (the traditional first program) 




print 'Hello world!'

 String formatting 




name = 'Monty'
print 'Hello, %s' % name

 Defining a function 




def add_one(x):
    return x + 1

 Testing variable equality 




x=1
y=2
print 'x is equal to y: %s' % (x==y)
z=1
print 'x is equal to z: %s' % (x==z)
names=['Donald','Jake','Phil']
words=['Random','Words','Dogs']
if names==words:
    print 'Names list is equal to words'
else:
    print 'Names list isn\'t equal to words'
new_names=['Donald','Jake','Phil']
print 'New names list is equal to names: %s' % (new_names==names)

 Defining a class with two methods 




class Talker(object):
    def greet(self, name):
        print 'Hello, %s!' % name
    def farewell(self, name):
        print 'Farewell, %s!' % name

 Defining a list 




dynamic_languages = ['Python', 'Ruby', 'Groovy']
dynamic_languages.append('Lisp')

 Defining a dictionary 




numbered_words=dict()
numbered_words[2]='world'
numbered_words[1]='Hello'
numbered_words[3]='!'

 Defining a while loop 




while True:
    if value==wanted_value:
        break
    else:
        pass

 Defining multiline strings 




string=('This is a '
        'multiline string')

 Defining a for loop 




for x in xrange(1,4):
    print ('Hello, new Python user!'
           'This is time number %d') % (x)

 BeginnersGuide/Programmers/SimpleExamples (last edited 2010-12-17 15:06:54 by EnalIcho)

 
MoinMoin Powered
Python Powered
GPL licensed
Valid HTML 4.01
 
