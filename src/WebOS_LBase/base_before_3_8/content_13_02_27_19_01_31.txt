

首页
开源软件
讨论区
代码分享
博客
翻译
资讯
Android
招聘


 当前访客身份：游客 [ 登录 | 加入开源中国 ] 



当前位置：讨论区 » 技术分享» Bash


软件代码讨论区新闻博客








使用 Bash 编写的 TCP 端口扫描器

红薯 发表于 2012-8-28 23:25 6个月前, 22回/4388阅, 最后回答: 1个月前 

讨论区 » 技术分享



Java、PHP、Ruby、iOS、Python 开发工具低至 69 元，详情»



我突然有一个用 Bash 来编写 TCP 端口扫描器的想法。Bash 支持可读写的特殊文件 /dev/tcp/host/port ，往这个文件写内容可以让 bash 打开一个 TCP 连接到 host:port ，如果写文件成功则表示此端口是打开的，否则说明该端口没有打开。

因此我们先简单的写一个测试脚本：










1

for port in {1..65535}; do





2

  echo >/dev/tcp/google.com/$port &&





3

    echo "port $port is open" ||





4

    echo "port $port is closed"





5

done


该脚本将扫描 google.com 服务器端口，从 1 到 65535。当然，如果端口没打开的话是没法工作的，bash 花了 2 分钟时间意识到这点。

为了解决这个问题我们需要一些类似 alarm(2) 的方法来中断 bash，而 bash 没有内置的 alarm 函数，因此我们用 Perl 语言写了一个：










01

alarm() {





02

  perl -e '





03

    eval {





04

      $SIG{ALRM} = sub { die };





05

      alarm shift;





06

      system(@ARGV);





07

    };





08

    if ($@) { exit 1 }





09

  ' "$@";





10

}


这个 alarm 函数需要两个参数：alarm 调用的秒数和要执行的代码，如果执行的代码没有在指定的时间内执行完毕则该函数调用失败。

有了这个 alarm 函数，我们就可以修改上面的代码如下：










1

for port in {1..65535}; do





2

  alarm 1 "echo >/dev/tcp/google.com/$port &&





3

    echo \"port $port is open\"" ||





4

    echo "port $port is closed"





5

done


这个终于可以运行了，当扫描到某个端口是关闭的， bash 将在 1 秒后执行下一个端口的扫描。

然后我们将这些代码封装到一个 scan 函数中：



view source

print?




01

scan() {





02

  if [[ -z $1 || -z $2 ]]; then





03

    echo "Usage: $0 <host> <port, ports, or port-range>"





04

    return





05

  fi





06

 





07

  local host=$1





08

  local ports=()





09

  case $2 in





10

    *-*)





11

      IFS=- read start end <<< "$2"





12

      for ((port=start; port <= end; port++)); do





13

        ports+=($port)





14

      done





15

      ;;





16

    *,*)





17

      IFS=, read -ra ports <<< "$2"





18

      ;;





19

    *)





20

      ports+=($2)





21

      ;;





22

  esac





23

 





24

 





25

  for port in "${ports[@]}"; do





26

    alarm 1 "echo >/dev/tcp/$host/$port &&





27

      echo \"port $port is open\"" ||





28

      echo "port $port is closed"





29

  done





30

}


这样就可以在 shell 中使用 scan 函数，需要的参数包括要扫描的主机地址、端口列表（可以时端口组合和端口范围，或者是某个特定端口）

下面是扫描 google.com 服务器的 78 - 82 端口：










1

$ scan google.com 78-82 





2

port 78 is closed





3

port 79 is closed





4

port 80 is open





5

port 81 is closed





6

port 82 is closed


如果你想测试 UDP 端口，只需要将前面提及的 /dev/tcp 改为 /dev/udp/

最后：大家手下留情，看在我辛苦翻译下，不要用它来扫描 oschina 的服务器。

英文原文，OSCHINA原创翻译


标签：Bash Perl OSCHINA原创翻译

补充话题说明»

 


分享到 

收藏

102

举报

踩0 | 顶4



按默认排序 | 显示最新评论 | 回页面顶部共有22个评论 发表评论»




Jason阿坚 回答于 2012-08-28 23:31 来自 Android

举报


沙发，好文



有帮助(0) | 没帮助(0) | 评论(0) | 引用此评论 





天国之翼 回答于 2012-08-29 01:19 

举报


(for (port (int ($main-args 3)) (int ($main-args 4))) (println port (if (net-connect ($main-args 2) port 10) " Open" "")))  
 >newlisp scan.lsp localhost 1 4200 

result: 
. 
134 
135 Open 
136 
. 









01

;;工整点?





02

 





03

(set 'host ($main-args 2))





04

(set 'start-port ($main-args 3))





05

(set 'end-port ($main-args 4))





06

(for (port (int start-port) (int end-port))





07

    (if (net-connect host port 10)





08

        (println port " Open")





09

        (println port "")





10

)





11

)


 



有帮助(0) | 没帮助(0) | 评论(0) | 引用此评论 





蟋蟀哥哥 回答于 2012-08-29 02:59 来自 Android

举报


nmap多快多方便嘛



有帮助(0) | 没帮助(0) | 评论(0) | 引用此评论 





皮总 回答于 2012-08-29 07:32 来自 Android

举报


我用nmap来扫描


--- 共有 1 条评论 --- 我这还有款压力测试工具，需要不.(6个月前 by 蟋蟀哥哥)

 


有帮助(0) | 没帮助(0) | 评论(1) | 引用此评论 





fei 回答于 2012-08-29 08:25 

举报


有nmap还需要这个？ 




有帮助(0) | 没帮助(0) | 评论(0) | 引用此评论 





-老李- 回答于 2012-08-29 09:14 

举报


好文



有帮助(0) | 没帮助(0) | 评论(0) | 引用此评论 





xiaog 回答于 2012-08-29 09:24 

举报




引用来自“fei”的答案

有nmap还需要这个？ 



你确定每个Linux上都有nmap，你确定每个Linux上都可以装nmap

 


--- 共有 2 条评论 --- @红薯 good job(6个月前 by xiaog)

主要是提供另外一种思路，也挺有意思：）(6个月前 by 红薯)

 


有帮助(0) | 没帮助(0) | 评论(2) | 引用此评论 





SeanWright 回答于 2012-08-29 09:51 

举报



好文！还是用了perl



有帮助(0) | 没帮助(0) | 评论(0) | 引用此评论 





化境 回答于 2012-08-29 09:51 

举报


看大伙分享的代码，最感兴趣的是其实现的思路。



有帮助(0) | 没帮助(0) | 评论(0) | 引用此评论 





Brooks 回答于 2012-08-29 10:39 

举报



一直很期待看到shell下直接操作端口的方法，这篇文章终于接近了这个目标，非常好的方法。

 

不知道在shell下，是否可以直接将数据写到端口，完成端口通讯？有谁做过这样的尝试吗



有帮助(0) | 没帮助(0) | 评论(0) | 引用此评论 

1
2
3
>













回评论顶部 | 回页面顶部
 

有什么技术问题吗？ 我要提问

全部(4903)...红薯的其他问题使用 JFile 进行文件读写，一样很蛋疼。。。(0回/192阅,8小时前)
在 AWS 上比较 Nginx 和 Apache 的性能 —— Nginx 并不总是赢家！(3回/599阅,10小时前)
使用 JID 来进行 Java 对象的高性能序列化(13回/1878阅,昨天(14:19))
奖励前 10 名开源中国翻译贡献者(55回/6652阅,2天前)
OSChina 第 31 期高手问答 —— Android 推送开发(46回/3134阅,4天前)

 

类似的话题如何调试bash脚本(0回/56阅,10个月前)
Bash 维基百科(0回/151阅,4年前)
彩色的命令行(0回/167阅,3年前)
Linux bash telnet script問題請教(0回/193阅,2年前)
[转] 扩大windows的TCP连接数(1回/249阅,2年前)
让你提升命令行效率的 Bash 快捷键 [完整版](7回/1369阅,1年前)
tcp_proxy的网友评论(3回/564阅,3年前)
Android开发：如何实现TCP和UDP传输(0回/1841阅,1年前)
备份MySQL数据库的简单Bash脚本(0回/197阅,2年前)
使用 cron、bash 和 wget 监控 Web 服务器的状态(2回/2047阅,11个月前)

 




© 开源中国(OsChina.NET) | 关于我们 | 广告联系 | @新浪微博 | 开源中国手机版 | 粤ICP备12009483号-3
 
开源中国手机客户端：AndroidiPhoneWP7 



















