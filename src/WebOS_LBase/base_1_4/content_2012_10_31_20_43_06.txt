Linux下共享库的制作与使用
还是使用上面的例子程序： 

生成共享库（动态链接库）：
#>gcc -fpic -shared -o libstr.so Strlen.c Strnlen.c
-fpic 使输出的对象模块是按照可重定位地址方式生成的。
-shared指定把对应的源文件生成对应的动态链接库文件libstr.so文件。 

动态库的使用：
动态库的分为隐式调用和显式调用两种调用方法：
隐式调用的使用使用方法和静态库的调用差不多，具体方法如下：
#>gcc -c -I/home/hcj/xxxxxxxx main.c 
#>gcc -o main1 -L/home/hcj/xxxxxxxx main.o libstr.so //这里是*.so 

在这种调用方式中，需要维护动态链接库的配置文件/etc/ld.so.conf来让动态链接库为系统所使用，通常将动态链接库所在目录名追加到动态链接库配置文件中。否则在执行相关的可执行文件的时候就会出现载入动态链接库失败的现象。在编译所引用的动态库时，可以在gcc采用 –l或-L选项或直接引用所需的动态链接库方式进行编译。在Linux里面，可以采用ldd命令来检查程序依赖共享库。不过我没有隐式调用成功过，因为在Cygwin中没有找到/etc/ld.so.conf，很奇怪。 

