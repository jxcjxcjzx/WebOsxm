



【编程随想】的技术博客





 



目录视图
摘要视图
订阅
 . 



博文代码可自动存入CODE啦了！        WebApp实时开源框架Clouda---认识心得      Tag功能介绍—我们为什么打Tag      订阅CSDN社区周刊，及时了解社区精华内容 



Google收购摩托罗拉移动，仅仅是为了专利吗？ 
.
 分类： 业界评论2011-08-17 23:5719793人阅读评论(42)收藏举报
 
googleandroid微软手机操作系统oraclewindows phone

前天Google宣布收购摩托罗拉移动，IT业界为之震动。此次并购的深远影响，不亚于09年Oracle收购Sun。俺对这种业界八卦一向是有兴趣滴，下面就来聊聊此事。为了打字方便，以下把"摩托罗拉移动"简称Moto。
 

★Google的专利困境
 
　　关注此事的同学都应该听说，最近几个月，Google在专利方面非常郁闷。
 

◇微软的搅局
 
　　要知道Google推广Android是靠免费赚吆喝——硬件厂商不需要支付Google授权许可。因此，大部分硬件厂商都冲着免费而投入Android阵营。眼看着Android的出货量节节攀升，微软非常捉急，终于拿出专利大棒来威胁那些Android厂商。微软这么干可谓一石二鸟：一来可以坐收高额专利费，二来可以打击Android硬件厂商的积极性。
 　　以HTC这个Android销售大户为例。经过几轮谈判，它支付给微软的专利费是：每台Android手机5美元。有业界人士估计了一下，HTC出货的Android设备大概是3000万。也就是说，微软嘛事不干，就可以从HTC手中拿到1.5亿美金，而Google辛辛苦苦开发出Android给HTC用，自己却拿不到一分钱。
 

◇Oracle的勒索
 
　　Oracle虽然不涉足手机市场，但由于Oracle前年并购了Sun，获得了很多Java相关的知识产权。而Android平台是基于Java搭建的。因此，Oracle就乘机上门敲竹杠。由于Oracle狮子大开口（一下子要几十亿美金），Google当然不会轻易就范。双方都有大把的钞票去聘请高级律师，案子就从去年一直拖到现在。
 　　但是，前不久曝光的一些新证据让此案峰回路转——Oracle方面发现了一些新证据，证明当初Google是明知故犯。这下Google被动了——故意侵权比无意中侵权，要多好几倍的罚款。这一下子就把Google逼到死角里。
 　　当然，这件事也怪Google自己做事不地道。如果当初刚开发Android时，老老实实付给Sun授权费，眼下也就不会这么被动了。从此事还可以看出，Google不作恶的口号是有些水分。
 

◇竞购北电专利失败
 
　　北电是一家老牌的通讯设备公司，手头有非常多专利。Google在专利方面受尽欺负之后，就想通过购买北电的专利，来充实自己的实力。但是苹果和微软也不傻，他们也看上了北电的专利。而且，微软和苹果还组成联盟，同Google争夺北电。Google手头的钞票显然没有微软多，更没有苹果多。最终，北电的专利被微软和苹果联手买下。
 　　假如当初Google顺利拿下北电，很可能就不会再去收购Moto了。
 

◇总结
 
　　业内的老牌巨头，之所以敢拿专利刁难Google，是看准了Google手头没有足够多的专利作为武器。专利这种东西就好比核武器，如果双方都有，那双方都不敢用（否则会两败俱伤）。反之，如果一方有专利而另一方没有，那有专利的一方就可以大肆敲竹杠。
 　　专利还有另一个特点，就是周期比较长（从申报到审核通过，可能要好几年）。虽然Google内部牛人云集，但是要积累足够多的专利，也要等上好多年。
 　　正是因为Google吃了这些专利的苦头，最终想下血本，通过并购来获取足够多的专利，作为自己的专利武器。　　
 

★并购仅仅是为了专利吗？
 
　　按照Google官方的说法，收购Moto就是为了拿到专利。如果再结合刚才提到的专利困境，看起来似乎合情合理。但是俺仔细一琢磨，感觉没这么简单。
 

◇为啥要买下整个公司？
 
　　据说，当Google跟Moto谈判时，微软也在谈。但是微软跟Google的出发点不同——微软只是想花钱搞到Moto的专利。如果说，Google的唯一目的就是专利，那它完全可以像微软那样，只花几十亿美金去搞专利，没必要把整个公司都买下来。所以，Google在看中专利的同时，可能还看中了Moto的其它资产。
 

◇此地无银的官方声明
 
　　Google的官方声明（原文在"这里"）一再强调，收购是为了专利，并且信誓旦旦地保证：会让Android继续保持开放，Google自己不会进入硬件领域同现有的Android硬件厂商竞争。眼下的这一幕，不禁让人想起Google最近几年来的一些言行。
 
　　当初Google把Firefox的主力程序员挖走，业界就有小道消息说，Google要自己搞浏览器。Google官方立马辟谣说不会。结果捏，现在Chrome的市场份额第三，直追名列第二的Firefox。
 　　当初业界传闻Google要搞办公软件，Google官方立马辟谣说不会。结果捏，不久就推出了Google Docs。
 　　这样的例子貌似还有......
 　　最绝的是，当05年Google收购Android，就有人猜测Google要搞手机操作系统。当时的CEO施大爷辟谣说，Google的宗旨是让手机用户都能用上Google的产品（比如搜索、Gmail），Google自己是不会去做手机操作系统滴。结果捏，连老江湖的苹果帮主都被忽悠了。乔帮主还当Google是（一同对抗微软的）自家兄弟，还让施大爷加入苹果的董事会。等到2008年，乔老爷才如梦初醒，同Google彻底决裂（貌似它们俩在翻脸的时候，还搞了场口水战）。
 
◇结论
 　　Google花了125亿的天价，把整个Moto买下，除了看中专利，应该还有其它一些考虑。下面，俺不妨揣测一下，Google的醉翁之意。在揣测之前，先介绍一下，当今移动领域3巨头的商业模式。
 

★移动三巨头的商业模式
 
　　当前移动领域的3巨头分别是苹果、Google、微软。它们三家正好代表了三种截然不同的盈利模式。
 

◇苹果模式
 
　　自己开发手机操作系统和手机硬件，也就是"软硬通吃"。而且，苹果不光软硬都做，连服务（iTunes，AppStore）也一手包办了，相当于整个产业链通吃。通过搞产业链的垂直整合，苹果就能制造出精品。
 　　在此模式下，利润直接来自最终消费者。
 　　此种模式的关键是精品。只有精品才能维持足够大的粉丝群，并让这些粉丝心甘情愿地掏出大把的银子。
 

◇Google模式
 
　　自己开发手机操作系统（Android），但是不开发硬件，属于"只软不硬"。通过免费的方式吸引手机硬件厂商，以此扩张Android的市场占有率。当Android的占有率达到绝对多数（至少50%），Google就可以通过卖广告的方式赚钱。
 　　在此模式下，利润直接来自广告投放者。
 　　此种模式的关键是占有率。当占有率足够大，广告客户就愿意投放广告。
 

◇微软模式
 
　　光看微软的名字，就知道它也是"只软不硬"的家伙。它跟Google一样，也是自己开发手机操作系统（以前叫 Windows Mobile，现在叫 Windows Phone），而不开发硬件。微软跟Google不同，它是通过卖软件授权来盈利。也就是说，硬件厂商如果用微软的系统，需要给微软一笔授权费。
 　　在此模式下，利润直接来自手机硬件厂商。
 

◇苹果模式 vs Google模式
 
　　以目前的局面来看，微软模式混得最差，直接忽略。下面对比一下苹果和Google的这2个模式的优劣。
 　　苹果模式的好处在于：一家公司同时控制硬件和软件，可以做到很好的软硬配合。其结果就是：软件界面非常一致，用户体验好；而且开发人员可以专注于一种硬件，开发成本也会低。缺点是：会得罪所有硬件厂商；产品形态（包括功能和价格）会单一化，未必能满足多样的用户需求。
 　　Google模式的好处在于：由诸多硬件公司生产不同的机型，具有多样化（包括功能的多样化和价格的多样化），这就能覆盖不同用户群的需求；不会得罪硬件厂商。缺点是：开发人员需要兼容多种硬件形态，开发难度大；软件界面会不一致导致用户体验差。
 　　从上述可以看出，这两种模式在优缺点方面，正好是互补的。
 

★Google的如意算盘究竟如何？
 
　　（以下部分是俺的YY，正确性未可知，大伙儿姑且听之）
 　　在进入手机领域的头几年，Google显然是执行Google模式。但是近一年来，苹果超强的吸金能力有目共睹，现金流和市值都大幅攀升。苹果的惊人表现估计让某些Google的领导层眼馋，他们可能在重新权衡，到底哪种模式会最终胜出。但是，移动市场瞬息万变，无论押宝在哪一边，都不保险。
 
　　所以，对Google而言，最保险的做法就是脚踏两只船——在台面上，继续走Google模式；在台面下，暗中准备苹果模式。不管哪种模式占优，Google都可以左右逢源。
 
　　但是，暗中尝试苹果模式，风险是极大滴。其一，Google没有搞硬件的基础；其二，走苹果就意味着得罪硬件厂商（万一苹果的路线没走好，还把原先的硬件厂商都得罪了，那成了偷鸡不着蚀把米）。
 　　对于第一个难点，在买下Moto之后，已经迎刃而解——因为Moto是知名硬件厂商，搞硬件的基础雄厚。
 　　对于第二个难点，Google的如意算盘是这样滴：在台面上，Android依然是开放系统，免费给各大厂商用，以此来维持良好的关系。万一某个硬件厂商发现Google在搞硬件，它也未必会抛弃Android而投靠Windows Phone。毕竟这些硬件厂商已经在Android方面投入了巨资，舍不得放弃。而微软方面，由于微软已经跟诺基亚建立了深度合作关系，其它硬件厂商如果投靠微软，也只能当二等公民。所以，目前Android阵营的硬件厂商，即使发现Google在搞手机，也只好忍气吞声。
 
　　综上所述，Google并购Moto，除了能得到专利武器，以便保障整个Android的生态环境不被扼杀，还让Google可以同时押宝在两种商业模式上。有了这两手准备，Google在移动市场的胜算会大幅提高。
 
--------------------------------------------------------------------------------

版权声明
 本博客所有的原创文章，作者皆保留版权。转载必须包含本声明，保持本文完整，并以超链接形式注明作者编程随想和本文原始地址：
 http://program-think.blogspot.com/2011/08/google-acquire-motorola.html
 
更多 

上一篇：开源点评：ZeroMQ简介
下一篇：如何用GreaseMonkey扩展Google Reader
 . 
顶47踩0. 


查看评论
 






* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场
 







核心技术类目

 全部主题 数据挖掘 SOA UML 开放平台 HTML5 开源 移动开发 iOS Android移动游戏 Windows Phone JavaScript CSS 游戏引擎 云计算 大数据 Hadoop OpenStack云平台 PHP MongoDB JSON Xcode Node.js 前端开发 神经网络 安全 Java .NET MySQL textview BigTable web框架 SQL Redis CouchDB Linux 可穿戴计算 NoSQL Ruby API GPL XAML ASP.NET 前端开发 虚拟化 框架 机器学习 数据中心 IE10 敏捷 集群
 




个人资料 

program_think 




访问：672816次
积分：7858分
排名：第468名
 . 原创：126篇
转载：0篇
译文：0篇
评论：1119条
 . 
俺的邮箱，欢迎来信 program.think@gmail.com
 
俺的几个博客/站点 博客主站点（需翻墙） 
博客的全文RSS，欢迎订阅 
俺的Google＋，欢迎圈养 
俺的Twitter，欢迎Follow 
俺的技术博客（就是这里）
俺的收藏（需翻墙） 
俺的GoogleReader分享
 
文章分类 个人成长(25) 
C++(16) 
Java(13) 
Python(7) 
业界评论(8) 
书评(6) 
信息安全(17) 
开源项目(9) 
架构设计(6) 
软件工程(13) 
性能优化(6) 
多线程(5) 
网络(4) 
心理学(9) 
管理(9) 
政治(3) 
职场点滴(5) 
软件介绍(2) 

文章搜索

. 
推荐"编程技术"帖(需翻墙) 如何选择IT技术书籍 
架构设计：生产者/消费者模式 
为什么俺推荐Python(系列) 
架构设计：进程还是线程？ 
C＋＋的移植性和跨平台开发(系列) 
C＋＋对象是怎么死的？(系列) 
Java新手的通病(系列) 

推荐"个人成长"帖(需翻墙) 如何成为优秀开发人员(系列)
学习技术的三部曲：What,How,Why 
书评：你的灯亮着吗？——找到问题的真正所在
学会透过现象看本质 

推荐"职场/管理"帖(需翻墙) 招聘的误区 
俺的招聘经验(系列) 
如何找到优秀的开发人才? 
如何发挥员工的积极性? 
如何包装个人品牌?
跳还是不跳，是一个问题
 
阅读排行 CNNIC证书的危害及各种清除方法(37484) 
俺的招聘经验[2]：考察技术 vs 考察非技术(27228) 
开源点评：ZeroMQ简介(25008) 
俺的招聘经验[4]：通过笔试答题能看出啥？(19912) 
Google收购摩托罗拉移动，仅仅是为了专利吗？(19793) 
俺的招聘经验[1]：面试 vs 笔试(16237) 
求质数算法的N种境界 (N > 10)(15479) 
俺的招聘经验[3]：开放性问题 vs 封闭性问题(14451) 
书评：中国人的性格(13839) 
用图片隐藏信息的技术实现(13816) 

评论排行 俺的招聘经验[4]：通过笔试答题能看出啥？(77) 
俺的招聘经验[2]：考察技术 vs 考察非技术(68) 
求质数算法的N种境界 (N > 10)(48) 
Google收购摩托罗拉移动，仅仅是为了专利吗？(42) 
高处不胜寒的苹果(34) 
学习技术的三部曲：WHAT、HOW、WHY(28) 
C++对象是怎么死的？进程篇(26) 
为啥俺推荐Python[3]：作为面向对象语言的Python(26) 
Java新手的通病[5]：不了解JVM(25) 
有关封装和信息隐藏的误区(25) 

文章存档 
2012年02月(1).
2012年01月(1).
2011年12月(2).
2011年11月(4).
2011年08月(2).
2011年06月(1).
2011年05月(3).
2011年04月(1).
2011年03月(3).
2011年02月(1).
2010年12月(3).
2010年11月(2).
2010年10月(1).
2010年08月(3).
2010年07月(1).
2010年06月(4).
2010年05月(2).
2010年04月(1).
2010年02月(5).
2010年01月(1).
2009年11月(1).
2009年09月(2).
2009年08月(4).
2009年07月(2).
2009年06月(5).
2009年05月(7).
2009年04月(10).
2009年03月(15).
2009年02月(22).
2009年01月(16).
 . 



. 
