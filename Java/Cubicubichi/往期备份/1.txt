package flowerweeltwo;

public class Cubicweel {

	/**
	 * @param args
	 */
	private int []front = new int[9]
			      ,back = new int[9]
			      ,left= new int[9]
			      ,right= new int[9]
			      ,top= new int[9]
			      ,bottom= new int[9];

	private int []desfront = {4,3,3,6,1,1,6,1,1}
	, desback = {4,4,3,5,2,2,5,2,2}
	, desleft = {5,2,2,4,3,3,4,3,3}
	,desright = {6,1,1,4,4,3,4,4,3}
	,destop = {2,5,5,6,5,5,6,1,1}
	,desbottom = {2,6,6,2,6,6,5,5,1};
	
	

	public void getsituations()
	{
		int i = 0;
		System.out.println("here you need to teel me the order I ought to know:");
        int []front = {1,1,1,1,1,1,1,1,1};    // here we make the rule that the 1 correspond to front
        int []back =  {2,2,2,2,2,2,2,2,2};     // 2 correspond to back
        int []left =  {3,3,3,3,3,3,3,3,3};     // 3 correspond to left
        int []right = {4,4,4,4,4,4,4,4,4};    // 4 correspond to right
        int []top =   {5,5,5,5,5,5,5,5,5};      // 5 correspond to top
        int []bottom ={6,6,6,6,6,6,6,6,6};   // 6 correspond to bottom
		for(i=0;i<9;i++)
		{
			this.front[i]=front[i];
			this.back[i]=back[i];
			this.left[i]=left[i];
			this.right[i]=right[i];
            this.top[i]=top[i];
            this.bottom[i]=bottom[i];
		}
		System.out.println("Thank you, I have got the situations!");
	}
	
	public void rotatefrontside(int j)
	{
		                                                // here we make the rule that the rotate will be single-track,and will be left-handed
		                                                // j correspond to the time you want it to rotate
		int k = 0;                                      
		int i = 0; 
		int w = 0;
		int []map = {3,6,9,2,5,8,1,4,7};
		int []mapsecond = {9,8,7,3,6,9,1,2,3,7,4,1};
		int []linshi = {0,0,0};
		for(k=0;k<j;k++){			
		int []jiaohuan = {0,0,0,0,0,0,0,0,0};	
		for(w=0;w<9;w++)
		{
			jiaohuan[w] = this.front[w];
		}
		for(i=0;i<9;i++)
		{
			this.front[i] = jiaohuan[map[i]-1];
		}
		for(i=0;i<3;i++)
		{
			linshi[i] = this.top[mapsecond[i]-1];
			this.top[mapsecond[i]-1] = this.right[mapsecond[i+9]-1];
			this.right[mapsecond[i+9]-1] = this.bottom[mapsecond[i+6]-1];
			this.bottom[mapsecond[i+6]-1] = this.left[mapsecond[i+3]-1];
			this.left[mapsecond[i+3]-1] = linshi[i];
		
		}
		}
		
	}
	public void rotatebackside(int j)
	{
		int k = 0;                                      
		int i = 0; 
		int w = 0;
		int []map = {3,6,9,2,5,8,1,4,7};
		int []mapsecond = {1,2,3,3,6,9,9,8,7,7,4,1};
		int []linshi = {0,0,0};
		for(k=0;k<j;k++){
			int []jiaohuan = {0,0,0,0,0,0,0,0,0};	
			for(w=0;w<9;w++)
			{
				jiaohuan[w] = this.back[w];
			}
			for(i=0;i<9;i++)
			{
				this.back[i] = jiaohuan[map[i]-1];
			}
		for(i=0;i<3;i++)
		{
			linshi[i] = this.top[mapsecond[i]-1];
			this.top[mapsecond[i]-1] = this.left[mapsecond[i+9]-1];
			this.left[mapsecond[i+9]-1] = this.bottom[mapsecond[i+6]-1];
			this.bottom[mapsecond[i+6]-1] = this.right[mapsecond[i+3]-1];
			this.right[mapsecond[i+3]-1] = linshi[i];
		
		}
		}
	}
	public void rotateleftside(int j)
	{
		int k = 0;                                      
		int i = 0; 
		int w = 0;
		int []map = {3,6,9,2,5,8,1,4,7};
		int []mapsecond = {7,4,1,3,6,9,7,4,1,7,4,1};
		int []linshi = {0,0,0};
		for(k=0;k<j;k++){
			int []jiaohuan = {0,0,0,0,0,0,0,0,0};	
			for(w=0;w<9;w++)
			{
				jiaohuan[w] = this.left[w];
			}
			for(i=0;i<9;i++)
			{
				this.left[i] = jiaohuan[map[i]-1];
			}
		for(i=0;i<3;i++)
		{
			linshi[i] = this.top[mapsecond[i]-1];
			this.top[mapsecond[i]-1] = this.front[mapsecond[i+9]-1];
			this.front[mapsecond[i+9]-1] = this.bottom[mapsecond[i+6]-1];
			this.bottom[mapsecond[i+6]-1] = this.back[mapsecond[i+3]-1];
			this.back[mapsecond[i+3]-1] = linshi[i];
		
		}
		}
	}
	public void rotaterightside(int j)
	{
		int k = 0;                                      
		int i = 0; 
		int w = 0;
		int []map = {3,6,9,2,5,8,1,4,7};
		int []mapsecond = {3,6,9,3,6,9,3,6,9,7,4,1};
		int []linshi = {0,0,0};
		for(k=0;k<j;k++){
			int []jiaohuan = {0,0,0,0,0,0,0,0,0};	
			for(w=0;w<9;w++)
			{
				jiaohuan[w] = this.right[w];
			}
			for(i=0;i<9;i++)
			{
				this.right[i] = jiaohuan[map[i]-1];
			}
		for(i=0;i<3;i++)
		{
			linshi[i] = this.top[mapsecond[i]-1];
			this.top[mapsecond[i]-1] = this.back[mapsecond[i+9]-1];
			this.back[mapsecond[i+9]-1] = this.bottom[mapsecond[i+6]-1];
			this.bottom[mapsecond[i+6]-1] = this.front[mapsecond[i+3]-1];
			this.front[mapsecond[i+3]-1] = linshi[i];
		
		}
		}
	}
	public void rotatetopside(int j)
	{
		int k = 0;                                      
		int i = 0;
		int w = 0;
		int []map = {3,6,9,2,5,8,1,4,7};
		int []mapsecond = {1,2,3,1,2,3,1,2,3,1,2,3};
		int []linshi = {0,0,0};
		for(k=0;k<j;k++){
			int []jiaohuan = {0,0,0,0,0,0,0,0,0};	
			for(w=0;w<9;w++)
			{
				jiaohuan[w] = this.top[w];
			}
			for(i=0;i<9;i++)
			{
				this.top[i] = jiaohuan[map[i]-1];
			}
		for(i=0;i<3;i++)
		{
			linshi[i] = this.back[mapsecond[i]-1];
			this.back[mapsecond[i]-1] = this.right[mapsecond[i+9]-1];
			this.right[mapsecond[i+9]-1] = this.front[mapsecond[i+6]-1];
			this.front[mapsecond[i+6]-1] = this.left[mapsecond[i+3]-1];
			this.left[mapsecond[i+3]-1] = linshi[i];
		
		}
		}
	}
	public void rotatebottomside(int j)
	{
		int k = 0;                                      
		int i = 0; 
		int w = 0;
		int []map = {3,6,9,2,5,8,1,4,7};
		int []mapsecond = {9,8,7,9,8,7,9,8,7,9,8,7};
		int []linshi = {0,0,0};
		for(k=0;k<j;k++){
			int []jiaohuan = {0,0,0,0,0,0,0,0,0};	
			for(w=0;w<9;w++)
			{
				jiaohuan[w] = this.bottom[w];
			}
			for(i=0;i<9;i++)
			{
				this.bottom[i] = jiaohuan[map[i]-1];
			}
		for(i=0;i<3;i++)
		{
			linshi[i] = this.front[mapsecond[i]-1];
			this.front[mapsecond[i]-1] = this.right[mapsecond[i+9]-1];
			this.right[mapsecond[i+9]-1] = this.back[mapsecond[i+6]-1];
			this.back[mapsecond[i+6]-1] = this.left[mapsecond[i+3]-1];
			this.left[mapsecond[i+3]-1] = linshi[i];
		
		}
		}
	}
	
	
	public void printresult()
	{
		int i = 0;
		int j = 0;
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				System.out.print(this.front[j+i*3]+"   ");
			}
			System.out.print("\n");
		}
		System.out.print("\n");
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				System.out.print(this.back[j+i*3]+"   ");
			}
			System.out.print("\n");
		}
		System.out.print("\n");
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				System.out.print(this.left[j+i*3]+"   ");
			}
			System.out.print("\n");
		}
		System.out.print("\n");
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				System.out.print(this.right[j+i*3]+"   ");
			}
			System.out.print("\n");
		}
		System.out.print("\n");
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				System.out.print(this.top[j+i*3]+"   ");
			}
			System.out.print("\n");
		}
		System.out.print("\n");
		for(i=0;i<3;i++)
		{
			for(j=0;j<3;j++)
			{
				System.out.print(this.bottom[j+i*3]+"   ");
			}
			System.out.print("\n");
		}
	}
	
	
	public int ruler()
	{
		int result = 0;
		int i = 0;
		for(i=0;i<9;i++)
		{
			
			if(this.front[i]==this.front[4])
			{
				result++;
			}
			if(this.back[i]==this.back[4])
			{
				result++;
			}
			if(this.left[i]==this.left[4])
			{
				result++;
			}
			if(this.right[i]==this.right[4])
			{
				result++;
			}
			if(this.top[i]==this.top[4])
			{
				result++;
			}
			if(this.bottom[i]==this.bottom[4])
			{
				result++;
			}
			                             // for extra tests
			if((i==1|i==3|i==5|i==7)&this.back[i]==this.back[4])
			{
				result += 10;
			}
			
			
		}
		return result;
	}
	
	
	public int rulersecond()
	{
		int i = 0;
		int result = 0;
		for(i=0;i<9;i++)
		{
			if(this.desfront[i]==this.front[i])
				result++;
			if(this.desback[i]==this.back[i])
				result++;
			if(this.desleft[i]==this.left[i])
				result++;
			if(this.desright[i]==this.right[i])
				result++;
			if(this.destop[i]==this.top[i])
				result++;
			if(this.desbottom[i]==this.bottom[i])
				result++;
		}
		return result; 
	}
	
	public void engineone(int forjisuan)
	{
		int bijiao = forjisuan;
		int j = 0;
		for(j=1;j<4;j++)
		{
			this.rotatefrontside(j);
			if(this.rulersecond()>=bijiao)
			{
				break;
			}
			else
			{
				this.rotatefrontside(4-j);
			}
			
			this.rotatebackside(j);
			if(this.rulersecond()>=bijiao)
			{
				break;
			}
			else
			{
				this.rotatebackside(4-j);
			}
			
			this.rotateleftside(j);
			if(this.rulersecond()>=bijiao)
			{
				break;
			}
			else
			{
				this.rotateleftside(4-j);
			}
			
			this.rotaterightside(j);
			if(this.rulersecond()>=bijiao)
			{
				break;
			}
			else
			{
				this.rotaterightside(4-j);
			}
			
			this.rotatetopside(j);
			if(this.rulersecond()>=bijiao)
			{
				break;
			}
			else
			{
				this.rotatetopside(4-j);
			}
			
			this.rotatebottomside(j);
			if(this.rulersecond()>=bijiao)
			{
				break;
			}
			else
			{
				this.rotatebottomside(4-j);
			}
		}
	}
	
	
	public void toolrotateforenginetest(int i,int j)
	{
		if(i==0)
            this.rotatefrontside(j);
    	    if(i==1)
    	    this.rotateleftside(j);
    	    if(i==2)
    	    this.rotatebackside(j);
    	    if(i==3)
    	    this.rotaterightside(j);
	
	}
	
	
	public void enginenewtest()
	{    //  Æ´Ê®×Ö
	   
	   while(!(this.bottom[1]==this.bottom[4]&&this.front[7]==this.front[4]&&this.bottom

	[3]==this.bottom[4]&&this.left[7]==this.left[4]&&this.bottom[5]==this.bottom[4]

	&&this.right[7]==this.right[4]&&this.bottom[7]==this.bottom[4]&&this.back[7]

	==this.back[4])){

          this.printresult();
		   int []map_of_bottom = {1,3,7,5};
		   int []map_of_top = {7,3,1,5};
	        // µ×ÃæÀã¿éÎªµ×ÃæÉ«Î»ÖÃ²»¶Ô
		   int n = 0;
		   int i = 0;
		for(i=0;i<4;i++){
		    int []forthissur = new int[9];
		    int []forthissursecond = new int[9];
		    int []forthissurthird = new int[9];
		    if(i==0)
		    forthissur = this.front;
		    if(i==1)
		    forthissur = this.left;
		    if(i==2)
		    forthissur = this.back;
		    if(i==3)
		    forthissur = this.back;
		    
		    if((i+n)%4==0)
			forthissursecond = this.front;
		    if((i+n)%4==1)
		    forthissursecond = this.left;
		    if((i+n)%4==2)
		    forthissursecond = this.back;
		    if((i+n)%4==3)
		    forthissursecond = this.back;
			    
			 if((i+n+1)%4==0)
	 		 forthissurthird = this.front;
			 if((i+n+1)%4==1)
	   		 forthissurthird = this.left;
	     	 if((i+n+1)%4==2)
		     forthissurthird = this.back;
			 if((i+n+1)%4==3)
		     forthissurthird = this.back;
		    
		      //µ×ÃæÀâ¿éÎªµ×ÃæÉ«Î»ÖÃ²»¶Ô
	        if(this.bottom[map_of_bottom[i]]==this.bottom[4]&&forthissur[7]!=forthissur[4])
	          {
	        	    this.toolrotateforenginetest(i,2);		        	   
	          }
	    
	      /*  
	        
	        // µ×ÃæÀâ¿éÔÚ¶¥ÃæµÄÇé¿ö
	        if(this.top[map_of_top[i]]==this.bottom[4])
	        {
	        	n=0;
	        	while(forthissursecond[4]!=forthissursecond[1])
	        	{
	        		this.rotatetopside(1);
	        		n++;
	        		    if((i+n)%4==0)
	        			forthissursecond = this.front;
	        		    if((i+n)%4==1)
	        		    forthissursecond = this.left;
	        		    if((i+n)%4==2)
	        		    forthissursecond = this.back;
	        		    if((i+n)%4==3)
	        		    forthissursecond = this.back;
	        	}
	        	this.toolrotateforenginetest((i+n)%4,2);	
	        }
	        
	        
	        //²àÃæÉÏÀâÊÇµ×ÃæÉ«µÄÇé¿ö
	        if(forthissur[1]==this.bottom[4])
	        {
	        	n=0;
	        	while(forthissurthird[4]!=this.top[map_of_top[(i+n)/4]])
	        	{
	        		this.rotatetopside(1);
	        		n++;
	        		if((i+n+1)%4==0)
	        			forthissursecond = this.front;
	        		    if((i+n+1)%4==1)
	        		    forthissursecond = this.left;
	        		    if((i+n+1)%4==2)
	        		    forthissursecond = this.back;
	        		    if((i+n+1)%4==3)
	        		    forthissursecond = this.back;
	        	}
	        	this.toolrotateforenginetest((i+n)%4,3);
	        	this.toolrotateforenginetest((i+n+1)%4,1);
	        	this.toolrotateforenginetest((i+n)%4,1);
	        }
	        
	        //²àÃæ×óÀâÊÇµ×ÃæÉ«µÄÇé¿ö
	        if(forthissur[3]==this.bottom[4])
	        {
	        	this.toolrotateforenginetest((i+1)%4,3);
	        	this.rotatetopside(1);
	        	this.toolrotateforenginetest((i+1)%4,1);
	        }
	        
	        //²àÃæÓÒÀâÊÇµ×ÃæÉ«µÄÇé¿ö
	        if(forthissur[5]==this.bottom[4])
	        {
	        	this.toolrotateforenginetest((i+3)%4, 1);
	        	this.rotatetopside(1);
	        	this.toolrotateforenginetest((i+3)%4, 3);
	        }
	        
	        //²àÃæµ×ÀâÊÇµ×ÃæÉ«µÄÇé¿ö
	        if(forthissur[7]==this.bottom[4])
	        {
	        	this.toolrotateforenginetest(i, 1);
	        	this.toolrotateforenginetest((i+1)%4, 3);
	        	this.rotatetopside(1);
	        	this.toolrotateforenginetest((i+1)%4, 1);
	        	this.toolrotateforenginetest(i, 3);
	        }
       
	  */      
	        
	      }
      
	   	   
	   }
	     

	}
	
	
	
	
	
	public void enginefourth()
	{
		
	}
	
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
        Cubicweel forsxr = new Cubicweel();
     
        forsxr.getsituations();
                                               //  rotate family
    
        forsxr.rotateleftside(1);
    
        forsxr.rotatebackside(2);
       /*
        forsxr.rotatetopside(1);
        forsxr.rotatefrontside(2);
        forsxr.rotatetopside(3);
    
        forsxr.rotateleftside(2);
        forsxr.rotatebackside(3);
        
     */   
        forsxr.printresult();
        System.out.println(forsxr.rulersecond());
        
        forsxr.enginenewtest();
        forsxr.printresult();
              
        System.out.println(forsxr.rulersecond());
        }

	

}
